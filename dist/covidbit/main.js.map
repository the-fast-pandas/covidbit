{"version":3,"sources":["./src/app/business-dashboard/table-cases/table-cases.component.html","./src/app/business-dashboard/table-cases/table-cases.component.ts","./src/app/business-dashboard/business-profile/business-profile.component.ts","./src/app/business-dashboard/business-profile/business-profile.component.html","./src/app/tracker-map/graphs/bar-ontario-canada/bar-ontario-canada.component.ts","./src/app/tracker-map/graphs/bar-ontario-canada/bar-ontario-canada.component.html","./src/app/tracker-map/graphs/line-graph/line-graph.component.ts","./src/app/tracker-map/graphs/line-graph/line-graph.component.html","./src/app/login-form/login-form.component.ts","./src/app/login-form/login-form.component.html","./src/app/login-form/new-password/new-password.component.ts","./src/app/login-form/new-password/new-password.component.html","./src/app/tracker-map/news/news.component.html","./src/app/tracker-map/news/news.component.ts","./src/app/search-widget/search-widget.component.ts","./src/app/search-widget/search-widget.component.html","./src/app/login-form/reset-password/reset-password.component.ts","./src/app/login-form/reset-password/reset-password.component.html","./src/app/services/auth-services/admin.guard.ts","./src/app/tracker-map/graphs/bar-health-region-cases/bar-health-region-cases.component.ts","./src/app/tracker-map/graphs/bar-health-region-cases/bar-health-region-cases.component.html","./src/environments/environment.ts","./src/app/tracker-map/graphs/stats-canada/stats-canada.component.ts","./src/app/tracker-map/graphs/stats-canada/stats-canada.component.html","./src/app/services/api-covid-services/api.service.ts","./src/app/registration-form/registration-form.component.ts","./src/app/registration-form/registration-form.component.html","./src/app/admin-dashboard/adminSettings/business-settings/business-settings.component.ts","./src/app/admin-dashboard/adminSettings/business-settings/business-settings.component.html","./src/app/static-pages/about-us/about-us.component.ts","./src/app/static-pages/about-us/about-us.component.html","./src/app/business-dashboard/certification-form/certification-form.component.ts","./src/app/business-dashboard/certification-form/certification-form.component.html","./src/app/tracker-map/graphs/bar-health-region-mortality/bar-health-region-mortality.component.ts","./src/app/tracker-map/graphs/bar-health-region-mortality/bar-health-region-mortality.component.html","./src/app/business-user-view/business-user-view.component.ts","./src/app/business-user-view/business-user-view.component.html","./src/app/static-pages/terms/terms.component.ts","./src/app/static-pages/terms/terms.component.html","./src/app/admin-dashboard/admin-dashboard.component.html","./src/app/admin-dashboard/admin-dashboard.component.ts","./src/app/admin-dashboard/chart-business/chart-business.component.ts","./src/app/admin-dashboard/chart-business/chart-business.component.html","./src/app/tracker-map/graphs/stats/stats.component.ts","./src/app/tracker-map/graphs/stats/stats.component.html","./src/app/tracker-map/tracker-map.component.ts","./src/app/tracker-map/tracker-map.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/business-dashboard/add-case/add-case.component.ts","./src/app/business-dashboard/add-case/add-case.component.html","./src/app/services/data-services/data.service.ts","./src/app/business-dashboard/business-dashboard.component.ts","./src/app/business-dashboard/business-dashboard.component.html","./src/app/modules-ext/nebular-modules.module.ts","./src/app/static-pages/not-found/not-found.component.ts","./src/app/static-pages/not-found/not-found.component.html","./src/app/tracker-map/graphs/health-region-mortality/health-region-mortality.component.ts","./src/app/tracker-map/graphs/health-region-mortality/health-region-mortality.component.html","./src/app/tracker-map/graphs/line-graph-canada/line-graph-canada.component.ts","./src/app/tracker-map/graphs/line-graph-canada/line-graph-canada.component.html","./src/app/modules-ext/primeng-modules.module.ts","./src/app/admin-dashboard/bar-business-cases/bar-business-cases.component.ts","./src/app/admin-dashboard/bar-business-cases/bar-business-cases.component.html","./src/app/app.module.ts","./src/app/business-user-view/review/review-confirmation/review-confirmation.component.ts","./src/app/business-user-view/review/review-confirmation/review-confirmation.component.html","./src/app/business-user-view/review/review.component.ts","./src/app/business-user-view/review/review.component.html","./src/app/business-dashboard/edit-case/edit-case.component.ts","./src/app/business-dashboard/edit-case/edit-case.component.html","./src/app/admin-dashboard/adminSettings/case-settings/case-settings.component.ts","./src/app/admin-dashboard/adminSettings/case-settings/case-settings.component.html","./src/app/services/adm-services/adm.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/tracker-map/graphs/bar-ontario-canada-vaccines/bar-ontario-canada-vaccines.component.ts","./src/app/tracker-map/graphs/bar-ontario-canada-vaccines/bar-ontario-canada-vaccines.component.html","./src/app/tracker-map/ontario-canada/ontario-canada.component.ts","./src/app/tracker-map/ontario-canada/ontario-canada.component.html","./src/app/services/auth-services/auth.service.ts","./src/app/services/auth-services/authconfig.interceptor.ts","./src/app/static-pages/policy/policy.component.ts","./src/app/static-pages/policy/policy.component.html","./src/app/static-pages/home/home.component.ts","./src/app/static-pages/home/home.component.html","./src/app/app-routing.module.ts","./src/app/services/auth-services/auth.guard.ts","./src/app/globals.ts","./src/app/tracker-map/graphs/health-region-cases/health-region-cases.component.ts","./src/app/tracker-map/graphs/health-region-cases/health-region-cases.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<!--Server - CovidBit - Fast Pandas\r\n Created:  10, February, 2021, Valya Derksen-->\r\n\r\n<div class=\"container\">\r\n  <table [nbTreeGrid]=\"data\" equalColumnsWidth>\r\n    <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\r\n    <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\r\n\r\n    <ng-container nbTreeGridColumnDef=\"dateReported\">\r\n      <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef>Date reported</th>\r\n      <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data.dateReported}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container nbTreeGridColumnDef=\"status\">\r\n      <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef>Status</th>\r\n      <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data.status}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container nbTreeGridColumnDef=\"acquisition\">\r\n      <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef>Acquisition</th>\r\n      <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data.acquisition}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container nbTreeGridColumnDef=\"gender\">\r\n      <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef>Gender</th>\r\n      <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data.gender}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container nbTreeGridColumnDef=\"age\">\r\n      <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef>Age (years)</th>\r\n      <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data.age}}</td>\r\n    </ng-container>\r\n  </table>\r\n</div>","// Server - CovidBit - Fast Pandas\r\n// Created:  10, February, 2021, Valya Derksen\r\n// Modified: 01, April, 2021, Teresa Costa: backend integration, added global variables\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\ninterface Case {\r\n  dateReported: string;\r\n  status: string;\r\n  gender: string;\r\n  age: number;\r\n  acquisition: string;\r\n  items?: number;\r\n}\r\ninterface TreeNode<T> {\r\n  data: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-table-cases',\r\n  templateUrl: './table-cases.component.html',\r\n  styleUrls: ['./table-cases.component.scss']\r\n})\r\nexport class TableCasesComponent implements OnInit {\r\n\r\n  // Table settings\r\n  allColumns = [ 'dateReported', 'status', 'acquisition', 'gender', 'age'];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  data: TreeNode<Case>[] = [\r\n    {\r\n      data: { dateReported: 'Mar 13, 2021', status: 'Under Investigation', gender: 'Male',  age: 45, acquisition: 'Workplace Outbreak'},\r\n    },\r\n  ];\r\n\r\n}\r\n","// Server - CovidBit - Fast Pandas\r\n// Created:  10, February, 2021, Valya Derksen\r\n// Modified: 25, February, 2021, Teresa Costa: backend integration, added global variables\r\n\r\nimport { AfterContentChecked, ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Validators, FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\n// Local Services\r\nimport { DataService } from '../../services/data-services/data.service';\r\nimport { AuthService } from '../../services/auth-services/auth.service';\r\nimport * as myGlobals from '../../globals';\r\n\r\n@Component({\r\n  selector: 'app-business-profile',\r\n  templateUrl: './business-profile.component.html',\r\n  styleUrls: ['./business-profile.component.scss']\r\n})\r\n\r\nexport class BusinessProfileComponent implements OnInit, AfterContentChecked {\r\n\r\n  //Form Group\r\n  userProfile: FormGroup = new FormGroup({});\r\n\r\n  // Initialization Data\r\n  id: String = myGlobals.emptyField;\r\n  businessName: String = myGlobals.emptyField;\r\n  firstName: String = myGlobals.emptyField;\r\n  lastName: String = myGlobals.emptyField;\r\n  businessLocation: String = myGlobals.emptyField;\r\n  businessPhone: String = myGlobals.emptyField;\r\n  email: String = myGlobals.emptyField;\r\n  webSite: String = myGlobals.emptyField;\r\n  businessType: String = myGlobals.emptyField;\r\n\r\n  //Business Types Array\r\n  businessTypes = myGlobals.categories;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, public data: DataService, private ref: ChangeDetectorRef, public auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userProfile = new FormGroup({\r\n      businessName: new FormControl('', [Validators.required]),\r\n      firstName: new FormControl('', [Validators.required]),\r\n      lastName: new FormControl('', [Validators.required]),\r\n      businessType: new FormControl('', [Validators.required]),\r\n      businessLocation: new FormControl('', [Validators.required]),\r\n      businessPhone: new FormControl('', [Validators.required, Validators.pattern('[0-9]{3}-[0-9]{3}-[0-9]{4}')]),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      webSite: new FormControl('')\r\n    })\r\n\r\n    let id = this.activatedRoute.snapshot.paramMap.get('id');\r\n    this.data.getUserView(id)\r\n      .subscribe(\r\n        data => {\r\n          this.id = data.user._id;\r\n          this.businessName = data.user.businessName;\r\n          this.firstName = data.user.firstName;\r\n          this.lastName = data.user.lastName;\r\n          this.businessPhone = data.user.phoneNumber;\r\n          this.businessLocation = data.user.location;\r\n          this.email = data.user.loginId;\r\n          this.businessType = data.user.businessType;\r\n          this.webSite = data.user.website;\r\n        })\r\n  }\r\n\r\n  // Detects chnages many by the user\r\n  ngAfterContentChecked() {\r\n    this.ref.detectChanges();\r\n  }\r\n\r\n  // Form is submited with new changes\r\n  onSubmit() {\r\n    this.auth.editProfile(this.userProfile.value, this.id);\r\n  }\r\n\r\n  public handleAddressChange(address: any) {\r\n    this.userProfile.get('businessLocation')?.setValue(address.formatted_address);\r\n  }\r\n}","<!-- Server - CovidBit - Fast Pandas\r\n     Created:  10, February, 2021, Valya Derksen-->\r\n\r\n<nb-card>\r\n    <nb-card-body>\r\n        <h1 class=\"businessProfile-header\">Edit Profile</h1>\r\n        <div class=\"card-row\">\r\n            <div class=\"card-col\" id=\"profile-info\">\r\n                <nb-card size=\"giant\">\r\n                    <nb-card-body>\r\n                        <form [formGroup]='userProfile' (ngSubmit)=\"onSubmit()\" class=\"form-components\">\r\n\r\n                            <!-- Business name Input Field -->\r\n                            <div class=\"form-control-group\">\r\n                                <label nbLabel class=\"label\" for=\"input-businessType\">Business Name:</label>\r\n                                <input nbInput type=\"text\" id=\"input-name\" formControlName='businessName' required\r\n                                    placeholder=\"Business Name\" fullWidth fieldSize=\"large\" [(ngModel)]=\"businessName\"\r\n                                    name=\"businessName\"\r\n                                    [status]=\"userProfile.get('businessName')?.dirty ? (userProfile.get('businessName')?.invalid ? 'danger' : 'success') : 'basic'\">\r\n                                <ng-container>\r\n                                    <p class=\"caption status-danger\"\r\n                                        *ngIf=\" userProfile.hasError('required','businessName') && userProfile.get('businessName')?.touched\">\r\n                                        Business Name required!\r\n                                    </p>\r\n                                </ng-container>\r\n                            </div>\r\n\r\n                            <!-- Manager name Input Field -->\r\n                            <div class=\"form-control-group\">\r\n                                <label nbLabel class=\"label\" for=\"input-firstName\" for=\"input-lastName\">Manager:</label>\r\n                                <div>\r\n                                    <!--First name input field-->\r\n                                    <input nbInput type=\"text\" id=\"input-firstName\" formControlName='firstName' required\r\n                                        placeholder=\"First Name\" fullWidth fieldSize=\"large\" [(ngModel)]=\"firstName\"\r\n                                        name=\"firstName\"\r\n                                        [status]=\"userProfile.get('firstName')?.dirty ? (userProfile.get('firstName')?.invalid ? 'danger' : 'success') : 'basic'\">\r\n                                    <ng-container>\r\n                                        <p class=\"caption status-danger\"\r\n                                            *ngIf=\" userProfile.hasError('required','firstName') && userProfile.get('firstName')?.touched\">\r\n                                            First Name required!\r\n                                        </p>\r\n                                    </ng-container>\r\n\r\n                                    <!--Last name input field-->\r\n                                    <input nbInput type=\"text\" id=\"input-lastName\" formControlName='lastName' required\r\n                                        placeholder=\"Last Name\" fullWidth fieldSize=\"large\" [(ngModel)]=\"lastName\"\r\n                                        name=\"lastName\"\r\n                                        [status]=\"userProfile.get('lastName')?.dirty ? (userProfile.get('lastName')?.invalid ? 'danger' : 'success') : 'basic'\">\r\n                                    <ng-container>\r\n                                        <p class=\"caption status-danger\"\r\n                                            *ngIf=\" userProfile.hasError('required','lastName') && userProfile.get('lastName')?.touched\">\r\n                                            Last Name required!\r\n                                        </p>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <!-- Business Type Dropdown Menu -->\r\n                            <div class=\"form-control-group\">\r\n                                <label class=\"label\" for=\"input-password\">Business Type:\r\n                                    {{userProfile.get('businessType')?.value}}</label>\r\n                                <br>\r\n                                <nb-select placeholder=\"Business Type\" formControlName='businessType' required fullWidth\r\n                                    fieldSize=\"large\" [(ngModel)]=\"businessType\" name=\"businessType\"\r\n                                    [status]=\"userProfile.get('businessType')?.dirty ? (userProfile.get('businessType')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n                                    <nb-option *ngFor=\"let type of businessTypes\" [value]='type.name'>{{type.name}}\r\n                                    </nb-option>\r\n                                </nb-select>\r\n                                <ng-container>\r\n                                    <p class=\"caption status-danger\"\r\n                                        *ngIf=\"userProfile.hasError('required', 'businessType') && userProfile.get('businessType')?.touched\">\r\n                                        Please select a business type\r\n                                    </p>\r\n                                </ng-container>\r\n                            </div>\r\n\r\n                            <!-- Location Input Field -->\r\n                            <div class=\"form-control-group\">\r\n                                <label nbLabel class=\"label\" for=\"input-businessLocation\">Business Location:</label>\r\n                                <input class=\"locationLabel\" nbInput ngx-google-places-autocomplete\r\n                                    #placesRef=\"ngx-places\" (onAddressChange)=\"handleAddressChange($event)\"\r\n                                    id=\"input-businessLocation\" formControlName='businessLocation'\r\n                                    placeholder=\"Enter a location\" fullWidth fieldSize=\"large\"\r\n                                    [(ngModel)]=\"businessLocation\" name=\"businessLocation\" [status]=\"userProfile.get('businessLocation')?.dirty ? (!userProfile.hasError('required', 'businessLocation') ? 'success' : 'danger') :\r\n                               (userProfile.hasError('required', 'businessLocation') ? 'basic' : 'danger')\" />\r\n                                <ng-container>\r\n                                    <p class=\"caption status-danger\"\r\n                                        *ngIf=\"userProfile.hasError('required', 'businessLocation')&& userProfile.get('businessLocation')?.touched\">\r\n                                        Location required!\r\n                                    </p>\r\n                                </ng-container>\r\n                            </div>\r\n\r\n                            <!-- Phone number Input Field -->\r\n                            <div class=\"form-control-group\">\r\n                                <label nbLabel class=\"label\" for=\"input-businessPhone\">Business Phone Number:</label>\r\n                                <input nbInput type=\"tel\" id=\"input-businessPhone\" formControlName='businessPhone'\r\n                                    required placeholder=\"123-456-7890\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" fullWidth\r\n                                    fieldSize=\"large\" [(ngModel)]=\"businessPhone\" name=\"businessPhone\"\r\n                                    [status]=\"userProfile.get('businessPhone')?.dirty ? (userProfile.get('businessPhone')?.invalid ? 'danger' : 'success') : 'basic'\">\r\n                                <ng-container>\r\n                                    <p class=\"caption status-danger\"\r\n                                        *ngIf=\"userProfile.hasError('required', 'businessPhone') && userProfile.get('businessPhone')?.touched\">\r\n                                        Phone Number required!\r\n                                    </p>\r\n                                    <p class=\"caption status-danger\"\r\n                                        *ngIf=\"userProfile.hasError('pattern', 'businessPhone')\">\r\n                                        Phone Number should be a valid one!\r\n                                    </p>\r\n                                </ng-container>\r\n                            </div>\r\n\r\n                            <!-- Email Input Field -->\r\n                            <div class=\"form-control-group\">\r\n                                <label nbLabel class=\"label\" for=\"input-email\">Email:</label>\r\n                                <input nbInput id=\"input-name\" type=\"email\" formControlName=\"email\" required\r\n                                    placeholder=\"Ex. helloworld@example.com\" fullWidth fieldSize=\"large\"\r\n                                    [(ngModel)]=\"email\" name=\"email\"\r\n                                    [status]=\"userProfile.get('email')?.dirty ? (userProfile.get('email')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n                                <ng-container>\r\n                                    <p class=\"caption status-danger\"\r\n                                        *ngIf=\"userProfile.hasError('required', 'email') && userProfile.get('email')?.touched\">\r\n                                        Email is required!\r\n                                    </p>\r\n                                    <p class=\"caption status-danger\" *ngIf=\"userProfile.hasError('email', 'email')\">\r\n                                        Email should be a valid one!\r\n                                    </p>\r\n                                </ng-container>\r\n                            </div>\r\n\r\n                            <!-- Web site Input Field -->\r\n                            <div class=\"form-control-group\">\r\n                                <label nbLabel class=\"label\" for=\"input-webSite\">Web site:</label>\r\n                                <input nbInput id=\"input-webSite\" type=\"url\" formControlName=\"webSite\"\r\n                                    placeholder=\"https://...\" pattern=\"https://.*\" fullWidth fieldSize=\"large\"\r\n                                    [(ngModel)]=\"webSite\" name=\"webSite\"\r\n                                    [status]=\"userProfile.get('webSite')?.dirty ? (userProfile.get('webSite')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n                                <ng-container>\r\n                                    <p class=\"caption status-danger\"\r\n                                        *ngIf=\"userProfile.hasError('required', 'webSite') && userProfile.get('webSite')?.touched\">\r\n                                        Web Site is required!\r\n                                    </p>\r\n                                    <p class=\"caption status-danger\" *ngIf=\"userProfile.hasError('pattern', 'webSite')\">\r\n                                        Web Site should be a valid one!\r\n                                    </p>\r\n                                </ng-container>\r\n                            </div>\r\n                            <div class=\"buttons\">\r\n                                <button class=\"button\" type=\"submit\" nbButton outline status=\"success\">Save\r\n                                    Changes</button>\r\n                                <button href routerLink=\"/business-dashboard/{{id}}\" class=\"button\" type=\"submit\"\r\n                                    nbButton outline status=\"danger\">Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </nb-card-body>\r\n                </nb-card>\r\n            </div>\r\n        </div>\r\n    </nb-card-body>\r\n</nb-card>","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api-covid-services/api.service';\r\nimport * as myGlobals from '../../../globals';\r\n\r\n@Component({\r\n  selector: 'app-bar-ontario-canada',\r\n  templateUrl: './bar-ontario-canada.component.html',\r\n  styleUrls: ['./bar-ontario-canada.component.scss']\r\n})\r\nexport class BarOntarioCanadaComponent implements OnInit {\r\n  basicData: any;\r\n  basicOptions: any;\r\n\r\n  activeCases: any = 0;\r\n  activeCasesOntario: any;\r\n  totalDeaths: any = 0;\r\n  totalDeathsOntario: any;\r\n  totalCases: any = 0;\r\n  totalCasesOntario: any;\r\n  totalRecovery: any = 0;\r\n  totalRecoveryOntario: any;\r\n\r\n  totalData: any;\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.apiService.getAllData().subscribe((data) => { //Call COVID API\r\n      this.totalData = data;\r\n      this.countDataOntario();\r\n      this.countData();\r\n      this.basicData = {\r\n        labels: [ 'Total Cases', 'Active Cases', 'Recoveries', 'Deaths'],\r\n        datasets: [\r\n          {\r\n            label: 'Canada',\r\n            backgroundColor: myGlobals.background[1],\r\n            data: [ this.totalCases, this.activeCases, this.totalRecovery, this.totalDeaths]\r\n          },\r\n          {\r\n            label: 'Ontario',\r\n            backgroundColor:  myGlobals.background[3],\r\n            data: [ this.totalCasesOntario, this.activeCasesOntario,  this.totalRecoveryOntario, this.totalDeathsOntario]\r\n          }\r\n        ]\r\n      };\r\n    })\r\n  }\r\n  countDataOntario() {\r\n    for (var i = 0; i <= this.totalData.summary.length - 1; i++) {  \r\n      if (this.totalData.summary[i].province === \"Ontario\") {\r\n        this.activeCasesOntario = this.totalData.summary[i].active_cases;\r\n        this.totalCasesOntario = this.totalData.summary[i].cumulative_cases;\r\n        this.totalDeathsOntario = this.totalData.summary[i].cumulative_deaths;\r\n        this.totalRecoveryOntario = this.totalData.summary[i].cumulative_recovered;\r\n      }\r\n    }\r\n  }\r\n\r\n  countData() {\r\n    let cnt = 0;\r\n    for (var i = 0; i <= this.totalData.summary.length - 1; i++) {\r\n   \r\n      this.activeCases += this.totalData.summary[i].active_cases;\r\n      this.totalCases += this.totalData.summary[i].cumulative_cases;\r\n      this.totalDeaths += this.totalData.summary[i].cumulative_deaths;\r\n      this.totalRecovery += this.totalData.summary[i].cumulative_recovered;\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n    <p-chart type=\"bar\" [data]=\"basicData\" [options]=\"basicOptions\"></p-chart>\r\n</div>","// Server - CovidBit - Fast Pandas\r\n// Created: 17, March, 2021, Teresa Costa\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../../../services/api-covid-services/api.service'\r\nimport * as echarts from 'echarts'\r\ndeclare const formatDate: any;\r\n\r\n@Component({\r\n  selector: 'app-line-graph',\r\n  templateUrl: './line-graph.component.html',\r\n  styleUrls: ['./line-graph.component.scss']\r\n})\r\nexport class LineGraphComponent implements OnInit {\r\n  //Class Variables\r\n  //API data\r\n  casesData: any;\r\n  fatalities: any;\r\n  //Chart\r\n  chart: any = (<any>echarts).format;\r\n  dataChartFatalities: Array<String> = [];\r\n  dataChartCase: Array<String> = [];\r\n  //Dates\r\n  today: Date = new Date(new Date().setDate(new Date().getDate() - 1));\r\n  sevenDays: Date = new Date(new Date().setDate(new Date().getDate() - 7));\r\n  formatToday: String = \"\";\r\n  formatSevenDays: String = \"\";\r\n\r\n  constructor(private apiService: ApiService) {\r\n    this.formatToday = formatDate(this.today);\r\n    this.formatSevenDays = formatDate(this.sevenDays);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiService.getFatalitiesCanada(this.formatSevenDays, this.formatToday).subscribe((dataMortality) => {\r\n      this.fatalities = dataMortality;\r\n      this.countFatalities();\r\n      this.apiService.getCasesCanada(this.formatSevenDays, this.formatToday).subscribe((dataCases) => {\r\n        this.casesData = dataCases;\r\n        this.countCases();\r\n        this.createGraph();\r\n      })\r\n    })\r\n  }\r\n\r\n  createGraph() {\r\n    this.chart = {\r\n      xAxis: {\r\n        type: 'category',\r\n        data: [],\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n      },\r\n      series: [\r\n        {\r\n          title: \"Fatalities\",\r\n          data: [this.dataChartFatalities[7],\r\n          this.dataChartFatalities[6],\r\n          this.dataChartFatalities[5],\r\n          this.dataChartFatalities[4],\r\n          this.dataChartFatalities[3],\r\n          this.dataChartFatalities[2],\r\n          this.dataChartFatalities[1]],\r\n          type: 'line',\r\n        },\r\n        {\r\n          title: \"Cases\",\r\n          data: [this.dataChartCase[7],\r\n          this.dataChartCase[6],\r\n          this.dataChartCase[5],\r\n          this.dataChartCase[4],\r\n          this.dataChartCase[3],\r\n          this.dataChartCase[2],\r\n          this.dataChartCase[1]],\r\n          type: 'line',\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  countFatalities() {\r\n    for (var i = 0; i <= this.fatalities.mortality.length - 1; i++) {\r\n      if (this.fatalities.mortality[i].province === \"Ontario\") {\r\n        this.dataChartFatalities.push(this.fatalities.mortality[i].cumulative_deaths)\r\n      }\r\n    }\r\n  }\r\n\r\n  countCases() {\r\n    for (var i = 0; i <= this.casesData.cases.length - 1; i++) {\r\n      if (this.casesData.cases[i].province === \"Ontario\") {\r\n        this.dataChartCase.push(this.casesData.cases[i].cumulative_cases)\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","\r\n<nb-card-body>\r\n\r\n\r\n    <div echarts [options]=\"chart\" class=\"demo-chart\"></div>\r\n\r\n</nb-card-body>\r\n\r\n\r\n","// Server - CovidBit - Fast Pandas\r\n// Created:  10, January, 2021, John Turkson, component implementation\r\n// Modified: 08, February, 2021, Teresa Costa, added integration with authentication, database\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormControl, FormGroup } from '@angular/forms'\r\nimport { Router } from '@angular/router';\r\n// Local Services\r\nimport { AuthService } from '../services/auth-services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login-form',\r\n  templateUrl: './login-form.component.html',\r\n  styleUrls: ['./login-form.component.scss']\r\n})\r\n\r\nexport class LoginFormComponent implements OnInit {\r\n\r\n  // Form Variables\r\n  loginCredentials: FormGroup = new FormGroup({});\r\n\r\n  // Alert variables\r\n  alert: Boolean = false;\r\n  serverWarning: Boolean = false;\r\n  newPassword: Boolean = false;\r\n  authWarning: Boolean = false;\r\n\r\n  constructor(public auth: AuthService, public router: Router) {\r\n    if (localStorage.getItem('server_warning') === 'true') {\r\n      this.serverWarning = true;\r\n    } else if (localStorage.getItem('new_password') === 'true') {\r\n      this.newPassword = true;\r\n    } else if (localStorage.getItem('auth_warning') === 'true') {\r\n      this.authWarning = true;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loginCredentials = new FormGroup({\r\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\r\n      password: new FormControl(\"\", [Validators.required, Validators.minLength(8)])\r\n    })\r\n    localStorage.removeItem('server_warning');\r\n    localStorage.removeItem('auth_warning');\r\n  }\r\n\r\n  // Checks for form validation\r\n  checkLoginForm() {\r\n    if (this.loginCredentials.controls.invalid) {\r\n      this.alert = true;\r\n    }\r\n    else {\r\n      this.alert = false;\r\n    }\r\n  }\r\n\r\n  // SubmitsloginForm credentials\r\n  onSubmit() {\r\n    this.auth.loginForm(this.loginCredentials.value);\r\n  }\r\n\r\n  // Closes the warning box for the server errors\r\n  onCloseServer() {\r\n    this.serverWarning = false;\r\n    this.newPassword = false;\r\n    this.authWarning = false;\r\n    localStorage.removeItem('new_password');\r\n    localStorage.removeItem('auth_warning');\r\n  }\r\n\r\n  onClose() {\r\n    this.alert = false;\r\n    this.auth.loginForm(this.loginCredentials.value).unsubscribe();\r\n    localStorage.removeItem('server_warning'); // Controls messages from server\r\n    localStorage.removeItem('auth_warning');\r\n  }\r\n}","<!-- Server - CovidBit - Fast Pandas\r\n     Created:  10, January, 2021, John Turkson, component implementation-->\r\n\r\n\r\n<nb-card>\r\n  <nb-card-body>\r\n    <h1 class=\"register-header\">Login</h1>\r\n\r\n    <form [formGroup]=\"loginCredentials\" (ngSubmit)=\"onSubmit()\" class=\"form-components\">\r\n      \r\n      <!-- Email Input Field -->\r\n      <div class=\"form-control-group\">\r\n\r\n      <nb-alert *ngIf=\"serverWarning\" status=\"danger\" closable (close)=\"onCloseServer()\">\r\n        Wrong credentials! Please enter a registered email/password.\r\n      </nb-alert>\r\n      <nb-alert *ngIf=\"newPassword\" status=\"success\" closable (close)=\"onCloseServer()\">\r\n        Please, check your email!\r\n      </nb-alert>\r\n      <nb-alert *ngIf=\"authWarning\" status=\"danger\" closable (close)=\"onCloseServer()\">\r\n        You need tologinForm first.\r\n      </nb-alert>\r\n        <label class=\"label\" for=\"input-email\">Email:</label>\r\n\r\n        <input nbInput id=\"input-name\" type=\"email\" formControlName=\"email\" placeholder=\"Email\" fullWidth\r\n          fieldSize=\"large\"\r\n          [status]=\"loginCredentials.controls.email.dirty ? (loginCredentials.controls.email.invalid ? 'danger' : 'success') : 'basic' \">\r\n\r\n        <ng-container>\r\n          <p class=\"caption status-danger\"\r\n            *ngIf=\"loginCredentials.controls.email.errors?.required && loginCredentials.controls.email.touched\">\r\n            Email is required!\r\n          </p>\r\n          <p class=\"caption status-danger\" *ngIf=\"loginCredentials.controls.email.errors?.email\">\r\n            Invalid Email!\r\n          </p>\r\n        </ng-container>\r\n\r\n      </div>\r\n\r\n      <!-- Password Input Field -->\r\n      <div class=\"form-control-group\">\r\n        <label class=\"label\" for=\"input-password\">Password:</label>\r\n\r\n        <input nbInput id=\"input-password\" type=\"password\" formControlName=\"password\" placeholder=\"Password\" fullWidth\r\n          fieldSize=\"large\"\r\n          [status]=\"loginCredentials.controls.password.dirty ? (loginCredentials.controls.password.invalid ? 'danger' : 'success') : 'basic' \">\r\n\r\n        <ng-container>\r\n          <p class=\"caption status-danger\"\r\n            *ngIf=\"loginCredentials.controls.password.errors?.required && loginCredentials.controls.password.touched\">\r\n            Password is required!\r\n          </p>\r\n        </ng-container>\r\n\r\n      </div>\r\n\r\n      <div class=\"form-control-group\">\r\n        <button class=\"button\" type=\"submit\" nbButton fullWidth outline status=\"primary\" [disabled]=\"this.loginCredentials.get('email')?.invalid || this.loginCredentials.get('password')?.invalid\">LOGIN</button>\r\n      </div>\r\n\r\n    </form>\r\n\r\n    <div class=\"form-control-group\">\r\n      <section style=\"text-align: center;\" class=\"another-action\">Forgot your password? Click \r\n        <a  class=\"text-link\" href=\"/new-password\">here</a>.</section>\r\n    </div>\r\n  </nb-card-body>\r\n</nb-card>\r\n","// Server - CovidBit - Fast Pandas\r\n// Created: 08, March, 2021, Teresa Costa\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormControl, FormGroup } from '@angular/forms'\r\nimport { Router } from '@angular/router';\r\n// Local Services\r\nimport { DataService } from '../../services/data-services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-new-password',\r\n  templateUrl: './new-password.component.html',\r\n  styleUrls: ['./new-password.component.scss']\r\n})\r\nexport class NewPasswordComponent implements OnInit {\r\n\r\n  // Form variable\r\n  loginId: FormGroup = new FormGroup({});\r\n\r\n  // Alert Control\r\n  alert: Boolean = false;\r\n  serverWarning: Boolean = false;\r\n\r\n  constructor(public data: DataService, public router: Router) { \r\n    if (localStorage.getItem('new_password_warning') === 'true') {  \r\n      this.serverWarning = true;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this. loginId = new FormGroup({\r\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\r\n    })\r\n    localStorage.removeItem('new_password_warning');\r\n  }\r\n\r\n  checkLoginForm() {\r\n    if (this. loginId.controls.invalid) {\r\n      this.alert = true;\r\n    }\r\n    else {\r\n      this.alert = false;\r\n    }\r\n  }\r\n\r\n  // Closes the warning box for the server errors\r\n  onCloseServer() {\r\n    this.serverWarning = false;\r\n    localStorage.removeItem('new_password_warning');\r\n  }\r\n\r\n  // ChecksloginForm credentials\r\n  onSubmit() {\r\n    this.data.requestNewPassword(this.loginId.value);\r\n  }\r\n\r\n  onClose() {\r\n    this.alert = false;\r\n    this.data.requestNewPassword(this.loginId.value).unsubscribe();\r\n  }\r\n\r\n}\r\n","<!-- Server - CovidBit - Fast Pandas\r\n     Created: 08, March, 2021, Teresa Costa-->\r\n\r\n<nb-card>\r\n    <nb-card-body>\r\n        <h1 class=\"register-header\">Reset Password</h1>\r\n\r\n        <form [formGroup]=\"loginId\" (ngSubmit)=\"onSubmit()\" class=\"form-components\">\r\n\r\n            <!-- Email Input Field -->\r\n            <div class=\"form-control-group\">\r\n\r\n                <nb-alert *ngIf=\"serverWarning\" status=\"danger\" closable (close)=\"onCloseServer()\">\r\n                    Email not registered.\r\n                </nb-alert>\r\n                <label class=\"label\" for=\"input-email\">Email:</label>\r\n\r\n                <input nbInput id=\"input-name\" type=\"email\" formControlName=\"email\" placeholder=\"Email\" fullWidth\r\n                    fieldSize=\"large\"\r\n                    [status]=\"loginId.controls.email.dirty ? (loginId.controls.email.invalid ? 'danger' : 'success') : 'basic' \">\r\n\r\n                <ng-container>\r\n                    <p class=\"caption status-danger\"\r\n                        *ngIf=\"loginId.controls.email.errors?.required && loginId.controls.email.touched\">\r\n                        Email is required!\r\n                    </p>\r\n                    <p class=\"caption status-danger\" *ngIf=\"loginId.controls.email.errors?.email\">\r\n                        Invalid Email!\r\n                    </p>\r\n                </ng-container>\r\n\r\n            </div>\r\n\r\n            <div class=\"form-control-group\">\r\n                <button class=\"button\" type=\"submit\" nbButton fullWidth outline status=\"primary\"\r\n                    [disabled]=\"this.loginId.get('email')?.invalid || this.loginId.get('password')?.invalid\">Send</button>\r\n            </div>\r\n\r\n        </form>\r\n    </nb-card-body>\r\n</nb-card>","<fieldset style=\"border: 2px solid lightblue;\">\r\n    <legend>Recent News</legend>\r\n    <div class=\"news-container\">\r\n      <nb-card size=\"medium\">\r\n        <nb-list>\r\n          <nb-list-item *ngFor=\"let article of articles\">\r\n            <div class=\"news-section\">\r\n              <h3><a target=\"_blank\" href={{article.url}}>{{article.title}}</a></h3>\r\n              <p>{{article.description}}</p>\r\n              <p>{{article.publishedAt | date}} </p>\r\n            </div>\r\n          </nb-list-item>\r\n        </nb-list>\r\n      </nb-card>\r\n\r\n    </div>\r\n  </fieldset>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../../services/data-services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-news',\r\n  templateUrl: './news.component.html',\r\n  styleUrls: ['./news.component.scss']\r\n})\r\nexport class NewsComponent implements OnInit {\r\n\r\n  articles: any;\r\n\r\n  constructor(public data: DataService) {\r\n    this.loadNews();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  loadNews() {\r\n    this.data.getNews().subscribe((news: any) => {\r\n      this.articles = news.articles\r\n    })\r\n  }\r\n}\r\n","// Server - CovidBit - Fast Pandas\r\n// Created: 20, February, 2021, Yevgeniya Anasheva\r\n// Modified: 01, March, 2021, Teresa Costa, backend integration\r\n\r\nimport { Component, OnInit} from '@angular/core';\r\nimport { NbSearchService } from '@nebular/theme';\r\n// Local Services\r\nimport { DataService  } from '../services/data-services/data.service'\r\nimport { BusinessName } from '../models/businessName.model';\r\nimport * as myGlobals from '../globals';\r\n\r\n@Component({\r\n  selector: 'app-search-widget',\r\n  templateUrl: './search-widget.component.html',\r\n  styleUrls: ['./search-widget.component.scss']\r\n})\r\nexport class SearchWidgetComponent implements OnInit {\r\n\r\n  searchQuery: any = myGlobals.emptyField;\r\n  businessName: BusinessName = { name: myGlobals.emptyField };\r\n\r\n  constructor(private searchService: NbSearchService, public data: DataService) { \r\n    this.searchService.onSearchSubmit()\r\n      .subscribe((data: any) => {\r\n        this.searchQuery = data.term;\r\n        this.businessName.name = this.searchQuery;\r\n        this.data.searchUser(this.businessName);\r\n        localStorage.setItem('reload', \"true\");\r\n\r\n      })\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n}\r\n","<!-- Server - CovidBit - Fast Pandas\r\n     Created: 20, February, 2021, Yevgeniya Anasheva-->\r\n\r\n<nb-search type=\"curtain\"></nb-search>","// Server - CovidBit - Fast Pandas\r\n// Created: 08, March, 2021, Teresa Costa\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormControl, FormGroup } from '@angular/forms'\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n// Local Services\r\nimport { DataService } from '../../services/data-services/data.service';\r\nimport * as myGlobals from '../../globals';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.scss']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n  // Form variable\r\n  newPassword: FormGroup = new FormGroup({});\r\n\r\n  // Allows for access\r\n  token: String = myGlobals.emptyField;\r\n\r\n  // Alert Control\r\n  alert: Boolean = false;\r\n  serverWarning: Boolean = false;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, public data: DataService, public router: Router) {\r\n    if (localStorage.getItem('server_warning') === 'true') {\r\n      this.serverWarning = true;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.newPassword = new FormGroup({\r\n      password: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n      confirmPassword: new FormControl('', [Validators.required]),\r\n    })\r\n    this.token = this.activatedRoute.snapshot.params['token'];\r\n    this.data.checkValidNewPassword(this.token);\r\n  }\r\n\r\n  // Checks for form validation\r\n  checkLoginForm() {\r\n    if (this.newPassword.controls.invalid) {\r\n      this.alert = true;\r\n    }\r\n    else {\r\n      this.alert = false;\r\n    }\r\n  }\r\n\r\n  // SubmitsloginForm credentials\r\n  onSubmit() {\r\n    this.data.setNewPassword(this.newPassword.value, this.token);\r\n  }\r\n\r\n  onClose() {\r\n    this.alert = false;\r\n    this.data.setNewPassword(this.newPassword.value, this.token).unsubscribe();\r\n  }\r\n  \r\n}","<!-- Server - CovidBit - Fast Pandas\r\n     Created: 08, March, 2021, Teresa Costa-->\r\n\r\n<nb-card>\r\n    <nb-card-body>\r\n        <h1 class=\"register-header\">Reset Password</h1>\r\n\r\n        <form [formGroup]=\"newPassword\" (ngSubmit)=\"onSubmit()\" class=\"form-components\">\r\n\r\n            <!-- Password Input Field -->\r\n          <div class=\"form-control-group\">\r\n            <label class=\"label\" for=\"input-password\">Password:</label>\r\n\r\n            <input nbInput id=\"input-password\" type=\"password\" name=\"password\" formControlName='password'\r\n              placeholder=\"Password\" fullWidth fieldSize=\"large\"\r\n              [status]=\"newPassword.get('password')?.dirty ? (newPassword.get('password')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n\r\n            <ng-container>\r\n              <p class=\"caption status-danger\"\r\n                *ngIf=\"newPassword.hasError('required', 'password') && newPassword.get('password')?.touched\">\r\n                Password is required!\r\n              </p>\r\n              <p class=\"caption status-danger\" *ngIf=\"newPassword.hasError('minlength', 'password')\">\r\n                Password must be at least 8 characters\r\n              </p>\r\n            </ng-container>\r\n\r\n          </div>\r\n\r\n          <!-- Confirm Password Input Field -->\r\n          <div class=\"form-control-group\">\r\n            <label class=\"label\" for=\"input-confirmPassword\">Confirm Password:</label>\r\n\r\n            <input nbInput id=\"input-confirmPassword\" name=\"confirmPassword\" type=\"password\"\r\n              formControlName='confirmPassword' placeholder=\"Confirm Password\" fullWidth fieldSize=\"large\"\r\n              [status]=\"newPassword.get('confirmPassword')?.dirty ? \r\n          (newPassword.get('confirmPassword')?.invalid || newPassword.get('password')?.value !=  newPassword.get('confirmPassword')?.value ? 'danger' : 'success') : 'basic' \">\r\n\r\n            <ng-container>\r\n              <p class=\"caption status-danger\"\r\n                *ngIf=\"newPassword.hasError('required', 'confirmPassword') && newPassword.get('confirmPassword')?.touched\">\r\n                Password Confirmation Required!\r\n              </p>\r\n              <p class=\"caption status-danger\"\r\n                *ngIf=\"newPassword.get('password')?.value != newPassword.get('confirmPassword')?.value && !newPassword.hasError('required', 'accounrDetails.confirmPassword')\">\r\n                Password don't match\r\n              </p>\r\n            </ng-container>\r\n\r\n          </div>\r\n\r\n            <div class=\"form-control-group\">\r\n                <button class=\"button\" type=\"submit\" nbButton fullWidth outline status=\"primary\"\r\n                    [disabled]=\"this.newPassword.get('password')?.invalid || this.newPassword.get('password')?.invalid\">Send</button>\r\n            </div>\r\n\r\n        </form>\r\n    </nb-card-body>\r\n</nb-card>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n\r\n  constructor(public auth: AuthService, public router: Router) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.auth.isAdmin !== true) {\r\n      //window.alert(\"You need administrator authentication!\");\r\n      this.router.navigate(['home']);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api-covid-services/api.service';\r\nimport { DataService } from 'src/app/services/data-services/data.service';\r\nimport * as myGlobals from '../../../globals';\r\n\r\n@Component({\r\n  selector: 'app-bar-health-region-cases',\r\n  templateUrl: './bar-health-region-cases.component.html',\r\n  styleUrls: ['./bar-health-region-cases.component.scss']\r\n})\r\nexport class BarHealthRegionCasesComponent implements OnInit {\r\n\r\n  stackedData: any;\r\n  stackedOptions: any;\r\n\r\n  chartTotalCount: any = 0;\r\n  chartRegion: any[] = [];\r\n\r\n  totalData: any;\r\n  totalToronto: any;\r\n  totalPeel: any;\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.apiService.getHealthRegion(\"24-03-2021\").subscribe((data) => { //Call COVID API\r\n      this.totalData = data;\r\n      this.countTotalCases();\r\n      this.countRegion(\"Toronto\");\r\n      this.countRegion(\"Peel\");\r\n      this.countRegion(\"York\");\r\n      this.stackedData = {\r\n        labels: ['Toronto', 'Peel', 'York'],\r\n        datasets: [{\r\n          type: 'bar',\r\n          label: 'Ontario',\r\n          backgroundColor: \"#4DA8DA\",\r\n\r\n          data: [this.chartTotalCount, this.chartTotalCount, this.chartTotalCount]\r\n        }, {\r\n          type: 'bar',\r\n          label: 'Specific Region',\r\n          backgroundColor: \"#203647\",\r\n          data: [\r\n            this.chartRegion[0],  this.chartRegion[1],  this.chartRegion[2]\r\n          ]\r\n        },]\r\n      };\r\n\r\n      this.stackedOptions = {\r\n        tooltips: {\r\n          mode: 'index',\r\n          intersect: false\r\n        },\r\n        responsive: true,\r\n        scales: {\r\n          xAxes: [{\r\n            stacked: true,\r\n          }],\r\n          yAxes: [{\r\n            stacked: true\r\n          }]\r\n        }\r\n      };\r\n\r\n\r\n    })\r\n  }\r\n\r\n  countTotalCases() {\r\n    let cnt = 0;\r\n    for (var i = 0; i <= this.totalData.cases.length - 1; i++) {\r\n      cnt += this.totalData.cases[i].cumulative_cases;\r\n    }\r\n    this.chartTotalCount = cnt;\r\n  }\r\n\r\n  countRegion(myRegion) {\r\n    let cnt = 0;\r\n    for (var i = 0; i <= this.totalData.cases.length - 1; i++) {\r\n      if (this.totalData.cases[i].health_region === myRegion) {\r\n        cnt = this.totalData.cases[i].cumulative_cases;\r\n        this.chartRegion.push(cnt);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n","\r\n    <p-chart type=\"bar\" [data]=\"stackedData\" [options]=\"stackedOptions\"></p-chart>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api-covid-services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-stats-canada',\r\n  templateUrl: './stats-canada.component.html',\r\n  styleUrls: ['./stats-canada.component.scss']\r\n})\r\nexport class StatsCanadaComponent implements OnInit {\r\n  caseInformation: any;\r\n  currentDate: any = 0;\r\n  totalCases: any = 0;\r\n  totalCriticals: any = 0;\r\n  totalFatalities: any = 0;\r\n  totalHospitalizations: any = 0;\r\n  totalRecoveries: any = 0;\r\n  totalTests: any = 0;\r\n  totalVaccinations: any = 0;\r\n  totalVaccinated: any = 0;\r\n  totalVaccinesDistributed: any = 0;\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.apiService.getCaseData().subscribe((data) => {  //Call COVID API\r\n      this.caseInformation = data;\r\n      for (let i = 0; i < this.caseInformation.data.length; i++) {   //Check for ON (Ontario) Province Prefix\r\n        this.currentDate = this.caseInformation.data[i].date;\r\n        this.totalCases += this.caseInformation.data[i].total_cases;\r\n        this.totalCriticals += this.caseInformation.data[i].total_criticals;\r\n        this.totalFatalities += this.caseInformation.data[i].total_fatalities;\r\n        this.totalHospitalizations += this.caseInformation.data[i].total_hospitalizations;\r\n        this.totalRecoveries += this.caseInformation.data[i].total_recoveries;\r\n        this.totalTests += this.caseInformation.data[i].total_tests;\r\n        this.totalVaccinations += this.caseInformation.data[i].total_vaccinations;\r\n        this.totalVaccinated += this.caseInformation.data[i].total_vaccinated;\r\n        this.totalVaccinesDistributed += this.caseInformation.data[i].total_vaccines_distributed;\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<h4 style='color:lightblue'> {{currentDate}}</h4><br />\r\n<nb-icon icon=\"activity-outline\" style='font-size:26px;'> </nb-icon> Tests: {{totalTests | number}} <br /><br />\r\n<nb-icon icon=\"plus-outline\" style='font-size:26px;'> </nb-icon> Hospitalizations: {{totalHospitalizations | number}}\r\n<br /><br />\r\n<nb-icon icon=\"heart-outline\" style='font-size:26px;'> </nb-icon> Recoveries: {{totalRecoveries | number}} <br /><br />\r\n<nb-icon icon=\"paper-plane-outline\" style='font-size:26px;'> </nb-icon> Vaccinations: {{totalVaccinations | number}} <br /><br />","// Server - CovidBit - Fast Pandas\r\n// Created: 20, February, 2021, John Turkson\r\n// Modified: 20 March, 2021, Teresa Costa, added routes for covid api\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  corsHeaders = new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n    'Access-Control-Allow-Origin': 'http://localhost:4200/'\r\n  });\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getCaseData() {\r\n    return this.httpClient.get(`https://api.covid19tracker.ca/summary/split`,{headers: this.corsHeaders});\r\n  }\r\n  \r\n  public getFatalitiesCanada(dateAfter: any, dateBefore: any) {\r\n    return this.httpClient.get(`https://api.opencovid.ca/timeseries?stat=mortality&loc=prov&after=` + dateAfter + `&before=` + dateBefore ,{headers: this.corsHeaders});\r\n  }\r\n\r\n  public getCasesCanada(dateAfter: any, dateBefore: any) {\r\n    return this.httpClient.get(`https://api.opencovid.ca/timeseries?stat=cases&loc=prov&after=` + dateAfter + `&before=` + dateBefore ,{headers: this.corsHeaders});\r\n  }\r\n\r\n  public getHealthRegion(date: any) {\r\n    return this.httpClient.get(`https://api.opencovid.ca/timeseries?stat=cases&loc=hr&date=` + date ,{headers: this.corsHeaders});\r\n  }\r\n\r\n  public getHealthRegionFatalities(date: any) {\r\n    return this.httpClient.get(`https://api.opencovid.ca/timeseries?stat=mortality&loc=hr&date=` + date ,{headers: this.corsHeaders});\r\n  }\r\n\r\n  public getAllData() {\r\n    return this.httpClient.get(`https://api.opencovid.ca/summary`,{headers: this.corsHeaders});\r\n  }\r\n\r\n  public getLocationCoords(address: any) {\r\n    return this.httpClient.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${address}&key=AIzaSyCfGrP0EDXKbazT9t2wkaDP9aKB4ykK2AU`, {headers: this.corsHeaders});\r\n  }\r\n\r\n}\r\n","// Server - CovidBit - Fast Pandas\r\n// Created:  01, February, 2021, John Turkson\r\n// Modified: 08, February, 2021, Teresa Costa: backend integration (checks database for user, registeres a new user in database)\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormControl, FormGroup } from '@angular/forms'\r\nimport { Router } from '@angular/router';\r\n// Local Services\r\nimport { AuthService } from '../services/auth-services/auth.service';\r\nimport { DataService } from '../services/data-services/data.service';\r\nimport { SafetyMeasures } from '../models/safetyMeasures.model';\r\nimport * as myGlobals from '../globals';\r\n\r\n@Component({\r\n  selector: 'app-registration-form',\r\n  templateUrl: './registration-form.component.html',\r\n  styleUrls: ['./registration-form.component.scss']\r\n})\r\n\r\nexport class RegistrationFormComponent implements OnInit {\r\n\r\n  // Alert Control\r\n  alert: Boolean = false;\r\n  serverWarning: Boolean = false;\r\n\r\n  //Business Types Array\r\n  businessTypes = myGlobals.categories;\r\n\r\n  //Form Group\r\n  userCredentials: FormGroup = new FormGroup({});\r\n\r\n  businessLocation: String = myGlobals.emptyField;\r\n\r\n  safetyMeasures: Array<SafetyMeasures> = [];\r\n  safetyMeasure: SafetyMeasures = { title: myGlobals.emptyField, description: myGlobals.emptyField , confirmed: myGlobals.emptyField}\r\n\r\n  constructor(public auth: AuthService, public router: Router, public data: DataService) {\r\n    if (localStorage.getItem('server_warning') === 'true') {\r\n      this.serverWarning = true;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userCredentials = new FormGroup({\r\n      accountDetails: new FormGroup({\r\n        businessName: new FormControl('', [Validators.required]),\r\n        email: new FormControl('', [Validators.required, Validators.email]),\r\n        firstName: new FormControl('', [Validators.required]),\r\n        lastName: new FormControl('', [Validators.required]),\r\n        password: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n        confirmPassword: new FormControl('', [Validators.required]),\r\n        businessType: new FormControl('', [Validators.required]),\r\n      }),\r\n      businessDetails: new FormGroup({\r\n        businessPhone: new FormControl('', [Validators.required, Validators.pattern('[0-9]{3}-[0-9]{3}-[0-9]{4}')]),\r\n        businessLocation: new FormControl('', [Validators.required])\r\n      }),\r\n      safetyMeasures: new FormGroup({\r\n        title: new FormControl('', [Validators.required]),\r\n        description: new FormControl('', [Validators.required])\r\n      })\r\n    })\r\n    localStorage.removeItem('server_warning'); // Controls messages from server\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.auth.registrationForm(this.userCredentials.value, this.safetyMeasures, false);\r\n  }\r\n\r\n  checkRegistrationForm() {\r\n    if (this.userCredentials.controls.accountDetails.invalid) {\r\n      this.alert = true;\r\n    }\r\n    else {\r\n      if (this.data.getValidUser(this.userCredentials.value)) {\r\n        this.alert = false;\r\n      } else {\r\n        this.alert = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkBusinessInfoForm() {\r\n    if (this.userCredentials.controls.businessDetails.invalid) {\r\n      this.alert = true;\r\n    } else {\r\n      this.alert = false;\r\n    }\r\n  }\r\n\r\n  onAddMeasure() {\r\n    this.safetyMeasure.title = this.userCredentials.get('safetyMeasures.title')?.value;\r\n    this.safetyMeasure.description = this.userCredentials.get('safetyMeasures.description')?.value;\r\n    this.safetyMeasures.push(this.safetyMeasure);\r\n    this.userCredentials.get('safetyMeasures.title')?.reset()\r\n    this.userCredentials.get('safetyMeasures.description')?.reset()\r\n  }\r\n\r\n  public handleAddressChange(address: any) {\r\n    this.userCredentials.get('businessDetails.businessLocation')?.setValue(address.formatted_address);\r\n  }\r\n\r\n  onCloseServer() {\r\n    this.serverWarning = false;\r\n  }\r\n\r\n  onClose() {\r\n    this.alert = false;\r\n  }\r\n\r\n}","<!-- Server - CovidBit - Fast Pandas\r\n     Created:  01, February, 2021, John Turkson-->\r\n\r\n<nb-card>\r\n  <nb-card-body>\r\n    <nb-alert status=\"danger\" closable (close)=\"onClose()\" *ngIf=\"alert\">\r\n      Please fill out the entire form\r\n    </nb-alert>\r\n    <form [formGroup]='userCredentials' (ngSubmit)='onSubmit()' class=\"form-components\">\r\n      <nb-stepper orientation=\"horizontal\" disableStepNavigation linear>\r\n        <nb-step label=\"Registration\" formGroupName=\"accountDetails\"\r\n          [stepControl]=\"userCredentials.controls.accountDetails\">\r\n          <h1 class=\"register-header\">Register your Business</h1>\r\n\r\n          <!-- Bussines Name Input Field -->\r\n          <div class=\"form-control-group\">\r\n            <nb-alert *ngIf=\"serverWarning\" status=\"danger\" closable (close)=\"onCloseServer()\">\r\n              This email is already registered.\r\n            </nb-alert>\r\n            <label nbLabel class=\"label\" for=\"input-businessType\">Business Name:</label>\r\n\r\n            <input nbInput type=\"text\" id=\"input-business-name\" name=\"businessName\" formControlName='businessName'\r\n              placeholder=\"Business Name\" fullWidth fieldSize=\"large\"\r\n              [status]=\"userCredentials.get('accountDetails.businessName')?.dirty ? (userCredentials.get('accountDetails.businessName')?.invalid ? 'danger' : 'success') : 'basic'\">\r\n\r\n            <ng-container>\r\n              <p class=\"caption status-danger\"\r\n                *ngIf=\" userCredentials.hasError('required','accountDetails.businessName') && userCredentials.get('accountDetails.businessName')?.touched\">\r\n                Business Name required!\r\n              </p>\r\n            </ng-container>\r\n\r\n\r\n          </div>\r\n\r\n          <!-- First Name Input Field -->\r\n          <div class=\"form-control-group\">\r\n            <label nbLabel class=\"label\" for=\"input-firstName\">First Name:</label>\r\n\r\n            <input nbInput type=\"text\" id=\"input-firstName\" name=\"firstName\" formControlName='firstName'\r\n              placeholder=\"First Name\" fullWidth fieldSize=\"large\"\r\n              [status]=\"userCredentials.get('accountDetails.firstName')?.dirty ? (userCredentials.get('accountDetails.firstName')?.invalid ? 'danger' : 'success') : 'basic'\">\r\n\r\n            <ng-container>\r\n              <p class=\"caption status-danger\"\r\n                *ngIf=\" userCredentials.hasError('required','accountDetails.firstName') && userCredentials.get('accountDetails.firstName')?.touched\">\r\n                First Name required!\r\n              </p>\r\n            </ng-container>\r\n\r\n\r\n          </div>\r\n\r\n          <!-- Last Name Input Field -->\r\n          <div class=\"form-control-group\">\r\n            <label nbLabel class=\"label\" for=\"input-lastName\">Last Name:</label>\r\n\r\n            <input nbInput type=\"text\" id=\"input-lastName\" name=\"lastName\" formControlName='lastName'\r\n              placeholder=\"Last Name\" fullWidth fieldSize=\"large\"\r\n              [status]=\"userCredentials.get('accountDetails.lastName')?.dirty ? (userCredentials.get('accountDetails.lastName')?.invalid ? 'danger' : 'success') : 'basic'\">\r\n\r\n            <ng-container>\r\n              <p class=\"caption status-danger\"\r\n                *ngIf=\" userCredentials.hasError('required','accountDetails.lastName') && userCredentials.get('accountDetails.lastName')?.touched\">\r\n                Last Name required!\r\n              </p>\r\n            </ng-container>\r\n\r\n\r\n          </div>\r\n\r\n          <!-- Email Input Field -->\r\n          <div class=\"form-control-group\">\r\n            <label class=\"label\" for=\"input-email\">Email:</label>\r\n\r\n            <input nbInput id=\"input-name\" type=\"text\" name=\"email\" formControlName=\"email\"\r\n              placeholder=\"Ex. helloworld@example.com\" fullWidth fieldSize=\"large\"\r\n              [status]=\"userCredentials.get('accountDetails.email')?.dirty ? (userCredentials.get('accountDetails.email')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n\r\n            <ng-container>\r\n              <p class=\"caption status-danger\"\r\n                *ngIf=\"userCredentials.hasError('required', 'accountDetails.email') && userCredentials.get('accountDetails.email')?.touched\">\r\n                Email is required!\r\n              </p>\r\n              <p class=\"caption status-danger\" *ngIf=\"userCredentials.hasError('email', 'accountDetails.email')\">\r\n                Email should be a valid one!\r\n              </p>\r\n            </ng-container>\r\n\r\n          </div>\r\n\r\n          <!-- Password Input Field -->\r\n          <div class=\"form-control-group\">\r\n            <label class=\"label\" for=\"input-password\">Password:</label>\r\n\r\n            <input nbInput id=\"input-password\" type=\"password\" name=\"password\" formControlName='password'\r\n              placeholder=\"Password\" fullWidth fieldSize=\"large\"\r\n              [status]=\"userCredentials.get('accountDetails.password')?.dirty ? (userCredentials.get('accountDetails.password')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n\r\n            <ng-container>\r\n              <p class=\"caption status-danger\"\r\n                *ngIf=\"userCredentials.hasError('required', 'accountDetails.password') && userCredentials.get('accountDetails.password')?.touched\">\r\n                Password is required!\r\n              </p>\r\n              <p class=\"caption status-danger\" *ngIf=\"userCredentials.hasError('minlength', 'accountDetails.password')\">\r\n                Password must be at least 8 characters\r\n              </p>\r\n            </ng-container>\r\n\r\n          </div>\r\n\r\n          <!-- Confirm Password Input Field -->\r\n          <div class=\"form-control-group\">\r\n            <label class=\"label\" for=\"input-confirmPassword\">Confirm Password:</label>\r\n\r\n            <input nbInput id=\"input-confirmPassword\" name=\"confirmPassword\" type=\"password\"\r\n              formControlName='confirmPassword' placeholder=\"Confirm Password\" fullWidth fieldSize=\"large\"\r\n              [status]=\"userCredentials.get('accountDetails.confirmPassword')?.dirty ? \r\n          (userCredentials.get('accountDetails.confirmPassword')?.invalid || userCredentials.get('accountDetails.password')?.value !=  userCredentials.get('accountDetails.confirmPassword')?.value ? 'danger' : 'success') : 'basic' \">\r\n\r\n            <ng-container>\r\n              <p class=\"caption status-danger\"\r\n                *ngIf=\"userCredentials.hasError('required', 'accountDetails.confirmPassword') && userCredentials.get('accountDetails.confirmPassword')?.touched\">\r\n                Password Confirmation Required!\r\n              </p>\r\n              <p class=\"caption status-danger\"\r\n                *ngIf=\"userCredentials.get('accountDetails.password')?.value != userCredentials.get('accountDetails.confirmPassword')?.value && !userCredentials.hasError('required', 'accounrDetails.confirmPassword')\">\r\n                Password don't match\r\n              </p>\r\n            </ng-container>\r\n\r\n          </div>\r\n\r\n          <!-- Business Type Dropdown Menu -->\r\n          <div class=\"form-control-group\">\r\n            <label class=\"label\" for=\"input-password\">Business Type:\r\n              {{userCredentials.get('accountDetails.businessType')?.value}}</label>\r\n            <br>\r\n            <nb-select placeholder=\"Business Type\" name=\"businessType\" formControlName='businessType' fullWidth\r\n              fieldSize=\"large\"\r\n              [status]=\"userCredentials.get('accountDetails.businessType')?.dirty ? (userCredentials.get('accountDetails.businessType')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n              <nb-option *ngFor=\"let type of businessTypes\" [value]='type.name'>{{type.name}}</nb-option>\r\n            </nb-select>\r\n\r\n            <ng-container>\r\n              <p class=\"caption status-danger\"\r\n                *ngIf=\"userCredentials.hasError('required', 'accountDetails.businessType') && userCredentials.get('accountDetails.businessType')?.touched\">\r\n                Please select a business type\r\n              </p>\r\n            </ng-container>\r\n\r\n          </div>\r\n\r\n          <!-- Next Button -->\r\n          <div class=\"form-control-group\">\r\n            <button class=\"button\" type=\"button\" nbButton nbStepperNext fullWidth outline status=\"primary\"\r\n              (click)=\"checkRegistrationForm()\">NEXT</button>\r\n          </div>\r\n\r\n          <div class=\"form-control-group\">\r\n            <section style=\"text-align: center;\" class=\"another-action\"> Already have an account? <a\r\n                routerlink=\"/login-form\" class=\"text-link\" href=\"/login-form\">Log in</a></section>\r\n          </div>\r\n\r\n        </nb-step>\r\n\r\n        <nb-step label=\"Phone & Location\" formGroupName=\"businessDetails\"\r\n          [stepControl]=\"userCredentials.controls.businessDetails\">\r\n\r\n          <h1 class=\"register-header\">Business Phone & Location</h1>\r\n\r\n          <!-- Bussines Phone Number Form Field -->\r\n          <div class=\"form-control-group\">\r\n            <label nbLabel class=\"label\" for=\"input-businessPhone\">Business Phone Number:</label>\r\n\r\n            <input nbInput type=\"text\" id=\"input-businessPhone\" formControlName='businessPhone'\r\n              placeholder=\"123-456-7890\" fullWidth fieldSize=\"large\"\r\n              [status]=\"userCredentials.get('businessDetails.businessPhone')?.dirty ? (userCredentials.get('businessDetails.businessPhone')?.invalid ? 'danger' : 'success') : 'basic'\">\r\n\r\n            <ng-container>\r\n              <p class=\"caption status-danger\"\r\n                *ngIf=\"userCredentials.hasError('required', 'businessDetails.businessPhone') && userCredentials.get('businessDetails.businessPhone')?.touched\">\r\n                Phone Number required!\r\n              </p>\r\n              <p class=\"caption status-danger\"\r\n                *ngIf=\"userCredentials.hasError('pattern', 'businessDetails.businessPhone')\">\r\n                Phone Number should be a valid one!\r\n              </p>\r\n            </ng-container>\r\n\r\n          </div>\r\n          <!-- Business Location Form Field-->\r\n          <div class=\"form-control-group\">\r\n            <label nbLabel class=\"label\" for=\"input-businessLocation\">Business Location:</label>\r\n\r\n            <input class=\"locationLabel\" nbInput ngx-google-places-autocomplete #placesRef=\"ngx-places\"\r\n              (onAddressChange)=\"handleAddressChange($event)\" id=\"input-businessLocation\"\r\n              formControlName='businessLocation' placeholder=\"Enter a location\" fullWidth fieldSize=\"large\" [status]=\"userCredentials.get('businessDetails.businessLocation')?.dirty ? (!userCredentials.hasError('required', 'businessDetails.businessLocation') ? 'success' : 'danger') :\r\n            (userCredentials.hasError('required', 'businessDetails.businessLocation') ? 'basic' : 'danger')\" />\r\n\r\n            <ng-container>\r\n              <p class=\"caption status-danger\"\r\n                *ngIf=\"userCredentials.hasError('required', 'businessDetails.businessLocation')&& userCredentials.get('businessDetails.businessLocation')?.touched\">\r\n                Location required!\r\n              </p>\r\n            </ng-container>\r\n\r\n          </div>\r\n\r\n          <div class=\"stepper-buttons\">\r\n            <button class=\"button\" type=\"button\" nbButton nbStepperPrevious outline status=\"primary\">PREVIOUS</button>\r\n            <button class=\"button\" type=\"button\" nbButton nbStepperNext outline status=\"primary\"\r\n              (click)=\"checkBusinessInfoForm()\">NEXT</button>\r\n          </div>\r\n\r\n        </nb-step>\r\n\r\n        <nb-step label=\"Certification Form\" formGroupName=\"safetyMeasures\">\r\n          <h1 class=\"register-header\">Apply for Certification</h1>\r\n          <p class=\"sub-title\">COVIDBIT Small Business Certification is <strong>NOT</strong> required to register a\r\n            business. You can apply for certfication again your business profile page.</p>\r\n\r\n          <div class=\"form-control-group\">\r\n            <label nbLabel class=\"label\" for=\"input-safetyMeasureTitle\">Add safety Measure:</label>\r\n\r\n            <input nbInput type=\"text\" id=\"input-safetyMeasureTitle\" fieldSize=\"large\" formControlName=\"title\" fullWidth\r\n              placeholder=\"Name of safety Measure\">\r\n\r\n          </div>\r\n\r\n          <div class=\"form-control-group\">\r\n            <label nbLabel class=\"label\" for=\"input-safetyMeasureDescription\"></label>\r\n\r\n            <textarea nbInput type=\"text\" id=\"input-safetyMeasureDescription\" formControlName=\"description\" fullWidth\r\n              placeholder=\"Desciption of safety Measure\"></textarea>\r\n\r\n            <div class=\"stepper-buttons\" style=\"margin: 1rem;\">\r\n              <button nbButton id=\"addMeasure\" outline status=\"primary\"\r\n                [disabled]=\"this.userCredentials.get('safetyMeasures.title')?.invalid || this.userCredentials.get('safetyMeasures.description')?.invalid\"\r\n                (click)=\"onAddMeasure()\">ADD safety MEASURE</button>\r\n            </div>\r\n\r\n            <hr>\r\n\r\n          </div>\r\n\r\n          <div class=\"form-control-group\">\r\n            <div class=\"safetyMeasureList\">\r\n              <nb-accordion *ngIf=\"safetyMeasures.length > 0\">\r\n                <nb-accordion-item *ngFor=\"let measure of safetyMeasures\">\r\n                  <nb-accordion-item-header>{{measure.title}}</nb-accordion-item-header>\r\n                  <nb-accordion-item-body>{{measure.description}}</nb-accordion-item-body>\r\n                </nb-accordion-item>\r\n              </nb-accordion>\r\n              <p class=\"subtitle\" *ngIf=\"safetyMeasures.length <= 0\">No safety Measures added</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"stepper-buttons\">\r\n            <button class=\"button\" type=\"button\" nbButton nbStepperPrevious outline status=\"primary\">PREVIOUS</button>\r\n            <button class=\"button\" type=\"button\" nbButton nbStepperNext outline status=\"primary\">NEXT</button>\r\n          </div>\r\n\r\n        </nb-step>\r\n\r\n        <nb-step label=\"Completion\" [hidden]=\"true\">\r\n          <h1 class=\"register-header\">Complete you Registration</h1>\r\n          <button class=\"button\" type=\"submit\" fullWidth nbButton outline status=\"success\">Register Account</button>\r\n        </nb-step>\r\n\r\n      </nb-stepper>\r\n    </form>\r\n  </nb-card-body>\r\n</nb-card>","// Server - CovidBit - Fast Pandas\r\n// Created:  16, February, 2021, John Turkson\r\n// Modified: 04, March, 2021, Teresa Costa: backend integration, global variables\r\n//           20, March, 2021, John Turkson: improvements on backend/frontend integration\r\n//           28, March, 2021, Teresa Costa: added invitations component, delete works\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n// Local Service\r\nimport { AuthService } from '../../../services/auth-services/auth.service';\r\nimport { AdmService } from '../../../services/adm-services/adm.service';\r\n// Models\r\nimport { BusinessName } from '../../../models/businessName.model';\r\nimport { Email } from '../../../models/email.model';\r\nimport { SafetyMeasures } from '../../../models/safetyMeasures.model';\r\nimport * as myGlobals from '../../../globals';\r\n\r\n@Component({\r\n  selector: 'app-business-settings',\r\n  templateUrl: './business-settings.component.html',\r\n  styleUrls: ['./business-settings.component.scss']\r\n})\r\nexport class MapSettingsComponent implements OnInit {\r\n\r\n  //Business types\r\n  businessTypes = myGlobals.categories;\r\n\r\n  // Form instances\r\n  businessList: FormGroup = new FormGroup({});\r\n  businessCredentials: FormGroup = new FormGroup({});\r\n  businessSearch: FormGroup = new FormGroup({});\r\n  businessInvitation: FormGroup = new FormGroup({});\r\n\r\n  businessLocation = '';\r\n  emailInvitation: Email = { email: '' };\r\n  businessName: BusinessName = { name: 'empty' };\r\n\r\n  // Check boolean\r\n  alertBusinessCreated: Boolean = false;\r\n  alertBusinessRemoved: Boolean = false;\r\n  alertBusinessInvitationSent: Boolean = false\r\n  searchCheck: Boolean = false;\r\n  displayList: Boolean = false;\r\n\r\n  namesList: Array<String> = [];\r\n  idList: Array<String> = [];\r\n  safetyMeasures: Array<SafetyMeasures> = [];\r\n\r\n  constructor(private formBuilder: FormBuilder, public auth: AuthService, public adm: AdmService) {\r\n    this.businessList = this.formBuilder.group({\r\n      businesses: this.formBuilder.array([], [Validators.required])\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.businessCredentials = new FormGroup({\r\n      businessName: new FormControl('', [Validators.required]),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      businessType: new FormControl('', [Validators.required]),\r\n      website: new FormControl('', [Validators.required]),\r\n      businessPhone: new FormControl('', [Validators.required, Validators.pattern('[0-9]{3}-[0-9]{3}-[0-9]{4}')]),\r\n      businessLocation: new FormControl('', [Validators.required]),\r\n      firstName: new FormControl('', [Validators.required]),\r\n      lastName: new FormControl('', [Validators.required])\r\n    })\r\n    this.businessSearch = new FormGroup({\r\n      searchedBusiness: new FormControl('', [Validators.required])\r\n    });\r\n    this.businessInvitation = new FormGroup({\r\n      emailInvitation: new FormControl('', [Validators.required, Validators.email]),\r\n    });\r\n  }\r\n\r\n  // (onAdressChange) handler\r\n  handleAddressChange(address: any) {\r\n    this.businessCredentials.get('businessLocation')?.setValue(address.formatted_address);\r\n  }\r\n\r\n  // (ngSubmit)\r\n  addBusiness() {\r\n    this.auth.registrationForm(this.businessCredentials.value, this.safetyMeasures, true);\r\n    this.alertBusinessCreated = true;\r\n    this.businessCredentials.reset();\r\n  }\r\n\r\n  // (ngSubmit)\r\n  removeBusiness() {\r\n    this.adm.deleteUserAdm(this.idList).subscribe(\r\n      data => {\r\n        this.alertBusinessRemoved = true;\r\n        this.businessSearch.reset();\r\n        this.namesList = [];\r\n        this.idList = [];\r\n      }\r\n    );\r\n  }\r\n\r\n  // (change) handler\r\n  getCheckedValue(event: any) {\r\n    let checkArray: FormArray = this.businessList.get('businesses') as FormArray;\r\n    if (event.target.checked) {\r\n      checkArray.push(new FormControl(event.target.value));\r\n    } else {\r\n      let index: number = 0;\r\n      checkArray.controls.forEach(\r\n        (item: AbstractControl) => {\r\n          if (item.value == event.target.value) {\r\n            checkArray.removeAt(index);\r\n            return;\r\n          }\r\n          index++;\r\n        });\r\n    }\r\n  }\r\n\r\n  // (ngSubmit)\r\n  inviteBusiness() {\r\n    this.emailInvitation.email = this.businessInvitation.get('emailInvitation')?.value;\r\n    this.adm.inviteNewUser(this.emailInvitation).subscribe(\r\n      data => {\r\n        this.alertBusinessInvitationSent = true;\r\n        this.businessInvitation.reset();\r\n      }\r\n    )\r\n  }\r\n\r\n  // (ngSubmit)\r\n  searchForBusiness() {\r\n    this.namesList = [];\r\n    this.businessName.name = this.businessSearch.get('searchedBusiness')?.value;\r\n    this.adm.getUserAdm(this.businessName).subscribe(\r\n      data => {\r\n        this.getNames(data);\r\n        if (this.businessSearch.get('searchedBusiness')?.value == '') {\r\n          this.namesList = [];\r\n        }\r\n        if (this.namesList.length === 0) {\r\n          this.searchCheck = true;\r\n          this.displayList = false;\r\n        } else {\r\n          this.displayList = true;\r\n          this.searchCheck = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  // (changeTab)\r\n  tabReset() {\r\n    this.displayList = false;\r\n    this.searchCheck = false;\r\n    this.businessCredentials.reset()\r\n    this.businessSearch.get('searchedBusiness')?.setValue('');\r\n  }\r\n\r\n  // Called by searchForBusiness()\r\n  // Returns a list of names and a a list of correspondent ids\r\n  getNames(data: any) {\r\n    for (let i = 0; i < Object.keys(data).length; i++) {\r\n      if (data.users[i] !== undefined) {\r\n        if (data.users[i].businessName === this.businessSearch.get('searchedBusiness')?.value) {\r\n          this.namesList.push(data.users[i].businessName);\r\n          this.idList.push(data.users[i]._id);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Removes alert messages\r\n  onClose() {\r\n    this.alertBusinessCreated = false;\r\n    this.alertBusinessRemoved = false;\r\n    this.alertBusinessInvitationSent = false;\r\n  }\r\n\r\n}","<!-- Server - CovidBit - Fast Pandas\r\n     Created:  16, February, 2021, John Turkson -->\r\n\r\n<!-- Map Management Card -->\r\n<nb-card>\r\n  <nb-card-header>User Business Management</nb-card-header>\r\n  <nb-card-body>\r\n\r\n    <!-- Alert Block -->\r\n    <nb-alert status=\"success\" closable (close)=\"onClose()\" *ngIf=\"alertBusinessCreated\">\r\n      Business Successfully Created!\r\n    </nb-alert>\r\n    <nb-alert status=\"success\" closable (close)=\"onClose()\" *ngIf=\"alertBusinessRemoved\">\r\n      Business Successfully Removed!\r\n    </nb-alert>\r\n    <nb-alert status=\"success\" closable (close)=\"onClose()\" *ngIf=\"alertBusinessInvitationSent\">\r\n      Invitation Sent!\r\n    </nb-alert>\r\n\r\n\r\n    <!-- Map Managment Tabset -->\r\n    <nb-tabset (changeTab)=\"tabReset()\">\r\n\r\n      <!-- Add a Business Tab -->\r\n      <nb-tab tabTitle=\"Add New Business\">\r\n        <form [formGroup]='businessCredentials' (ngSubmit)=\"addBusiness()\">\r\n\r\n          <!-- First row of Fields -->\r\n          <div class=\"row\">\r\n            <div class=\"col\" style=\"text-align: center;\">\r\n              <div class=\"editor\">\r\n                <nb-form-field>\r\n                  <input nbInput type=\"text\" id=\"input-business-name\" name=\"businessName\" formControlName='businessName'\r\n                    placeholder=\"Enter Business Name\" fieldSize=\"medium\" fullWidth\r\n                    [status]=\"businessCredentials.get('businessName')?.touched ? (businessCredentials.get('businessName')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n                  <nb-icon\r\n                    *ngIf=\"businessCredentials.hasError('required','businessName') && businessCredentials.get('businessName')?.touched === true\"\r\n                    nbSuffix icon=\"alert-circle-outline\"></nb-icon>\r\n                  <nb-icon *ngIf=\"businessCredentials.get('businessName')?.valid === true\" nbSuffix\r\n                    icon=\"checkmark-outline\"></nb-icon>\r\n                </nb-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <nb-form-field>\r\n                <input nbInput type=\"text\" id=\"input-business-email\" name=\"email\" formControlName='email'\r\n                  placeholder=\"Enter Business Email\" fieldSize=\"medium\" fullWidth\r\n                  [status]=\"businessCredentials.get('email')?.touched ? (businessCredentials.get('email')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n                <nb-icon\r\n                  *ngIf=\"businessCredentials.hasError('required','email') && businessCredentials.get('email')?.touched === true\"\r\n                  nbSuffix icon=\"alert-circle-outline\"></nb-icon>\r\n                <nb-icon *ngIf=\"businessCredentials.get('email')?.valid === true\" nbSuffix icon=\"checkmark-outline\">\r\n                </nb-icon>\r\n              </nb-form-field>\r\n            </div>\r\n            <div class=\"col\">\r\n              <nb-form-field>\r\n                <nb-select formControlName=\"businessType\" placeholder=\"Select Business Type\" name=\"businessType\"\r\n                  fullWidth=\"true\" fieldSize=\"large\"\r\n                  [status]=\"businessCredentials.get('businessType')?.touched ? (businessCredentials.get('businessType')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n                  <nb-option *ngFor=\"let type of businessTypes\" [value]='type.name'>{{type.name}}</nb-option>\r\n                </nb-select>\r\n              </nb-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Second row of Fields -->\r\n          <div class=\"row\">\r\n            <div class=\"col\" style=\"text-align: center;\">\r\n              <nb-form-field>\r\n                <input nbInput type=\"text\" id=\"input-business-website\" name=\"website\" formControlName='website'\r\n                  placeholder=\"Enter Website URL\" fieldSize=\"medium\" fullWidth\r\n                  [status]=\"businessCredentials.get('website')?.touched ? (businessCredentials.get('website')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n                <nb-icon\r\n                  *ngIf=\"businessCredentials.hasError('required','website') && businessCredentials.get('website')?.touched === true\"\r\n                  nbSuffix icon=\"alert-circle-outline\"></nb-icon>\r\n                <nb-icon *ngIf=\"businessCredentials.get('website')?.valid === true\" nbSuffix icon=\"checkmark-outline\">\r\n                </nb-icon>\r\n              </nb-form-field>\r\n            </div>\r\n            <div class=\"col\">\r\n              <nb-form-field>\r\n                <input nbInput type=\"text\" id=\"input-business-phoneNumber\" name=\"phoneNumber\"\r\n                  formControlName='businessPhone' placeholder=\"Enter Phone Number (i.e 123-456-7890)\" fieldSize=\"medium\"\r\n                  fullWidth\r\n                  [status]=\"businessCredentials.get('businessPhone')?.touched ? (businessCredentials.get('businessPhone')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n                <nb-icon\r\n                  *ngIf=\"businessCredentials.hasError('required','businessPhone') && businessCredentials.get('businessPhone')?.touched === true\"\r\n                  nbSuffix icon=\"alert-circle-outline\"></nb-icon>\r\n                <nb-icon *ngIf=\"businessCredentials.get('businessPhone')?.valid === true\" nbSuffix\r\n                  icon=\"checkmark-outline\"></nb-icon>\r\n              </nb-form-field>\r\n            </div>\r\n            <div class=\"col\">\r\n              <nb-form-field>\r\n                <input formControlName=\"businessLocation\" class=\"locationLabel\" nbInput ngx-google-places-autocomplete\r\n                  #placesRef=\"ngx-places\" (onAddressChange)=\"handleAddressChange($event)\" id=\"input-businessLocation\"\r\n                  placeholder=\"Enter Business location\" fullWidth fieldSize=\"medium\"\r\n                  [status]=\"businessCredentials.get('businessLocation')?.touched ? (businessCredentials.get('businessLocation')?.invalid ? 'danger' : 'success') : 'basic' \" />\r\n                <nb-icon\r\n                  *ngIf=\"businessCredentials.hasError('required','businessLocation') && businessCredentials.get('businessLocation')?.touched === true\"\r\n                  nbSuffix icon=\"alert-circle-outline\"></nb-icon>\r\n                <nb-icon *ngIf=\"businessCredentials.get('businessLocation')?.valid === true\" nbSuffix\r\n                  icon=\"checkmark-outline\"></nb-icon>\r\n              </nb-form-field>\r\n            </div>\r\n          </div>\r\n          <br>\r\n          <div class=\"row\">\r\n            <div class=\"col\" style=\"text-align: center;\">\r\n              <nb-form-field>\r\n                <input nbInput type=\"text\" id=\"input-business-firstName\" name=\"firstName\" formControlName='firstName'\r\n                  placeholder=\"Enter First Name\" fieldSize=\"medium\" fullWidth\r\n                  [status]=\"businessCredentials.get('firstName')?.touched ? (businessCredentials.get('firstName')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n                <nb-icon\r\n                  *ngIf=\"businessCredentials.hasError('required','firstName') && businessCredentials.get('firstName')?.touched === true\"\r\n                  nbSuffix icon=\"alert-circle-outline\"></nb-icon>\r\n                <nb-icon *ngIf=\"businessCredentials.get('firstName')?.valid === true\" nbSuffix icon=\"checkmark-outline\">\r\n                </nb-icon>\r\n              </nb-form-field>\r\n            </div>\r\n            <div class=\"col\" style=\"text-align: center;\">\r\n              <nb-form-field>\r\n                <input nbInput type=\"text\" id=\"input-business-lastName\" name=\"lastName\" formControlName='lastName'\r\n                  placeholder=\"Enter Last Name\" fieldSize=\"medium\" fullWidth\r\n                  [status]=\"businessCredentials.get('lastName')?.touched ? (businessCredentials.get('lastName')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n                <nb-icon\r\n                  *ngIf=\"businessCredentials.hasError('required','lastName') && businessCredentials.get('lastName')?.touched === true\"\r\n                  nbSuffix icon=\"alert-circle-outline\"></nb-icon>\r\n                <nb-icon *ngIf=\"businessCredentials.get('lastName')?.valid === true\" nbSuffix icon=\"checkmark-outline\">\r\n                </nb-icon>\r\n              </nb-form-field>\r\n            </div>\r\n          </div>\r\n          <br>\r\n          <div class=\"buttonSlot\">\r\n            <button class=\"button\" type=\"submit\" nbButton outline status=\"success\"\r\n              [disabled]=\"this.businessCredentials.invalid\">Add Business</button>\r\n          </div>\r\n        </form>\r\n      </nb-tab>\r\n\r\n      <!-- Remove Business Tab -->\r\n      <nb-tab tabTitle=\"Remove A Business\">\r\n        <form [formGroup]=\"businessSearch\" (ngSubmit)=\"searchForBusiness()\">\r\n          <div class=\"editor\">\r\n            <nb-form-field>\r\n              <input nbInput placeholder=\"Search For Business\" id=\"businessSearch\" formControlName=\"searchedBusiness\">\r\n              <button type=\"submit\" nbSuffix nbButton ghost>\r\n                <nb-icon icon=\"search-outline\"></nb-icon>\r\n              </button>\r\n            </nb-form-field>\r\n            <ng-container>\r\n              <p class=\"caption status-danger\" *ngIf=\"searchCheck === true\">\r\n                Business Not Found!\r\n              </p>\r\n            </ng-container>\r\n\r\n          </div>\r\n\r\n        </form>\r\n        <form [formGroup]=\"businessList\" (ngSubmit)='removeBusiness()'>\r\n          <nb-list size=\"medium\" *ngIf=\"displayList === true\">\r\n            <nb-list-item *ngFor=\"let data of namesList; let i = index\">\r\n              <nb-checkbox (change)=\"getCheckedValue($event)\">{{ data }}</nb-checkbox>\r\n            </nb-list-item>\r\n          </nb-list>\r\n          <div class=\"buttonSlot\" *ngIf=\"namesList.length > 0 || idList.length > 0\">\r\n            <button class=\"button\" type=\"submit\" nbButton outline status=\"success\"\r\n              [disabled]=\"this.businessList.hasError('required', 'businesses')\">Remove Business</button>\r\n          </div>\r\n        </form>\r\n      </nb-tab>\r\n\r\n      <!-- Invite a Business Tab -->\r\n      <nb-tab tabTitle=\"Invite A Business\">\r\n        <form [formGroup]=\"businessInvitation\" (ngSubmit)=\"inviteBusiness()\">\r\n          <input formControlName=\"emailInvitation\" class=\"locationLabel\" nbInput id=\"input-emailInvitation\"\r\n            placeholder=\"Enter Business Email\" fullWidth fieldSize=\"medium\" />\r\n          <button class=\"button\" type=\"submit\" nbButton outline status=\"success\"\r\n            [disabled]=\"this.businessInvitation.hasError('required', 'emailInvitation')\">Invite Business</button>\r\n        </form>\r\n      </nb-tab>\r\n    </nb-tabset>\r\n\r\n  </nb-card-body>\r\n</nb-card>","import { Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-about-us',\r\n  templateUrl: './about-us.component.html',\r\n  styleUrls: ['./about-us.component.scss']\r\n})\r\nexport class AboutUsComponent implements OnInit {\r\n\r\n  constructor(private titleService: Title) { }\r\n\r\n  ngOnInit(): void {\r\n    this.titleService.setTitle(\"About Us\");\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.titleService.setTitle(\"Covidbit\");\r\n  }\r\n\r\n}\r\n","<nb-card>\r\n    <nb-card-header>\r\n        <h1>Who we are</h1>\r\n    </nb-card-header>\r\n    <nb-card-body>\r\n            <p><i>Contact Us: fastpandasseneca@gmail.com</i></p>\r\n\r\n            <p> \r\n                Teresa Costa <br> \r\n                John Turkson <br> \r\n                Valentina Derksen <br> \r\n                Adilah Ismail <br> \r\n                Yevgeniya Anasheva <br>\r\n            </p>\r\n\r\n\r\n    </nb-card-body>\r\n    <nb-card-footer>\r\n        \r\n    </nb-card-footer>\r\n</nb-card>\r\n","// Server - CovidBit - Fast Pandas\r\n// Created: 20, MArch, 2021, Yevgeniya Anasheva\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormControl, FormGroup } from '@angular/forms'\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n// Local Services\r\nimport { DataService } from '../../services/data-services/data.service';\r\nimport { AuthService } from '../../services/auth-services/auth.service';\r\nimport { SafetyMeasures } from '../../models/safetyMeasures.model';\r\nimport * as myGlobals from '../../globals';\r\n\r\n@Component({\r\n  selector: 'app-certification-form',\r\n  templateUrl: './certification-form.component.html',\r\n  styleUrls: ['./certification-form.component.scss']\r\n})\r\nexport class CertificationFormComponent implements OnInit {\r\n\r\n  // From Group\r\n  userCredentials: FormGroup = new FormGroup({});\r\n\r\n  // Form Variables\r\n  id: String = myGlobals.emptyField;\r\n  businessName: String = myGlobals.emptyField;\r\n  firstName: String = myGlobals.emptyField;\r\n  lastName: String = myGlobals.emptyField;\r\n  businessLocation: String = myGlobals.emptyField;\r\n  businessPhone: String = myGlobals.emptyField;\r\n  email: String = myGlobals.emptyField;\r\n  webSite: String = myGlobals.emptyField;\r\n  businessType: String = myGlobals.emptyField;\r\n\r\n  // Alert Control\r\n  acceptedGuidelines: Boolean = false;\r\n\r\n  safetyMeasureList: Array<SafetyMeasures> = [];\r\n  safetyMeasure: SafetyMeasures = { title: myGlobals.emptyField, description: myGlobals.emptyField , confirmed: myGlobals.emptyField}\r\n\r\n  constructor(public auth: AuthService, public router: Router, public data: DataService, private activatedRoute: ActivatedRoute, private location: Location) { \r\n    let id = this.activatedRoute.snapshot.paramMap.get('id');\r\n    this.data.getUserView(id)\r\n      .subscribe(\r\n        data => {\r\n          this.id = data.user._id;\r\n          this.businessName = data.user.businessName;\r\n          this.firstName = data.user.firstName;\r\n          this.lastName = data.user.lastName;\r\n          this.businessPhone = data.user.phoneNumber;\r\n          this.businessLocation = data.user.location;\r\n          this.businessType = data.user.businessType;\r\n          this.safetyMeasureList = data.user.safetyMeasures;\r\n        })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userCredentials = new FormGroup({\r\n      guidelines: new FormGroup({\r\n        acceptedGuidelines: new FormControl('', [Validators.required])\r\n      }),\r\n      safetyMeasures: new FormGroup({\r\n        title: new FormControl('', [Validators.required]),\r\n        description: new FormControl('', [Validators.required])\r\n      })\r\n    })\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.auth.addCertification(this.userCredentials.value, this.id);\r\n  }\r\n\r\n  backClicked() {\r\n    this.location.back();\r\n  }\r\n\r\n  acceptGuidelines() {\r\n    if(this.acceptedGuidelines)\r\n      this.acceptedGuidelines = false;\r\n    else\r\n      this.acceptedGuidelines = true;\r\n  }\r\n\r\n}\r\n","<!-- Server - CovidBit - Fast Pandas\r\n     Created: 20, MArch, 2021, Yevgeniya Anasheva-->\r\n\r\n<nb-card>\r\n  <nb-card-body>\r\n    <form [formGroup]='userCredentials' (ngSubmit)='onSubmit()' class=\"form-components\">\r\n      <nb-stepper orientation=\"horizontal\" disableStepNavigation>\r\n\r\n        <!--First Step-->\r\n        <nb-step label=\"Guidelines\" formGroupName=\"guidelines\">\r\n          <h1 class=\"register-header\">Apply for Certification</h1>\r\n          <p class=\"form-control-group\">COVIDBIT Team is not responsible for the information you enter. This\r\n            certification is <strong>NOT</strong>\r\n            official health standards certification\r\n            and the safety measures you enter are your own responsibility.\r\n            The safety measures entered by businesses are to help people safely use the offered services, and should not\r\n            be treated as false advertisement.\r\n            COVID-19 is a serious topic and any misdirection or misinformation will be taken down, followed by necessary\r\n            measures. <br>\r\n            By accepting this agreement you indicate that you take all the responsibility upon yourself. <br>\r\n            <strong>To receive certification, you need to have at least 3 safety measures. </strong>\r\n          </p>\r\n          <p class=\"form-control-group\"><strong>For more information, please visit: </strong>\r\n            <a href=\"https://www.canada.ca/en/public-health/services/diseases/2019-novel-coronavirus-infection.html\"\r\n              target=\"_blank\">Canadian Government COVID-19 website</a>\r\n            and\r\n            <a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\" target=\"_blank\">the World Health\r\n              Organization (WHO)</a>\r\n          </p>\r\n          <div class=\"form-control-group\">\r\n            <input type=\"checkbox\" [(ngModel)]=\"acceptedGuidelines\" (click)=\"acceptGuidelines()\"> &nbsp;&nbsp; I've read\r\n            the guidelines and accept the agreement\r\n          </div>\r\n          <div class=\"form-control-group\">\r\n            <button class=\"button\" type=\"button\" nbButton nbStepperNext fullWidth outline status=\"primary\"\r\n              *ngIf=\"acceptedGuidelines\">NEXT</button>\r\n            <button class=\"button\" type=\"button\" nbButton nbStepperNext fullWidth outline status=\"primary\"\r\n              *ngIf=\"!acceptedGuidelines\" disabled>NEXT</button>\r\n            <button class=\"button\" type=\"button\" nbButton fullWidth outline status=\"primary\"\r\n              (click)=\"backClicked()\">BACK</button>\r\n          </div>\r\n\r\n          <!--Second step-->\r\n        </nb-step>\r\n        <nb-step label=\"Certification\" formGroupName=\"safetyMeasures\">\r\n          <div class=\"form-control-group\">\r\n            <p>\r\n              <strong>Business Name: </strong> {{businessName}} <br>\r\n              <strong>First Name: </strong> {{firstName}} <br>\r\n              <strong>Last Name: </strong> {{lastName}} <br>\r\n              <strong>Location: </strong> {{businessLocation}} <br>\r\n              <strong>Business Type: </strong> {{businessType}} <br>\r\n              <strong>Safety Measures: </strong>\r\n              <span *ngFor=\"let safetyMeasure of safetyMeasureList\">\r\n                <span>{{safetyMeasure.title}}</span>\r\n              </span>\r\n              <br>\r\n            </p>\r\n          </div>\r\n          <div class=\"form-control-group\">\r\n            <button class=\"button\" type=\"button\" nbButton nbStepperPrevious fullWidth outline\r\n              status=\"primary\">PREVIOUS</button>\r\n            <button class=\"button\" type=\"submit\" nbButton fullWidth outline status=\"primary\">SUBMIT</button>\r\n          </div>\r\n        </nb-step>\r\n\r\n      </nb-stepper>\r\n    </form>\r\n  </nb-card-body>\r\n</nb-card>","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api-covid-services/api.service';\r\nimport { DataService } from 'src/app/services/data-services/data.service';\r\nimport * as myGlobals from '../../../globals';\r\n\r\n@Component({\r\n  selector: 'app-bar-health-region-mortality',\r\n  templateUrl: './bar-health-region-mortality.component.html',\r\n  styleUrls: ['./bar-health-region-mortality.component.scss']\r\n})\r\nexport class BarHealthRegionMortalityComponent implements OnInit {\r\n  stackedData: any;\r\n  stackedOptions: any;\r\n\r\n  chartTotalCount: any = 0;\r\n  chartRegion: any[] = [];\r\n\r\n  totalData: any;\r\n  totalToronto: any;\r\n  totalPeel: any;\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.apiService.getHealthRegionFatalities(\"24-03-2021\").subscribe((data) => { //Call COVID API\r\n      this.totalData = data;\r\n      this.countTotalFatalities();\r\n      this.countRegionFatalities(\"Toronto\");\r\n      this.countRegionFatalities(\"Peel\");\r\n      this.countRegionFatalities(\"York\");\r\n      this.stackedData = {\r\n        labels: ['Toronto', 'Peel', 'York'],\r\n        datasets: [{\r\n          type: 'bar',\r\n          label: 'Ontario',\r\n          backgroundColor: \"#4DA8DA\",\r\n\r\n          data: [this.chartTotalCount, this.chartTotalCount, this.chartTotalCount]\r\n        }, {\r\n          type: 'bar',\r\n          label: 'Specific Region',\r\n          backgroundColor: \"#203647\",\r\n          data: [\r\n            this.chartRegion[0],  this.chartRegion[1],  this.chartRegion[2]\r\n          ]\r\n        },]\r\n      };\r\n\r\n      this.stackedOptions = {\r\n        tooltips: {\r\n          mode: 'index',\r\n          intersect: false\r\n        },\r\n        responsive: true,\r\n        scales: {\r\n          xAxes: [{\r\n            stacked: true,\r\n          }],\r\n          yAxes: [{\r\n            stacked: true\r\n          }]\r\n        }\r\n      };\r\n\r\n\r\n    })\r\n  }\r\n\r\n  countTotalFatalities() {\r\n    let cnt = 0;\r\n    for (var i = 0; i <= this.totalData.mortality.length - 1; i++) {\r\n      cnt += this.totalData.mortality[i].cumulative_deaths;\r\n    }\r\n    this.chartTotalCount = cnt;\r\n  }\r\n\r\n  countRegionFatalities(myRegion) {\r\n    let cnt = 0;\r\n    for (var i = 0; i <= this.totalData.mortality.length - 1; i++) {\r\n      if (this.totalData.mortality[i].health_region === myRegion) {\r\n        cnt = this.totalData.mortality[i].cumulative_deaths;\r\n        this.chartRegion.push(cnt);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","\r\n    <p-chart type=\"bar\" [data]=\"stackedData\" [options]=\"stackedOptions\"></p-chart>\r\n","// Server - CovidBit - Fast Pandas\r\n// Created:  20, February, 2021, John Turkson\r\n// Modified: 25, February, 2021, Teresa Costa: backend integration\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n// Local Service\r\nimport { DataService } from '../services/data-services/data.service';\r\nimport { SafetyMeasures } from '../models/safetyMeasures.model';\r\nimport { AdmService } from '../services/adm-services/adm.service';\r\nimport * as myGlobals from '../globals';\r\n\r\n@Component({\r\n  selector: 'app-business-user-view',\r\n  templateUrl: './business-user-view.component.html',\r\n  styleUrls: ['./business-user-view.component.scss']\r\n})\r\nexport class BusinessUserViewComponent implements OnInit {\r\n\r\n  businessName: String = myGlobals.emptyField;\r\n  businessPhoneNumber: String = myGlobals.emptyField;\r\n  businessAddress: String = myGlobals.emptyField;\r\n  businessWebsite: String = myGlobals.emptyField;\r\n  businessType: String = myGlobals.emptyField;\r\n  id: String = myGlobals.emptyField;\r\n\r\n  safetyMeasureList: Array<SafetyMeasures> = [];\r\n  safetyMeasure: SafetyMeasures = { title: myGlobals.emptyField, description: myGlobals.emptyField, confirmed: myGlobals.emptyField }\r\n  totalCases: number = 0;\r\n  totalCases30Days: number = 0;\r\n\r\n  constructor(public data: DataService, public router: Router, private activatedRoute: ActivatedRoute, public adm: AdmService) {\r\n    this.id = this.activatedRoute.snapshot.paramMap.get('id') || myGlobals.emptyField;\r\n    this.data.getUserView(this.id)\r\n      .subscribe(\r\n        data => {\r\n          this.businessName = data.user.businessName;\r\n          this.businessPhoneNumber = data.user.phoneNumber;\r\n          this.businessAddress = data.user.location;\r\n          this.businessWebsite = data.user.loginId;\r\n          this.businessType = data.user.businessType;\r\n          this.adm.getUserCases({ name: data.user.businessName }).subscribe(caseData => {\r\n            this.totalCases = caseData.cases.length;\r\n          });\r\n          this.data.getAllSafety().subscribe(\r\n            safety => {\r\n              this.getSafetyMeasures(safety);\r\n            })\r\n        })\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  // Extracts all the User Safety Measures\r\n  getSafetyMeasures(data: any) {\r\n    for (let i = 0; i < Object.keys(data.safeties).length; i++) {\r\n      if (this.id === data.safeties[i].businessId) {\r\n        this.safetyMeasure[\"title\"] = data.safeties[i].title;\r\n        this.safetyMeasure[\"description\"] = data.safeties[i].title;\r\n        this.safetyMeasureList.push(this.safetyMeasure);\r\n      }\r\n    }\r\n  }\r\n}","<!-- Server - CovidBit - Fast Pandas\r\n     Created:  20, February, 2021, John Turkson-->\r\n\r\n<!-- Row One -->\r\n<div class=\"row\">\r\n  <div class=\"col-8\">\r\n\r\n    <!-- Business Info Card -->\r\n    <nb-card>\r\n      <nb-card-header>\r\n        <h2>{{businessName}}</h2>\r\n      </nb-card-header>\r\n      <nb-card-body>\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <label nbLabel class=\"h6\" for=\"input-businessType\">Phone Number</label>\r\n            <ng-container>\r\n              <!-- Business Phone Number -->\r\n              <p class=\"subtitle text-hint\">{{businessPhoneNumber}}</p>\r\n            </ng-container>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <label nbLabel class=\"h6\" for=\"input-businessType\">Address</label>\r\n            <ng-container>\r\n              <!-- Business' Address -->\r\n              <p class=\"subtitle text-hint\">{{businessAddress}}</p>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <label nbLabel class=\"h6\" for=\"input-businessType\">Website</label>\r\n            <ng-container>\r\n              <p class=\"subtitle text-hint\">\r\n                <a style=\"text-decoration: none;\" href=\"/registration-form\">{{businessWebsite}}</a>\r\n              </p>\r\n            </ng-container>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <label nbLabel class=\"h6\" for=\"input-businessType\">Business Type</label>\r\n            <ng-container>\r\n              <p class=\"subtitle text-hint\">{{businessType}}</p>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n\r\n  <!-- safety Measures List Card -->\r\n  <div class=\"col-4\">\r\n    <nb-card>\r\n      <nb-card-header>safety Measures</nb-card-header>\r\n      <nb-accordion *ngIf=\"safetyMeasureList.length > 0\">\r\n        <nb-accordion-item *ngFor=\"let measure of safetyMeasureList\">\r\n          <nb-accordion-item-header>{{measure.title}}</nb-accordion-item-header>\r\n          <nb-accordion-item-body>{{measure.description}}</nb-accordion-item-body>\r\n        </nb-accordion-item>\r\n      </nb-accordion>\r\n    </nb-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- Row Three -->\r\n<div class=\"row\">\r\n  <div class=\"col-8\">\r\n    <nb-card>\r\n      <nb-card-header>COVID Case Log</nb-card-header>\r\n      <nb-card-body>\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <ng-container>\r\n              <h4 class=\"case-numbers\">Total Cases</h4>\r\n              <h4 class=\"case-numbers\">{{totalCases}}</h4>\r\n            </ng-container>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <ng-container>\r\n              <h4 class=\"case-numbers\">Cases in the last 30 days</h4>\r\n              <h4 class=\"case-numbers\">{{totalCases30Days}}</h4>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n  <div class=\"col-4\">\r\n    <nb-card>\r\n      <nb-card-header>\r\n        <h5>Reviews</h5>\r\n        <a href routerLink=\"/review/{{id}}\" routerLinkActive=\"active\">Add a review</a>\r\n      </nb-card-header>\r\n      <nb-card-body class=\"icon-container\">\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n</div>","// Server - CovidBit - Fast Pandas\r\n// Created: 08, March, 2021, Teresa Costa\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-terms',\r\n  templateUrl: './terms.component.html',\r\n  styleUrls: ['./terms.component.scss']\r\n})\r\nexport class TermsComponent implements OnInit {\r\n\r\n  constructor(private titleService: Title) { }\r\n\r\n  ngOnInit(): void {\r\n    this.titleService.setTitle(\"Terms and Conditions\");\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.titleService.setTitle(\"Covidbit\");\r\n  }\r\n\r\n}\r\n","<nb-card>\r\n    <nb-card-header>\r\n        <h1>Terms and Conditions</h1>\r\n    </nb-card-header>\r\n    <nb-card-body>\r\n\r\n        <p><i>Last updated: March 09, 2021</i></p>\r\n\r\n        <p>These terms and conditions outline the rules and regulations for the use of CovidBit's Website, located at\r\n            www.covidbit.ca.</p>\r\n\r\n        <p>By accessing this website we assume you accept these terms and conditions. Do not continue to use CovidBit if\r\n            you do not agree to take all of the terms and conditions stated on this page.</p>\r\n\r\n        <p>The following terminology applies to these Terms and Conditions, Privacy Statement and Disclaimer Notice and\r\n            all Agreements: \"Client\", \"You\" and \"Your\" refers to you, the person log on this website and compliant to\r\n            the Company’s terms and conditions. \"The Company\", \"Ourselves\", \"We\", \"Our\" and \"Us\", refers to our Company.\r\n            \"Party\", \"Parties\", or \"Us\", refers to both the Client and ourselves. All terms refer to the offer,\r\n            acceptance and consideration of payment necessary to undertake the process of our assistance to the Client\r\n            in the most appropriate manner for the express purpose of meeting the Client’s needs in respect of provision\r\n            of the Company’s stated services, in accordance with and subject to, prevailing law of Netherlands. Any use\r\n            of the above terminology or other words in the singular, plural, capitalization and/or he/she or they, are\r\n            taken as interchangeable and therefore as referring to same.</p>\r\n\r\n        <h4><strong>License</strong></h4>\r\n\r\n        <p>Unless otherwise stated, CovidBit and/or its licensors own the intellectual property rights for all material\r\n            on CovidBit. All intellectual property rights are reserved. You may access this from CovidBit for your own\r\n            personal use subjected to restrictions set in these terms and conditions.</p>\r\n\r\n        <p>You must not:</p>\r\n        <ul>\r\n            <li>Republish material from CovidBit</li>\r\n            <li>Sell, rent or sub-license material from CovidBit</li>\r\n            <li>Reproduce, duplicate or copy material from CovidBit</li>\r\n            <li>Redistribute content from CovidBit</li>\r\n        </ul>\r\n\r\n        <p>Parts of this website offer an opportunity for users to post and exchange opinions and information in certain\r\n            areas of the website. CovidBit does not filter, edit, publish or review Comments prior to their presence on\r\n            the website. Comments do not reflect the views and opinions of CovidBit,its agents and/or affiliates.\r\n            Comments reflect the views and opinions of the person who post their views and opinions. To the extent\r\n            permitted by applicable laws, CovidBit shall not be liable for the Comments or for any liability, damages or\r\n            expenses caused and/or suffered as a result of any use of and/or posting of and/or appearance of the\r\n            Comments on this website.</p>\r\n\r\n        <p>CovidBit reserves the right to monitor all Comments and to remove any Comments which can be considered\r\n            inappropriate, offensive or causes breach of these Terms and Conditions.</p>\r\n\r\n        <p>You warrant and represent that:</p>\r\n\r\n        <ul>\r\n            <li>You are entitled to post the Comments on our website and have all necessary licenses and consents to do\r\n                so;</li>\r\n            <li>The Comments do not invade any intellectual property right, including without limitation copyright,\r\n                patent or trademark of any third party;</li>\r\n            <li>The Comments do not contain any defamatory, libelous, offensive, indecent or otherwise unlawful material\r\n                which is an invasion of privacy</li>\r\n            <li>The Comments will not be used to solicit or promote business or custom or present commercial activities\r\n                or unlawful activity.</li>\r\n        </ul>\r\n\r\n        <p>You hereby grant CovidBit a non-exclusive license to use, reproduce, edit and authorize others to use,\r\n            reproduce and edit any of your Comments in any and all forms, formats or media.</p>\r\n\r\n        <h4><strong>Hyperlinking to our Content</strong></h4>\r\n\r\n        <p>The following organizations may link to our Website without prior written approval:</p>\r\n\r\n        <ul>\r\n            <li>Government agencies;</li>\r\n            <li>Search engines;</li>\r\n            <li>News organizations;</li>\r\n            <li>Online directory distributors may link to our Website in the same manner as they hyperlink to the\r\n                Websites of other listed businesses; and</li>\r\n            <li>System wide Accredited Businesses except soliciting non-profit organizations, charity shopping malls,\r\n                and charity fundraising groups which may not hyperlink to our Web site.</li>\r\n        </ul>\r\n\r\n        <p>These organizations may link to our home page, to publications or to other Website information so long as the\r\n            link: (a) is not in any way deceptive; (b) does not falsely imply sponsorship, endorsement or approval of\r\n            the linking party and its products and/or services; and (c) fits within the context of the linking party’s\r\n            site.</p>\r\n\r\n        <p>We may consider and approve other link requests from the following types of organizations:</p>\r\n\r\n        <ul>\r\n            <li>commonly-known consumer and/or business information sources;</li>\r\n            <li>dot.com community sites;</li>\r\n            <li>associations or other groups representing charities;</li>\r\n            <li>online directory distributors;</li>\r\n            <li>internet portals;</li>\r\n            <li>accounting, law and consulting firms; and</li>\r\n            <li>educational institutions and trade associations.</li>\r\n        </ul>\r\n\r\n        <p>We will approve link requests from these organizations if we decide that: (a) the link would not make us look\r\n            unfavorably to ourselves or to our accredited businesses; (b) the organization does not have any negative\r\n            records with us; (c) the benefit to us from the visibility of the hyperlink compensates the absence of\r\n            CovidBit; and (d) the link is in the context of general resource information.</p>\r\n\r\n        <p>These organizations may link to our home page so long as the link: (a) is not in any way deceptive; (b) does\r\n            not falsely imply sponsorship, endorsement or approval of the linking party and its products or services;\r\n            and (c) fits within the context of the linking party’s site.</p>\r\n\r\n        <p>If you are one of the organizations listed in paragraph 2 above and are interested in linking to our website,\r\n            you must inform us by sending an e-mail to CovidBit. Please include your name, your organization name,\r\n            contact information as well as the URL of your site, a list of any URLs from which you intend to link to our\r\n            Website, and a list of the URLs on our site to which you would like to link. Wait 2-3 weeks for a response.\r\n        </p>\r\n\r\n        <p>Approved organizations may hyperlink to our Website as follows:</p>\r\n\r\n        <ul>\r\n            <li>By use of our corporate name; or</li>\r\n            <li>By use of the uniform resource locator being linked to; or</li>\r\n            <li>By use of any other description of our Website being linked to that makes sense within the context and\r\n                format of content on the linking party’s site.</li>\r\n        </ul>\r\n\r\n        <p>No use of CovidBit's logo or other artwork will be allowed for linking absent a trademark license agreement.\r\n        </p>\r\n\r\n        <h4><strong>iFrames</strong></h4>\r\n\r\n        <p>Without prior approval and written permission, you may not create frames around our Webpages that alter in\r\n            any way the visual presentation or appearance of our Website.</p>\r\n\r\n        <h4><strong>Content Liability</strong></h4>\r\n\r\n        <p>We shall not be hold responsible for any content that appears on your Website. You agree to protect and\r\n            defend us against all claims that is rising on your Website. No link(s) should appear on any Website that\r\n            may be interpreted as libelous, obscene or criminal, or which infringes, otherwise violates, or advocates\r\n            the infringement or other violation of, any third party rights.</p>\r\n\r\n        <h4><strong>Your Privacy</strong></h4>\r\n\r\n        <p>Please read <a routerLink=\"/policy\" routerLinkActive=\"active\">www.covidbit.ca/policy</a></p>\r\n\r\n        <h4><strong>Reservation of Rights</strong></h4>\r\n\r\n        <p>We reserve the right to request that you remove all links or any particular link to our Website. You approve\r\n            to immediately remove all links to our Website upon request. We also reserve the right to amen these terms\r\n            and conditions and it’s linking policy at any time. By continuously linking to our Website, you agree to be\r\n            bound to and follow these linking terms and conditions.</p>\r\n\r\n        <h4><strong>Removal of links from our website</strong></h4>\r\n\r\n        <p>If you find any link on our Website that is offensive for any reason, you are free to contact and inform us\r\n            any moment. We will consider requests to remove links but we are not obligated to or so or to respond to you\r\n            directly.</p>\r\n\r\n        <p>We do not ensure that the information on this website is correct, we do not warrant its completeness or\r\n            accuracy; nor do we promise to ensure that the website remains available or that the material on the website\r\n            is kept up to date.</p>\r\n\r\n        <h4><strong>Disclaimer</strong></h4>\r\n\r\n        <p>To the maximum extent permitted by applicable law, we exclude all representations, warranties and conditions\r\n            relating to our website and the use of this website. Nothing in this disclaimer will:</p>\r\n\r\n        <ul>\r\n            <li>limit or exclude our or your liability for death or personal injury;</li>\r\n            <li>limit or exclude our or your liability for fraud or fraudulent misrepresentation;</li>\r\n            <li>limit any of our or your liabilities in any way that is not permitted under applicable law; or</li>\r\n            <li>exclude any of our or your liabilities that may not be excluded under applicable law.</li>\r\n        </ul>\r\n\r\n        <p>The limitations and prohibitions of liability set in this Section and elsewhere in this disclaimer: (a) are\r\n            subject to the preceding paragraph; and (b) govern all liabilities arising under the disclaimer, including\r\n            liabilities arising in contract, in tort and for breach of statutory duty.</p>\r\n\r\n        <p>As long as the website and the information and services on the website are provided free of charge, we will\r\n            not be liable for any loss or damage of any nature.</p>\r\n\r\n    </nb-card-body>\r\n    <nb-card-footer>\r\n        <h4>Contact Us</h4>\r\n        <p>If you have any questions about Terms and Conditions, You can <a routerLink=\"/about-us\" routerLinkActive=\"active\">contact</a> us.\r\n    </nb-card-footer>\r\n</nb-card>","<!-- Server - CovidBit - Fast Pandas\r\n     Created:  16, February, 2021, John Turkson \r\n     Modified: 01, March, 2021, Teresa Costa, added graphs -->\r\n\r\n<!-- Row One -->\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <nb-card status=\"primary\">\r\n        <nb-card-header>\r\n          <h1>Admin Dashboard</h1>\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n          <div class=\"row\">\r\n\r\n            <!-- Case Settings Button -->\r\n            <div class=\"col-6 within-card\">\r\n              <h5>COVID Case Management</h5>\r\n              <button id=\"caseManagment\" nbButton (click)=\"settingsOpened($event)\">Settings</button>\r\n            </div>\r\n\r\n            <!-- Map Settings Button -->\r\n            <div class=\"col-6 within-card\">\r\n              <h5>Business Admin Settings</h5>\r\n              <button id=\"mapManagement\" nbButton (click)=\"settingsOpened($event)\">Settings</button>\r\n            </div>\r\n          </div>\r\n        </nb-card-body>\r\n      </nb-card>\r\n\r\n      <!-- Row Two -->\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n\r\n          <!-- Case Managment Card -->\r\n          <app-case-settings *ngIf=\"settingsType === 'caseManagment'\"></app-case-settings>\r\n\r\n          <!-- Map Management Card -->\r\n          <app-business-settings *ngIf=\"settingsType === 'mapManagement'\"></app-business-settings>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container\">\r\n  <nb-card [style]=\"{width:'48%', float:'right'}\">\r\n    <nb-card-header>\r\n      <h5>Data Activity (last 3 months)</h5>\r\n    </nb-card-header>\r\n    <nb-card-body>\r\n      <app-bar-business-cases></app-bar-business-cases>\r\n    </nb-card-body>\r\n  </nb-card>\r\n  <nb-card [style]=\"{width:'48%', float:'left'}\">\r\n    <nb-card-header>\r\n      <h5>Business by Type</h5>\r\n    </nb-card-header>\r\n    <nb-card-body>\r\n      <app-chart-business></app-chart-business>\r\n    </nb-card-body>\r\n  </nb-card>\r\n</div>","// Server - CovidBit - Fast Pandas\r\n// Created:  16, February, 2021, John Turkson\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NbDialogService } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'app-admin-dashboard',\r\n  templateUrl: './admin-dashboard.component.html',\r\n  styleUrls: ['./admin-dashboard.component.scss']\r\n})\r\nexport class AdminDashboardComponent implements OnInit {\r\n\r\n  openSettings: Boolean = false;\r\n  settingsType: string = '';\r\n\r\n  constructor(public dialogService: NbDialogService) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  // (click) handler\r\n  // Show settings Tab\r\n  settingsOpened(event: Event) {\r\n    let elementId: string = (event.target as Element).id;\r\n    this.settingsType = elementId;\r\n  }\r\n}","// Server - CovidBit - Fast Pandas\r\n// Created:  01, March, 2021, Teresa Costa\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\n// local Service\r\nimport { DataService } from '../../services/data-services/data.service';\r\nimport * as myGlobals from '../../globals';\r\n\r\n@Component({\r\n  selector: 'app-chart-business',\r\n  templateUrl: './chart-business.component.html',\r\n  styleUrls: ['./chart-business.component.scss']\r\n})\r\nexport class ChartBusinessComponent implements OnInit {\r\n\r\n  typesList: Array<string> = [];\r\n\r\n  // Chart Instances\r\n  chartData: any;\r\n  chartOptions: any;\r\n  chartLabel: Array<string> = [];\r\n  chartCount: Array<number> = [];\r\n  typesLabelPostion: String = 'left';\r\n\r\n  constructor(public data: DataService) {\r\n    this.data.getAllBusiness().subscribe(\r\n      data => {\r\n        this.getTypes(data);\r\n        this.count();\r\n        this.chartData = {\r\n          labels: this.chartLabel,\r\n          datasets: [{\r\n            data: this.chartCount,\r\n            backgroundColor: myGlobals.background,\r\n            hoverBackgroundColor: myGlobals.hoverBackground,\r\n          }]\r\n        };\r\n        this.chartOptions = {\r\n          legend: {\r\n            position: this.typesLabelPostion,\r\n            labels: {\r\n              fontColor: 'rgb(255, 99, 132)'\r\n            }\r\n          }\r\n        };\r\n      }\r\n    )\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  // Called by Constructor\r\n  // Lsit the types of Business\r\n  getTypes(data: any) {\r\n    for (let i = 0; i < Object.keys(data.users).length; i++) {\r\n      this.typesList.push(data.users[i].businessType);\r\n    }\r\n  }\r\n\r\n  // Called by Constructor\r\n  // Counts the quantity of each type\r\n  count() {\r\n    this.typesList.sort();\r\n    let current = \"\";\r\n    let cnt = 0;\r\n    for (var i = 0; i <= this.typesList.length; i++) {\r\n      if (this.typesList[i] != current) {\r\n        if (cnt > 0) {\r\n          this.chartLabel.push(current);\r\n          this.chartCount.push(cnt);\r\n        }\r\n        current = this.typesList[i];\r\n        cnt = 1;\r\n      } else {\r\n        cnt++;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","\r\n<!-- Server - CovidBit - Fast Pandas\r\n     Created:  01, March, 2021, Teresa Costa -->\r\n\r\n<p-chart type=\"pie\" [data]=\"chartData\" [options]=\"chartOptions\" [style]=\"{width:'100%', float:'center'}\"></p-chart>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../../../services/api-covid-services/api.service'\r\n\r\n@Component({\r\n  selector: 'app-stats',\r\n  templateUrl: './stats.component.html',\r\n  styleUrls: ['./stats.component.scss']\r\n})\r\nexport class StatsComponent implements OnInit {\r\n  caseInformation: any;\r\n  currentDate: any;\r\n  totalCases: any\r\n  totalCriticals: any\r\n  totalFatalities: any\r\n  totalHospitalizations: any;\r\n  totalRecoveries: any;\r\n  totalTests: any\r\n  totalVaccinations: any\r\n  totalVaccinated: any\r\n  totalVaccinesDistributed: any\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.apiService.getCaseData().subscribe((data) => {  //Call COVID API\r\n      this.caseInformation = data;\r\n      for (let i = 0; i < this.caseInformation.data.length; i++) {   //Check for ON (Ontario) Province Prefix\r\n        if (this.caseInformation.data[i].province == \"ON\") {\r\n          this.currentDate = this.caseInformation.data[i].date;\r\n          this.totalCases = this.caseInformation.data[i].total_cases;\r\n          this.totalCriticals = this.caseInformation.data[i].total_criticals;\r\n          this.totalFatalities = this.caseInformation.data[i].total_fatalities;\r\n          this.totalHospitalizations = this.caseInformation.data[i].total_hospitalizations;\r\n          this.totalRecoveries = this.caseInformation.data[i].total_recoveries;\r\n          this.totalTests = this.caseInformation.data[i].total_tests;\r\n          this.totalVaccinations = this.caseInformation.data[i].total_vaccinations;\r\n          this.totalVaccinated = this.caseInformation.data[i].total_vaccinated;\r\n          this.totalVaccinesDistributed = this.caseInformation.data[i].total_vaccines_distributed;\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<h4 style='color:lightblue'> {{currentDate}}</h4><br />\r\n<nb-icon icon=\"activity-outline\" style='font-size:26px;'> </nb-icon> Tests: {{totalTests | number}} <br /><br />\r\n<nb-icon icon=\"plus-outline\" style='font-size:26px;'> </nb-icon> Hospitalizations: {{totalHospitalizations | number}}\r\n<br /><br />\r\n<nb-icon icon=\"heart-outline\" style='font-size:26px;'> </nb-icon> Recoveries: {{totalRecoveries| number}} <br /><br />\r\n<nb-icon icon=\"paper-plane-outline\" style='font-size:26px;'> </nb-icon> Vaccinations: {{totalVaccinations | number}} <br /><br />","import { Component, OnInit, ViewChild} from '@angular/core';\r\n\r\nimport { searchSB } from '../models/searchSB.model';\r\nimport {FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AdmService } from '../services/adm-services/adm.service';\r\nimport { BusinessName } from '../models/businessName.model';\r\nimport { ApiService } from '../services/api-covid-services/api.service';\r\nimport { DataService } from '../services/data-services/data.service';\r\nimport { BusinessNameandLocation } from '../models/businessName&Location.model';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-tracker-map',\r\n  templateUrl: './tracker-map.component.html',\r\n  styleUrls: ['./tracker-map.component.scss']\r\n})\r\n\r\n\r\nexport class TrackerMapComponent implements OnInit {\r\n\r\n  //BusinessName Form Group\r\n  businessSearch: FormGroup = new FormGroup({});\r\n\r\n  //data\r\n  searchSB: searchSB[] = [];\r\n  businessName!: string;\r\n\r\n  //map\r\n  title: string = 'COVIDBIT project';\r\n  lat!: any\r\n  lng!: any\r\n  latTest: number = 43.8563158\r\n  lngTest: number = -79.5085383\r\n  zoom: number = 10;\r\n  mapMarkers: Array<any> = [];\r\n  markerInfo!: BusinessNameandLocation\r\n\r\n  businessNameDB: BusinessName = { name: '' };\r\n  businessNameSearch: BusinessName = { name: '' };\r\n  locationToBeSearched: String = '';\r\n  searchedBusinessID: String = '';\r\n\r\n  //Map Marker Card Info\r\n  endpoint: string = '';\r\n  cardBusinessName: String = '';\r\n  cardBusinessType: String = '';\r\n  cardCertification!: boolean;\r\n  cardBusinessLocation: String = ''; \r\n  foundBusinessCases: Array<any> = [];\r\n\r\n  markers: BusinessNameandLocation[] = [];\r\n  mapMarkerCaseCount!: number;\r\n  userLocationMarkerAnimation: any = 'DROP';\r\n  validSearch = false;\r\n  indexToChange!: number\r\n\r\n  @ViewChild('infoWindow') markerInfoWindow;\r\n\r\n\r\n  constructor(public adm: AdmService, private apiService: ApiService, public searchService: DataService) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.searchService.getAllBusiness().subscribe(    \r\n      data => {\r\n        console.log(data);\r\n        this.initializeMapMarkers(data);\r\n      });\r\n\r\n    this.lat = 43.795246;\r\n    this.lng = -79.3499;\r\n    this.cardBusinessName = \"COVIDBIT\";\r\n\r\n    this.businessSearch = new FormGroup({\r\n      businessName: new FormControl('', [Validators.required]),\r\n      searchLocation: new FormControl('')\r\n    })\r\n  \r\n}\r\n\r\n  onSubmit() {\r\n\r\n    let searchedBusiness = this.markers.find(e => e.name === this.businessSearch.get('businessName')?.value);\r\n    console.log(searchedBusiness);\r\n\r\n    if (this.businessSearch.get('businessName')?.value === searchedBusiness?.name) {\r\n      this.validSearch = false;\r\n      this.lat = searchedBusiness?.lat;\r\n      this.lng = searchedBusiness?.lng;\r\n      this.zoom = 12;\r\n\r\n      let foundIndex = this.markers.findIndex(x => x.id == searchedBusiness?.id);\r\n      this.markers[foundIndex].animation = 'BOUNCE';\r\n\r\n      function quickChange(index, array){\r\n        array[index].animation = 'DROP';\r\n      }\r\n\r\n      setTimeout(quickChange, 2000, foundIndex, this.markers);\r\n\r\n      \r\n\r\n    } else {\r\n      this.validSearch = true;\r\n    }\r\n\r\n  }\r\n\r\n  initializeMapMarkers(data: any){\r\n     for (let i = 0; i < data.myUsers.length; i++) {\r\n       \r\n      let newMarker = {} as BusinessNameandLocation;\r\n\r\n      //Set Business Info\r\n      newMarker.name = data.myUsers[i].businessName;\r\n      newMarker.location = data.myUsers[i].location;\r\n      newMarker.businessType = data.myUsers[i].businessType;\r\n      newMarker.id = data.myUsers[i].id;\r\n      newMarker.animation = 'DROP';\r\n\r\n      //Make Call to Google API to get Coords of the businesses location/address\r\n      this.apiService.getLocationCoords(data.myUsers[i].location).subscribe((geoInfo) => {\r\n          \r\n      //Set Lat and Long of google map to businesses map marker lat and lng\r\n       newMarker.lat = this.setMarkerLat(geoInfo);\r\n       newMarker.lng = this.setMarkerLng(geoInfo)\r\n\r\n      })\r\n\r\n      //Set Businesses Map Marker Case Count\r\n     let toBeSearched = {name: data.myUsers[i].businessName}\r\n\r\n     this.adm.getUserCases(toBeSearched).subscribe(caseData => {\r\n      // console.log(caseData);\r\n      newMarker.cases = caseData.cases.length;\r\n    });\r\n    \r\n    \r\n\r\n      //Add Map Marker to Marker Array\r\n      this.markers.push(newMarker);\r\n\r\n     }\r\n\r\n     console.log(this.markers);\r\n\r\n  }\r\n\r\n  //Map Marker Helper Functions\r\n  setMarkerLat(coordsData: any) {\r\n    for (let i = 0; i < coordsData.results.length; i++) {\r\n      return coordsData.results[0].geometry.location.lat;\r\n    }\r\n  }\r\n\r\n  setMarkerLng(coordsData: any) {\r\n    for (let i = 0; i < coordsData.results.length; i++) {\r\n       return coordsData.results[0].geometry.location.lng;\r\n    }\r\n  }\r\n\r\n   markerOver(m: BusinessNameandLocation) {\r\n    m.animation = 'BOUNCE';\r\n  }\r\n\r\n  markerOut(m: BusinessNameandLocation) {\r\n    m.animation = '';\r\n  }\r\n\r\n  changeAnimation(index: number) {\r\n    this.markers[this.indexToChange].animation = 'DROP';\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"container\">\r\n\r\n  <div class=\"row\">\r\n\r\n    <div class=\"col-sm\" style=\"text-align: center;\">\r\n\r\n      <form [formGroup]=\"businessSearch\" (ngSubmit)=\"onSubmit()\">\r\n        <nb-form-field>\r\n          <input type=\"text\" formControlName=\"businessName\" name=\"businessName\" id=\"input-business-name\"\r\n            placeholder=\"Search for Business\" fullWidth fieldSize=\"giant\" shape=\"semi-round\" nbInput>\r\n\r\n          <button type=\"submit\" nbSuffix nbButton ghost>\r\n            <nb-icon icon=\"search-outline\"></nb-icon>\r\n          </button>\r\n        </nb-form-field>\r\n\r\n        <ng-container>\r\n          <p class=\"caption status-danger\" *ngIf=\" validSearch === true\">\r\n            Business Not Found!\r\n          </p>\r\n        </ng-container>\r\n\r\n      </form>\r\n\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <br>\r\n\r\n  <div class=\"row\">\r\n\r\n    <div class=\"col-12 col-md-8\">\r\n\r\n      <!-- google map -->\r\n      <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\r\n\r\n        <agm-marker *ngFor=\"let marker of markers let i = index;\" [animation]=\"marker.animation\" \r\n        (mouseOver)=\"markerOver(marker)\" (mouseOut)=\"markerOut(marker)\"  [latitude]=\"marker.lat\" [longitude]=\"marker.lng\">\r\n          <agm-info-window>\r\n            <nb-card class=\"info-window\" status=\"info\">\r\n              <nb-card-header>\r\n                <a target=\"blank\" id=\"businessLink\" style=\"text-decoration: none;\" href=\"http://localhost:4200/business-user-view/{{marker.id}}\">{{marker.name}}</a>\r\n                <br>\r\n                <sub>\r\n                  {{marker.location}}\r\n                </sub>\r\n\r\n              </nb-card-header>\r\n              <nb-card-body>\r\n                <p>Total Cases: {{marker.cases}}</p>\r\n              </nb-card-body>\r\n            </nb-card>\r\n          </agm-info-window>\r\n        </agm-marker>\r\n\r\n      </agm-map>\r\n    </div>\r\n\r\n    <div class=\"col-md-4\">\r\n      <app-news></app-news>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</div>\r\n\r\n  <br>\r\n\r\n<!-- Ontario Tab -->\r\n<div class=\"container\">\r\n  <nb-card status=\"primary\">\r\n\r\n    <nb-card-body>\r\n      <nb-tabset>\r\n        <nb-tab tabTitle=\"Ontario\">\r\n          <div class=\"container\">\r\n            <nb-card [style]=\"{width:'28%', float:'right'}\">\r\n\r\n              <nb-card-body>\r\n                <app-stats></app-stats>\r\n              </nb-card-body>\r\n\r\n            </nb-card>\r\n\r\n            <nb-card [style]=\"{width:'68%', float:'left'}\">\r\n\r\n              <nb-card-body>\r\n                <app-line-graph></app-line-graph>\r\n              </nb-card-body>\r\n\r\n            </nb-card>\r\n          </div>\r\n        </nb-tab>\r\n\r\n        <!-- Canada Tab -->\r\n        <nb-tab tabTitle=\"Canada\">\r\n          <div class=\"container\">\r\n            <nb-card [style]=\"{width:'28%', float:'right'}\">\r\n\r\n              <nb-card-body>\r\n                <app-stats-canada></app-stats-canada>\r\n              </nb-card-body>\r\n\r\n            </nb-card>\r\n\r\n            <nb-card [style]=\"{width:'68%', float:'left'}\">\r\n\r\n              <nb-card-body>\r\n                <app-line-graph-canada></app-line-graph-canada>\r\n              </nb-card-body>\r\n\r\n            </nb-card>\r\n          </div>\r\n        </nb-tab>\r\n\r\n        <!-- GTA Cases-->\r\n        <nb-tab tabTitle=\"GTA: Cases\">\r\n          <div class=\"container\">\r\n            <nb-card [style]=\"{width:'48%', float:'right'}\">\r\n\r\n              <nb-card-body>\r\n                <app-bar-health-region-cases></app-bar-health-region-cases>\r\n              </nb-card-body>\r\n\r\n            </nb-card>\r\n\r\n            <nb-card [style]=\"{width:'48%', float:'left'}\">\r\n\r\n              <nb-card-body>\r\n                <app-health-region-cases></app-health-region-cases>\r\n              </nb-card-body>\r\n\r\n            </nb-card>\r\n          </div>\r\n        </nb-tab>\r\n\r\n        <!-- GTA Fatalities-->\r\n        <nb-tab tabTitle=\"GTA: Fatalities\">\r\n          <div class=\"container\">\r\n            <nb-card [style]=\"{width:'48%', float:'right'}\">\r\n\r\n              <nb-card-body>\r\n                <app-bar-health-region-mortality></app-bar-health-region-mortality>\r\n              </nb-card-body>\r\n\r\n            </nb-card>\r\n\r\n            <nb-card [style]=\"{width:'48%', float:'left'}\">\r\n\r\n              <nb-card-body>\r\n                <app-health-region-mortality></app-health-region-mortality>\r\n              </nb-card-body>\r\n\r\n            </nb-card>\r\n          </div>\r\n        </nb-tab>\r\n\r\n\r\n\r\n        <!-- GTA Fatalities-->\r\n        <nb-tab tabTitle=\"Ontario x Canada\">\r\n          <div class=\"container\">\r\n            <nb-card [style]=\"{width:'48%', float:'right'}\">\r\n\r\n              <nb-card-body>\r\n                <app-bar-ontario-canada></app-bar-ontario-canada>\r\n              </nb-card-body>\r\n\r\n            </nb-card>\r\n            <nb-card [style]=\"{width:'48%', float:'left'}\">\r\n\r\n              <nb-card-body>\r\n                <app-bar-ontario-canada-vaccines></app-bar-ontario-canada-vaccines>\r\n              </nb-card-body>\r\n\r\n            </nb-card>\r\n\r\n          </div>\r\n        </nb-tab>\r\n\r\n\r\n      </nb-tabset>\r\n    </nb-card-body>\r\n  </nb-card>\r\n</div>\r\n<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js'></script>\r\n<script src=\"https://maps.googleapis.com/maps/api/js?sensor=false&libraries=places\"></script>\r\n\r\n\r\n<!--  \r\n <script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAbNARRSTlFSaDp6GyBBM_pkEttwvj18d0&libraries=places&callback=initMap\"\r\n  async defer></script> -->\r\n\r\n<!-- <script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAbNARRSTlFSaDp6GyBBM_pkEttwvj18d0&libraries=places&callback=initMap\"\r\n  async defer></script> -->\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './services/auth-services/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n\r\n\r\nexport class AppComponent {\r\n  title = 'covidbit';\r\n  constructor(public auth: AuthService, public router: Router) { }\r\n\r\n  ngOnInit() {\r\n \r\n  }\r\n}","<nb-layout>\r\n  <nb-layout-header fixed>\r\n\r\n \r\n    <app-header></app-header>\r\n\r\n  </nb-layout-header>\r\n\r\n  <nb-layout-column>\r\n    <router-outlet></router-outlet>\r\n  </nb-layout-column>\r\n\r\n  <nb-layout-footer fixed>\r\n    <app-footer></app-footer>\r\n  </nb-layout-footer>\r\n\r\n</nb-layout>","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormControl, FormGroup, FormArray, FormBuilder } from '@angular/forms'\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-case',\r\n  templateUrl: './add-case.component.html',\r\n  styleUrls: ['./add-case.component.scss']\r\n})\r\nexport class AddCaseComponent implements OnInit { \r\n\r\n//Form Groups\r\ncaseReported: FormGroup = new FormGroup({});\r\ndateControl = new FormControl(new Date());\r\n\r\n\r\n// Reported Case Form Variables\r\ncase = {\r\n  dateReported: '',\r\n  status: '',\r\n  gender: '',\r\n  acquisition: '',\r\n  age: 1,\r\n}\r\n\r\n// Acquisition options Array\r\nacquisitionType = [\r\n  {name: 'Travel'},\r\n  {name: 'Workplace Outbreak'},\r\n  {name: 'Close Contact'},\r\n  {name: 'Local Transmission'},\r\n  {name: 'Institutional Outbreak'},\r\n  {name: 'Unknown'},\r\n];\r\n// Case Status options Array\r\nstatusType = [\r\n  {name: 'Under Investigation'},\r\n  {name: 'Recovered'},\r\n  {name: 'Self-Isolating'},\r\n  {name: 'Hospitalized'},\r\n  {name: 'Deceased'},\r\n  {name: 'Hospitalized-ICU'},\r\n];\r\n// Gender options Array\r\ngenderType = [\r\n  {name: 'Male'},\r\n  {name: 'Female'},\r\n  {name: 'Prefer not to say'},\r\n];\r\n\r\nconstructor() {}\r\n\r\nngOnInit(): void {\r\n  this.caseReported = new FormGroup({\r\n    dateReported: new FormControl('', [Validators.required]),\r\n    status: new FormControl('', [Validators.required]),\r\n    acquisition: new FormControl('', [Validators.required]),\r\n    gender: new FormControl('', [Validators.required]),\r\n    age: new FormControl('', [Validators.required, Validators.min(1), Validators.max(110) ]),\r\n  });\r\n}\r\n\r\n// submit ADD Case\r\nonSubmit() {\r\n  //this.authService.editProfile(this.caseReported.value, this.id);\r\n  console.log(\"Form Value: \", this.caseReported.value);\r\n}\r\n\r\n\r\n}\r\n","<form class=\"form-inline\" [formGroup]='caseReported' (ngSubmit)=\"onSubmit()\">\r\n    <!-- Date picker -->        \r\n    <div class=\"form-control-group\">\r\n      <input nbInput id=\"dateReported\" name=\"dateReported\" fieldSize=\"medium\" placeholder=\"Pick Date\"\r\n      [nbDatepicker]=\"formcontrol\" [formControl]=\"dateControl\" formControlName='dateReported' required>\r\n      <nb-datepicker #formcontrol></nb-datepicker>\r\n    </div>\r\n\r\n    <!-- Case Status Dropdown Menu -->\r\n    <div class=\"form-control-group\">\r\n      <nb-select placeholder=\"Choose Case Status\" formControlName='status' name=\"status\" required>\r\n      <nb-option *ngFor=\"let type of statusType\" [value]='type.name'>{{type.name}}</nb-option>\r\n      </nb-select>\r\n    </div>\r\n\r\n    <!-- Acquisition Type Dropdown Menu -->\r\n    <div class=\"form-control-group\">\r\n      <nb-select placeholder=\"Choose acquisition\" formControlName='acquisition' name=\"acquisition\" required>\r\n      <nb-option *ngFor=\"let type of acquisitionType\" [value]='type.name'>{{type.name}}</nb-option>\r\n      </nb-select>\r\n    </div>\r\n\r\n    <!-- Gender Dropdown Menu -->\r\n    <div class=\"form-control-group\">\r\n      <nb-select placeholder=\"Choose Gender\" formControlName='gender' required name=\"gender\" required>\r\n      <nb-option *ngFor=\"let type of genderType\" [value]='type.name'>{{type.name}}</nb-option>\r\n      </nb-select>\r\n    </div>\r\n\r\n    <!--Age input field-->\r\n    <div class=\"form-control-group\">\r\n      <input nbInput type=\"number\" id=\"age\" placeholder=\"Age\" name=\"age\" formControlName='age'  fieldSize=\"medium\" required min=\"1\" max=\"110\" >\r\n    </div>\r\n\r\n    <div class=\"form-control-group\">\r\n      <button nbButton size=\"medium\" type=\"submit\" outline status=\"primary\"\r\n      [disabled]=\"this.caseReported.get('age')?.invalid || this.caseReported.get('gender')?.invalid\r\n      || this.caseReported.get('acquisition')?.invalid || this.caseReported.get('status')?.invalid \r\n      || this.caseReported.get('dateReported')?.invalid\">Add Case</button>\r\n    </div>\r\n  </form>\r\n","// Server - CovidBit - Fast Pandas\r\n// Created: 23, February, 2021, Teresa Costa\r\n\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { LoginCredentials } from '../../models/logincredentials.model';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { BusinessName } from '../../models/businessName.model';\r\nimport { LoginId } from '../../models/loginId';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  endpoint: string = 'https://backend-covidbit.herokuapp.com/api/';\r\n  headers  = new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': 'POST,GET,OPTIONS, PUT, DELETE',\r\n    'Access-Control-Allow-Headers': 'Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization'\r\n  });\r\n\r\n  constructor(private http: HttpClient, public router: Router) { }\r\n\r\n  // Search Business User\r\n  searchUser(business: BusinessName) {\r\n    const api = `${this.endpoint}/search`;\r\n    return this.http.post<any>(api, business)\r\n      .subscribe(\r\n        data => {\r\n          this.getUserView(data.id).subscribe(\r\n            data => {\r\n              this.router.navigate(['/business-user-view/' + data.user._id]).then(() => {\r\n                window.location.reload();\r\n              });\r\n            })\r\n        },\r\n        error => {\r\n          window.alert(\"Search: No business with this name\");\r\n          this.router.navigate(['home']);\r\n        }\r\n      )\r\n  }\r\n\r\n  // Get User Business View\r\n  getUserView(id: any): Observable<any> {\r\n    const api = `${this.endpoint}/business-user-view/${id}`;\r\n    return this.http.get<any>(api, id)\r\n      .pipe(\r\n        map(\r\n          data => {\r\n            return data;\r\n          },\r\n          (error: any) => {\r\n            window.alert(\"No business with this name\");\r\n            this.router.navigate(['home']);\r\n          }\r\n        ))\r\n  }\r\n\r\n   // Get User Business View\r\n   getMapInfo(id: any): Observable<any> {\r\n    const api = `${this.endpoint}/tracker-map-view/${id}`;\r\n    return this.http.get<any>(api, id)\r\n      .pipe(\r\n        map(\r\n          data => {\r\n            return data;\r\n          },\r\n          (error: any) => {\r\n            window.alert(\"No business with this name\");\r\n            this.router.navigate(['home']);\r\n          }\r\n        ))\r\n  }\r\n\r\n  // Get a valid User for Registration \r\n  getValidUser(user: LoginCredentials) {\r\n    const api = `${this.endpoint}/check-user`;\r\n    return this.http.post<any>(api, user)\r\n      .subscribe(\r\n        data => {\r\n          return true;\r\n        },\r\n        error => {\r\n          this.router.navigate(['registration-form']).then(() => {\r\n            localStorage.setItem('server_warning', 'true');\r\n            window.location.reload();\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  // Business User can request a new password\r\n  requestNewPassword(loginId: LoginId) {\r\n    const api = `${this.endpoint}/forgot-password`;\r\n    return this.http.post<any>(api, loginId)\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.router.navigate(['login-form']).then(() => {\r\n            localStorage.setItem('new_password', 'true');\r\n            window.location.reload();\r\n          });;\r\n        },\r\n        (error: any) => {\r\n          this.router.navigate(['new-password']).then(() => {\r\n            localStorage.setItem('new_password_warning', 'true');\r\n            window.location.reload();\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  checkValidNewPassword(token: any) {\r\n    const api = `${this.endpoint}/check-reset-password/${token}`;\r\n    return this.http.get<any>(api)\r\n      .subscribe(\r\n        (data: any) => {\r\n          return data;\r\n        },\r\n        (error: any) => {\r\n          window.alert(\"This is not a valid link\");\r\n          this.router.navigate(['home']);\r\n        })\r\n  }\r\n\r\n  setNewPassword(newPassword: any, token: any) {\r\n    newPassword.token = token;\r\n    const api = `${this.endpoint}/new-password`;\r\n    return this.http.put<any>(api, newPassword)\r\n      .subscribe(\r\n        data => {\r\n          this.router.navigate(['login-form']);\r\n        },\r\n        error => {\r\n          console.log(\"It was not possible to chance password!\");\r\n        }\r\n      )\r\n\r\n  }\r\n\r\n  getAllBusiness() {\r\n    const api = `${this.endpoint}/all-business`;\r\n    return this.http.get<any>(api)\r\n      .pipe(\r\n        map(\r\n          data => {\r\n            return data;\r\n          },\r\n          (error: any) => {\r\n            window.alert(\"No business with this name\");\r\n          }\r\n        ))\r\n\r\n  }\r\n\r\n\r\n  getAllCases() {\r\n    const api = `${this.endpoint}/all-cases`;\r\n    return this.http.get<any>(api)\r\n      .pipe(\r\n        map(\r\n          data => {\r\n            return data;\r\n          },\r\n          (error: any) => {\r\n            window.alert(\"No cases in databse\");\r\n          }\r\n        ))\r\n\r\n  }\r\n\r\n\r\n  getAllSafety() {\r\n    const api = `${this.endpoint}/all-safety`;\r\n    return this.http.get<any>(api)\r\n      .pipe(\r\n        map(\r\n          data => {\r\n            return data;\r\n          },\r\n          (error: any) => {\r\n            window.alert(\"No Safety Measures in database!\");\r\n          }\r\n        ))\r\n\r\n  }\r\n\r\n  // Business User is allowed to add safety measures\r\n  addReview(review: any, id: String) {\r\n    const api = `${this.endpoint}/add-review/${id}`;\r\n    return this.http.put<any>(api, review)\r\n      .subscribe(\r\n        data => {\r\n          return data;\r\n        },\r\n        error => {\r\n          console.log(\"It was not possible to add review!\");\r\n        }\r\n      )\r\n  }\r\n\r\n  // News headlines about covid\r\n  getNews() {\r\n    return this.http.get(`https://newsapi.org/v2/top-headlines?country=ca&category=health&apiKey=fd7187b0369b44b1b4f9a03c11a32b9a`)\r\n  }\r\n}\r\n","// Server - CovidBit - Fast Pandas\r\n// Created:                2021, Valya Derksen\r\n// Modified: 25, February, 2021, Teresa Costa: backend integration\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormControl, FormGroup } from '@angular/forms'\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n// Local Services\r\nimport { DataService } from '../services/data-services/data.service';\r\nimport { AuthService } from '../services/auth-services/auth.service';\r\nimport { SafetyMeasures } from '../models/safetyMeasures.model';\r\nimport * as myGlobals from '../globals';\r\n\r\n@Component({\r\n  selector: 'app-business-dashboard',\r\n  templateUrl: './business-dashboard.component.html',\r\n  styleUrls: ['./business-dashboard.component.scss'],\r\n})\r\n\r\nexport class BusinessDashboardComponent implements OnInit {\r\n\r\n  //Form Groups\r\n  safetyMeasures: FormGroup = new FormGroup({});\r\n\r\n  // Business Profile Form Variables\r\n  businessName: String = myGlobals.emptyField;\r\n  businessPhone: String = myGlobals.emptyField;\r\n  businessAddress: String = myGlobals.emptyField;\r\n  webSite: String = myGlobals.emptyField;\r\n  businessType: String = myGlobals.emptyField;\r\n  id: String = myGlobals.emptyField;\r\n  firstName: String = myGlobals.emptyField;\r\n  lastName: String = myGlobals.emptyField;\r\n  businessLocation: String = myGlobals.emptyField;\r\n  email: String = myGlobals.emptyField;\r\n  certification: boolean = false;\r\n\r\n  // Alert Control\r\n  searchCheck: Boolean = false;\r\n  displayList: Boolean = false;\r\n\r\n  safetyMeasureList: Array<SafetyMeasures> = [];\r\n  safetyMeasure: SafetyMeasures = { title: myGlobals.emptyField, description: myGlobals.emptyField, confirmed: myGlobals.emptyField }\r\n  safetyIdList: Array<String> = [];\r\n  itemsToRemove: Array<SafetyMeasures> = [];\r\n\r\n  constructor(public dataS: DataService, public router: Router, private activatedRoute: ActivatedRoute, public auth: AuthService) {\r\n    this.id = this.activatedRoute.snapshot.paramMap.get('id') || myGlobals.emptyField;\r\n    this.dataS.getUserView(this.id).subscribe(\r\n      user => {\r\n        this.id = user.user._id;\r\n        this.businessName = user.user.businessName;\r\n        this.firstName = user.user.firstName;\r\n        this.lastName = user.user.lastName;\r\n        this.businessPhone = user.user.phoneNumber;\r\n        this.businessLocation = user.user.location;\r\n        this.email = user.user.loginId;\r\n        this.businessType = user.user.businessType;\r\n        this.webSite = user.user.website;\r\n        this.certification = user.user.certification;\r\n        this.dataS.getAllSafety().subscribe(\r\n          safety => {\r\n            this.getSafety(safety);\r\n          })\r\n      })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.safetyMeasures = new FormGroup({\r\n      title: new FormControl('', [Validators.required]),\r\n      description: new FormControl('', [Validators.required])\r\n    });\r\n  }\r\n\r\n  getSafety(data: any) {\r\n    for (let i = 0; i < Object.keys(data.safeties).length; i++) {\r\n      if (this.id === data.safeties[i].businessId) {\r\n        this.safetyMeasure[\"title\"] = data.safeties[i].title;\r\n        this.safetyMeasure[\"description\"] = data.safeties[i].title;\r\n        this.safetyMeasureList.push(this.safetyMeasure);\r\n        this.safetyIdList.push(data.safeties[i]._id);\r\n      }\r\n    }\r\n  }\r\n\r\n  // ADD Safety Measure\r\n  onAddMeasure() {\r\n    const safetyMeasure = {\r\n      title: this.safetyMeasures.get('title')?.value,\r\n      description: this.safetyMeasures.get('description')?.value,\r\n      confirmed: \"\"\r\n    }\r\n    this.safetyMeasureList.push(safetyMeasure);\r\n    this.auth.addSafety(safetyMeasure, this.id);\r\n    this.safetyMeasures.get('title')?.reset();\r\n    this.safetyMeasures.get('description')?.reset();\r\n  }\r\n\r\n\r\n  selectedItems(index: any) {\r\n    let obj = this.safetyMeasureList[index];\r\n    this.itemsToRemove.push(obj);\r\n  }\r\n\r\n  // DELETE Safety Measure\r\n  onDeleteMeasure() {\r\n    for (let i = 0; i < this.safetyMeasureList.length; i++) {\r\n      for (let x = 0; x < this.itemsToRemove.length; x++) {\r\n        if (this.itemsToRemove[x] !== undefined) {\r\n          if (this.itemsToRemove[x].title === this.safetyMeasureList[i].title &&\r\n            this.itemsToRemove[x].description === this.safetyMeasureList[i].description) {\r\n            this.auth.deleteSafety(this.safetyIdList[i]).subscribe(\r\n              data => { this.safetyMeasureList.splice(i, 1); }\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  tabReset() {\r\n    this.displayList = false;\r\n    this.searchCheck = false;\r\n  }\r\n\r\n}","<div class=\"card-row\">\r\n  \r\n  <!-- Business Profile -->\r\n   <div class=\"card-col\">\r\n     <nb-card size=\"large\" class=\"profileInfo\">\r\n       <nb-card-header>\r\n           <h3>{{businessName}}</h3>\r\n           <a href routerLink=\"/business-profile/{{id}}\" routerLinkActive=\"active\">Edit Profile</a>\r\n       </nb-card-header>\r\n       <nb-card-body id=\"profileInfo\">\r\n         <div class=\"form-control-group\">\r\n             <label nbLabel class=\"label\">Manager:</label>\r\n             <p>{{firstName}} {{lastName}}</p>\r\n         </div>\r\n         <div class=\"form-control-group\">\r\n             <label nbLabel class=\"label\">Business Location:</label>\r\n             <p>{{businessLocation}}</p>\r\n         </div>\r\n         <div class=\"form-control-group\">\r\n             <label nbLabel class=\"label\">Business Phone Number:</label>\r\n             <p>{{businessPhone}}</p>\r\n         </div>\r\n         <div class=\"form-control-group\">\r\n             <label nbLabel class=\"label\">Email:</label>\r\n             <p>{{email}}</p>\r\n         </div>\r\n         <div class=\"form-control-group\">\r\n             <label nbLabel class=\"label\">Web site:</label>\r\n             <a target=\"_blank\" href=\"{{webSite}}\"><p>{{webSite}}</p></a>\r\n         </div>    \r\n         <div class=\"form-control-group\">\r\n             <label class=\"label\">Business Type:</label>\r\n             <p>{{businessType}}</p>\r\n         </div>\r\n       </nb-card-body>\r\n     </nb-card>\r\n   </div>\r\n\r\n    <!-- Safety Measures -->\r\n   <div class=\"card-col\">\r\n     <!-- Display list of Safety Measures -->\r\n     <nb-card size=\"small\">\r\n       <nb-card-header>\r\n         <h5>Safety Measures</h5>\r\n         <a href routerLink=\"/certification-form/{{id}}\" routerLinkActive=\"active\">Apply for Certification</a>\r\n      </nb-card-header>\r\n       <nb-card-body>\r\n           <div class=\"form-control-group\" class=\"column\">\r\n             <div class=\"safetyMeasureList\">\r\n               <nb-accordion *ngIf=\"safetyMeasureList.length > 0\">\r\n                 <nb-accordion-item *ngFor=\"let measure of safetyMeasureList\">\r\n                 <nb-accordion-item-header>{{measure.title}}</nb-accordion-item-header>\r\n                 <nb-accordion-item-body>{{measure.description}}</nb-accordion-item-body>\r\n                 </nb-accordion-item>\r\n               </nb-accordion>\r\n               <p class=\"subtitle\" *ngIf=\"safetyMeasureList.length <= 0\">No safety Measures added</p>  \r\n             </div>\r\n           </div>\r\n       </nb-card-body>\r\n     </nb-card>\r\n     <!-- Add Safety Measure -->\r\n     <nb-card size=\"tiny\">\r\n       <nb-card-body>\r\n        <nb-tabset (changeTab)=\"tabReset()\">\r\n          <nb-tab tabTitle=\"Add\">\r\n            <form [formGroup]='safetyMeasures'>\r\n                <input nbInput type=\"text\" id=\"input-safetyMeasureTitle\" fieldSize=\"small\" formControlName=\"title\" fullWidth placeholder=\"Name of safety Measure\" >\r\n                <label nbLabel class=\"label\" for=\"input-safetyMeasureDescription\"></label>\r\n                <textarea nbInput type=\"text\" id=\"input-safetyMeasureDescription\" formControlName=\"description\" fullWidth placeholder=\"Desciption of safety Measure\"></textarea>\r\n                <button nbButton size=\"small\" nbButton id=\"addMeasure\" outline status=\"primary\"\r\n                [disabled]=\"this.safetyMeasures.get('title')?.invalid || this.safetyMeasures.get('description')?.invalid\" \r\n                (click)=\"onAddMeasure()\">Add safety measure</button>\r\n            </form>\r\n          </nb-tab>\r\n          <nb-tab tabTitle=\"Delete\">\r\n            <nb-select multiple placeholder=\"Multiple Select\" >\r\n              <nb-option *ngFor=\"let type of safetyMeasureList; index as i\" [value]='type.title' (click)=\"selectedItems(i)\">{{type.title}}</nb-option>\r\n            </nb-select>\r\n            <div>\r\n              <button nbButton size=\"small\" nbButton id=\"deleteMeasure\" outline status=\"primary\"\r\n              (click)=\"onDeleteMeasure()\">Remove safety measure</button>\r\n            </div>\r\n          </nb-tab>\r\n          </nb-tabset>\r\n       </nb-card-body>\r\n     </nb-card>\r\n   </div>\r\n </div>\r\n \r\n <!-- Reported Cases -->\r\n <div class=\"card-row\">\r\n   <div class=\"card-col\">\r\n     <nb-card size=\"large\">\r\n       <nb-card-header><h5>Reported Cases</h5></nb-card-header>\r\n       <nb-card-body>\r\n          <nb-tabset (changeTab)=\"tabReset()\">\r\n            \r\n            <nb-tab tabTitle=\"Add Reported Case\">\r\n              <app-add-case></app-add-case>\r\n              <app-table-cases></app-table-cases>\r\n            </nb-tab>\r\n\r\n            <nb-tab tabTitle=\"Update Reported Case\">\r\n              <app-edit-case></app-edit-case>\r\n            </nb-tab>\r\n            \r\n        </nb-tabset>\r\n      </nb-card-body>\r\n     </nb-card>\r\n   </div>\r\n </div>\r\n","// Controls the modules from the default template Nebula\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\r\nimport {\r\n  NbIconModule,\r\n  NbLayoutModule,\r\n  NbMenuModule,\r\n  NbSidebarModule,\r\n  NbThemeModule,\r\n  NbContextMenuModule,\r\n  NbCardModule,\r\n  NbInputModule,\r\n  NbSearchModule,\r\n  NbSelectModule,\r\n  NbButtonModule,\r\n  NbCheckboxModule,\r\n  NbAlertModule,\r\n  NbFormFieldModule,\r\n  NbUserModule,\r\n  NbStepperModule,\r\n  NbActionsModule,\r\n  NbAccordionModule,\r\n  NbListModule,\r\n  NbDialogModule, NbCalendarModule,\r\n  NbTabsetModule,\r\n  NbDatepickerModule,\r\n  NbTreeGridModule,\r\n  NbRadioModule,\r\n  NbToggleModule,\r\n  \r\n} from '@nebular/theme';\r\n\r\nconst NebularModules = [\r\n  NbThemeModule.forRoot({ name: 'corporate' }),\r\n  NbLayoutModule,\r\n  NbEvaIconsModule,\r\n  NbContextMenuModule,\r\n  NbIconModule,\r\n  NbSidebarModule.forRoot(),\r\n  NbSidebarModule,\r\n  NbMenuModule.forRoot(),\r\n  NbMenuModule,\r\n  // NbThemeModule.forRoot({ name: 'default' }),\r\n  NbThemeModule,\r\n  NbCardModule,\r\n  NbInputModule,\r\n  NbSelectModule,\r\n  NbSearchModule,\r\n  NbButtonModule,\r\n  NbCheckboxModule,\r\n  NbAlertModule,\r\n  NbFormFieldModule,\r\n  NbUserModule,\r\n  NbStepperModule,\r\n  NbActionsModule,\r\n  NbAccordionModule,\r\n  NbListModule,\r\n  NbDialogModule.forRoot(),\r\n  NbContextMenuModule,\r\n  NbCalendarModule,\r\n  NbTabsetModule,\r\n  NbDatepickerModule.forRoot(),\r\n  NbTreeGridModule,\r\n  NbRadioModule,\r\n  NbToggleModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [NebularModules],\r\n  exports: [NebularModules],\r\n})\r\nexport class NebularModulesModule { }\r\n","// Server - CovidBit - Fast Pandas\r\n// Created: 10 February,2021, Yevgeniya Anasheva\r\n\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor(private titleService: Title) { }\r\n\r\n  ngOnInit(): void {\r\n    this.titleService.setTitle(\"404 Error\");\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.titleService.setTitle(\"Covidbit\");\r\n  }\r\n\r\n}\r\n","<!--Server - CovidBit - Fast Pandas\r\n    Created: 10 February,2021, Yevgeniya Anasheva-->\r\n\r\n<h2>Error 404 - Page is not found</h2>\r\n<p>Sorry, this page does not exist <br>\r\n   Back to <a routerLink=\"/home\" routerLinkActive=\"active\">Home</a>\r\n</p>","// Server - CovidBit - Fast Pandas\r\n// Created: 23, March, 2021, Teresa Costa\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api-covid-services/api.service';\r\nimport { DataService } from 'src/app/services/data-services/data.service';\r\nimport * as myGlobals from '../../../globals';\r\ndeclare const formatDate: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-health-region-mortality',\r\n  templateUrl: './health-region-mortality.component.html',\r\n  styleUrls: ['./health-region-mortality.component.scss']\r\n})\r\nexport class HealthRegionMortalityComponent implements OnInit {\r\n  // Class Variables\r\n  // Chart\r\n  chartData: any;\r\n  chartOptions: any;\r\n  caseData: any;\r\n  chartLabel: Array<string> = myGlobals.GTA;\r\n  chartCount: Array<number> = [];\r\n\r\n  // Set date\r\n  today: Date = new Date(new Date().setDate(new Date().getDate() - 1));\r\n  formatToday: String = \"\";\r\n\r\n  constructor(public data: DataService, private apiService: ApiService) {\r\n    this.formatToday = formatDate(this.today);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiService.getHealthRegionFatalities(this.formatToday).subscribe((dataOne) => {\r\n      this.caseData = dataOne;\r\n      for (let i = 0; i < this.chartLabel.length; i++) {\r\n        this.countFatalitiesHealthRegion(this.chartLabel[i]);\r\n      }\r\n      this.chartData = {\r\n        labels: this.chartLabel,\r\n        datasets: [{\r\n          data: this.chartCount,\r\n          backgroundColor: myGlobals.background,\r\n          hoverBackgroundColor: myGlobals.hoverBackground,\r\n        }]\r\n      };\r\n      this.chartOptions = {\r\n        legend: {\r\n          position: 'left',\r\n          labels: {\r\n            fontColor: 'rgb(255, 99, 132)'\r\n          }\r\n        }\r\n      };\r\n    }\r\n    )\r\n  }\r\n\r\n  countFatalitiesHealthRegion(myRegion) {\r\n    let cnt = 0;\r\n    for (var i = 0; i <= this.caseData.mortality.length - 1; i++) {\r\n      if (this.caseData.mortality[i].health_region === myRegion) {\r\n        cnt = this.caseData.mortality[i].cumulative_deaths;\r\n        this.chartCount.push(cnt);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<p-chart type=\"pie\" [data]=\"chartData\" [options]=\"chartOptions\" [style]=\"{width:'100%', float:'center'}\"></p-chart>\r\n","// Server - CovidBit - Fast Pandas\r\n// Created: 17, March, 2021, Teresa Costa\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api-covid-services/api.service';\r\nimport * as echarts from 'echarts'\r\ndeclare const formatDate: any;\r\n\r\n@Component({\r\n  selector: 'app-line-graph-canada',\r\n  templateUrl: './line-graph-canada.component.html',\r\n  styleUrls: ['./line-graph-canada.component.scss']\r\n})\r\nexport class LineGraphCanadaComponent implements OnInit {\r\n  //Class Variables\r\n  //API data\r\n  casesData: any;\r\n  fatalities: any;\r\n  //Chart\r\n  chart: any = (<any>echarts).format;\r\n  dataChartFatalities: any = [];\r\n  dataChartCase: any = [];\r\n  //Dates\r\n  today: Date = new Date(new Date().setDate(new Date().getDate() - 1));\r\n  sevenDays: Date = new Date(new Date().setDate(new Date().getDate() - 7));\r\n  formatToday: String = \"\";\r\n  formatSevenDays: String = \"\";\r\n\r\n  constructor(private apiService: ApiService) {\r\n    this.formatToday = formatDate(this.today);\r\n    this.formatSevenDays = formatDate(this.sevenDays);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiService.getFatalitiesCanada(this.formatSevenDays, this.formatToday).subscribe((dataMortality) => {\r\n      this.fatalities = dataMortality;\r\n      this.countFatalities();\r\n      this.apiService.getCasesCanada(this.formatSevenDays, this.formatToday).subscribe((dataCases) => {\r\n        this.casesData = dataCases;\r\n        this.countCases();\r\n        this.createGraph();\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  createGraph() {\r\n    this.chart = {\r\n      xAxis: {\r\n        type: 'category',\r\n        data: [],\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n      },\r\n      series: [\r\n        {\r\n          title: \"Fatalities\",\r\n          data: [this.dataChartFatalities[1],\r\n          this.dataChartFatalities[2],\r\n          this.dataChartFatalities[3],\r\n          this.dataChartFatalities[4],\r\n          this.dataChartFatalities[5],\r\n          this.dataChartFatalities[6],\r\n          this.dataChartFatalities[7]],\r\n          type: 'line',\r\n        },\r\n        {\r\n          title: \"Cases\",\r\n          data: [this.dataChartCase[1],\r\n          this.dataChartCase[2],\r\n          this.dataChartCase[3],\r\n          this.dataChartCase[4],\r\n          this.dataChartCase[5],\r\n          this.dataChartCase[6],\r\n          this.dataChartCase[7]],\r\n          type: 'line',\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  countFatalities() {\r\n    let date = \"00-00-0000\";\r\n    let cnt = 0;\r\n    for (var i = 0; i < this.fatalities.mortality.length - 1; i++) {\r\n      if (this.fatalities.mortality[i].date_death_report !== date) {\r\n        if (cnt > 0) {\r\n          this.dataChartFatalities.push(cnt)\r\n        }\r\n        date = this.fatalities.mortality[i].date_death_report;\r\n        cnt += this.fatalities.mortality[i].cumulative_deaths;\r\n      } else {\r\n        cnt += this.fatalities.mortality[i].cumulative_deaths;\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  countCases() {\r\n    let date = \"00-00-0000\";\r\n    let cnt = 0;\r\n    for (var i = 0; i < this.casesData.cases.length - 1; i++) {\r\n      if (this.casesData.cases[i].date_report !== date) {\r\n        if (cnt > 0) {\r\n          this.dataChartCase.push(cnt)\r\n        }\r\n        date = this.casesData.cases[i].date_report;\r\n        cnt += this.casesData.cases[i].cumulative_cases;\r\n      } else {\r\n        cnt += this.casesData.cases[i].cumulative_cases;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<nb-card-body>\r\n\r\n\r\n    <div echarts [options]=\"chart\" class=\"demo-chart\"></div>\r\n\r\n</nb-card-body>\r\n","// Controls the modules from Primeng, responsable for the graphs\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { TableModule } from 'primeng/table';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { RatingModule } from 'primeng/rating';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { AccordionModule } from 'primeng/accordion';\r\n\r\nconst PrimengModules = [\r\n    ChartModule,\r\n    TableModule,\r\n    InputTextModule,\r\n    DialogModule,\r\n    ToolbarModule,\r\n    ConfirmDialogModule,\r\n    RatingModule,\r\n    InputNumberModule,\r\n    InputTextareaModule,\r\n    RadioButtonModule,\r\n    ButtonModule,\r\n    AccordionModule \r\n];\r\n\r\nconst PrimengProviders = [ConfirmationService];\r\n\r\n@NgModule({\r\n    imports: [PrimengModules],\r\n    exports: [PrimengModules],\r\n    providers: [PrimengProviders]\r\n  })\r\n  export class PrimengModulesModule { }","// Server - CovidBit - Fast Pandas\r\n// Created:  01, March, 2021, Teresa Costa\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\n// Local Service\r\nimport { DataService } from '../../services/data-services/data.service';\r\nimport * as myGlobals from '../../globals';\r\n\r\n@Component({\r\n  selector: 'app-bar-business-cases',\r\n  templateUrl: './bar-business-cases.component.html',\r\n  styleUrls: ['./bar-business-cases.component.scss']\r\n})\r\nexport class BarBusinessCasesComponent implements OnInit {\r\n\r\n  //Time Span\r\n  lastMonths: number = 3;\r\n  initialDate = this.addMonths(new Date(), -this.lastMonths);\r\n  dateNumbers: Array<number> = [];\r\n\r\n  idList: Array<string> = [];\r\n  monthListBusiness: Array<number> = [];\r\n  monthListCases: Array<number> = [];\r\n\r\n  // Chart Instances\r\n  basicData: any;\r\n  basicOptions: any;\r\n  chartLabelTemp: Array<string> = [];\r\n  chartLabel: Array<string> = [];\r\n  chartCountBusiness: Array<number> = [];\r\n  chartCountCases: Array<number> = [];\r\n\r\n  constructor(public data: DataService) {\r\n    this.data.getAllBusiness().subscribe(\r\n      myUsers => {\r\n        this.getDate(myUsers.users, this.monthListBusiness);\r\n        this.count(this.monthListBusiness, this.chartCountBusiness);\r\n        this.data.getAllCases().subscribe(\r\n          myCases => {\r\n            this.getDate(myCases.cases, this.monthListCases);\r\n            this.count(this.monthListCases, this.chartCountCases);\r\n            this.getLabels();\r\n            this.getGraph();\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  getGraph() {\r\n    this.basicData = {\r\n      labels: this.chartLabelTemp,\r\n      datasets: [\r\n        {\r\n          label: 'Business Registered',\r\n          backgroundColor: myGlobals.background[2],\r\n          data: this.chartCountBusiness\r\n        },\r\n        {\r\n          label: 'Cases Registered',\r\n          backgroundColor: myGlobals.background[3],\r\n          data: this.chartCountCases\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  // Called by Constructor\r\n  // Gets the months (last three for cases and Business)\r\n  getDate(typeData: any, myList: Array<number>) {\r\n    for (let i = 0; i < Object.keys(typeData).length; i++) {\r\n      if (typeData[i]._id !== undefined) {\r\n        let date = new Date(parseInt(typeData[i]._id.substring(0, 8), 16) * 1000);\r\n        if (date > this.initialDate) {\r\n          myList.push(date.getMonth());\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Called by Constructor\r\n  // Gets the Month Label\r\n  getLabels() {\r\n    let temp = this.initialDate.getMonth() + 1;\r\n    if (temp > 11) {\r\n      temp = temp - 11;\r\n      this.dateNumbers.push(temp);\r\n      this.dateNumbers.push(temp + 1);\r\n      this.dateNumbers.push(temp + 2);\r\n    } else {\r\n      this.dateNumbers.push(temp);\r\n      temp++;\r\n      if (temp > 11) {\r\n        temp = temp - 11;\r\n        this.dateNumbers.push(temp);\r\n        this.dateNumbers.push(temp + 1);\r\n      } else {\r\n        this.dateNumbers.push(temp);\r\n        temp++;\r\n        if (temp > 11) {\r\n          temp = temp - 11;\r\n          this.dateNumbers.push(temp);\r\n        } else {\r\n          this.dateNumbers.push(temp);\r\n        }\r\n      }\r\n    }\r\n    this.chartLabelTemp.push(myGlobals.months[this.dateNumbers[0] - 1]);\r\n    this.chartLabelTemp.push(myGlobals.months[this.dateNumbers[1] - 1]);\r\n    this.chartLabelTemp.push(myGlobals.months[this.dateNumbers[2] - 1]);\r\n  }\r\n\r\n\r\n  // Called by Constructor\r\n  // Gets the quantity of Cases and Business\r\n  count(myList: Array<number>, myChart: Array<number>) {\r\n    let current = 0;\r\n    let cnt = 0;\r\n    for (var i = 0; i <= myList.length; i++) {\r\n      if (myList[i] != current) {\r\n        myChart.push(cnt);\r\n        current = myList[i];\r\n        cnt = 1;\r\n      } else {\r\n        cnt++;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // Sets the month of initial date\r\n  addMonths(date, months) {\r\n    date.setMonth(date.getMonth() + months);\r\n    return date;\r\n  }\r\n\r\n}\r\n\r\n","<!-- Server - CovidBit - Fast Pandas\r\n     Created:  01, March, 2021, Teresa Costa -->\r\n\r\n<p-chart type=\"bar\" [data]=\"basicData\" [options]=\"basicOptions\" [style]=\"{width:'100%', float:'center'}\"></p-chart>","import { NebularModulesModule } from './modules-ext/nebular-modules.module';  // Nebula\r\nimport { PrimengModulesModule } from './modules-ext/primeng-modules.module'; // Primeng\r\nimport { NgModule } from '@angular/core'; // angular\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ApiService } from './services/api-covid-services/api.service'; // api covid\r\nimport { GooglePlaceModule } from \"ngx-google-places-autocomplete\"; // api map\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { Ng2CompleterModule } from \"ng2-completer\";\r\n// app\r\nimport { AuthInterceptor } from './services/auth-services/authconfig.interceptor';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './static-pages/home/home.component';\r\nimport { LoginFormComponent } from './login-form/login-form.component';\r\nimport { RegistrationFormComponent } from './registration-form/registration-form.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { NotFoundComponent } from './static-pages/not-found/not-found.component';\r\nimport { BusinessProfileComponent } from './business-dashboard/business-profile/business-profile.component';\r\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\r\nimport { BusinessDashboardComponent } from './business-dashboard/business-dashboard.component'\r\nimport { SearchWidgetComponent } from './search-widget/search-widget.component';\r\nimport { MapSettingsComponent } from './admin-dashboard/adminSettings/business-settings/business-settings.component';\r\nimport { CaseSettingsComponent } from './admin-dashboard/adminSettings/case-settings/case-settings.component'\r\nimport { TrackerMapComponent } from './tracker-map/tracker-map.component';\r\nimport { BusinessUserViewComponent } from './business-user-view/business-user-view.component';\r\nimport { CertificationFormComponent } from './business-dashboard/certification-form/certification-form.component';\r\nimport { PolicyComponent } from './static-pages/policy/policy.component';\r\nimport { TermsComponent } from './static-pages/terms/terms.component';\r\nimport { NewPasswordComponent } from './login-form/new-password/new-password.component';\r\nimport { ResetPasswordComponent } from './login-form/reset-password/reset-password.component';\r\nimport { ChartBusinessComponent } from './admin-dashboard/chart-business/chart-business.component'\r\nimport { BarBusinessCasesComponent } from './admin-dashboard/bar-business-cases/bar-business-cases.component';\r\nimport { NewsComponent } from './tracker-map/news/news.component';\r\nimport { AddCaseComponent } from './business-dashboard/add-case/add-case.component';\r\nimport { TableCasesComponent } from './business-dashboard/table-cases/table-cases.component';\r\nimport { EditCaseComponent } from './business-dashboard/edit-case/edit-case.component';\r\n\r\n\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\n\r\nimport { ReviewComponent } from './business-user-view/review/review.component';\r\nimport { ReviewConfirmationComponent } from './business-user-view/review/review-confirmation/review-confirmation.component';\r\n\r\n\r\nimport { StatsComponent } from './tracker-map/graphs/stats/stats.component';\r\nimport { StatsCanadaComponent } from './tracker-map/graphs/stats-canada/stats-canada.component';\r\nimport { OntarioCanadaComponent } from './tracker-map/ontario-canada/ontario-canada.component';\r\nimport { LineGraphCanadaComponent } from './tracker-map/graphs/line-graph-canada/line-graph-canada.component';\r\nimport { LineGraphComponent } from './tracker-map/graphs/line-graph/line-graph.component';\r\nimport { BarHealthRegionCasesComponent } from './tracker-map/graphs/bar-health-region-cases/bar-health-region-cases.component';\r\nimport { HealthRegionCasesComponent } from './tracker-map/graphs/health-region-cases/health-region-cases.component';\r\nimport { HealthRegionMortalityComponent } from './tracker-map/graphs/health-region-mortality/health-region-mortality.component';\r\nimport { BarHealthRegionMortalityComponent } from './tracker-map/graphs/bar-health-region-mortality/bar-health-region-mortality.component';\r\nimport { BarOntarioCanadaComponent } from './tracker-map/graphs/bar-ontario-canada/bar-ontario-canada.component';\r\nimport { BarOntarioCanadaVaccinesComponent } from './tracker-map/graphs/bar-ontario-canada-vaccines/bar-ontario-canada-vaccines.component';\r\nimport { AboutUsComponent } from './static-pages/about-us/about-us.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    RegistrationFormComponent,\r\n    LoginFormComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    NotFoundComponent,\r\n    BusinessProfileComponent,\r\n    BusinessDashboardComponent,\r\n    AdminDashboardComponent,\r\n    CaseSettingsComponent,\r\n    SearchWidgetComponent,\r\n    TrackerMapComponent,\r\n    MapSettingsComponent,\r\n    BusinessUserViewComponent,\r\n    CertificationFormComponent,\r\n    PolicyComponent,\r\n    TermsComponent,\r\n    NewPasswordComponent,\r\n    ResetPasswordComponent,\r\n    ChartBusinessComponent,\r\n    BarBusinessCasesComponent,\r\n    NewsComponent,\r\n    AddCaseComponent,\r\n    TableCasesComponent,\r\n    EditCaseComponent,\r\n    LineGraphComponent,\r\n    StatsComponent,\r\n    ReviewComponent,\r\n    ReviewConfirmationComponent,\r\n    StatsCanadaComponent,\r\n    OntarioCanadaComponent,\r\n    LineGraphCanadaComponent,\r\n    BarHealthRegionCasesComponent,\r\n    HealthRegionCasesComponent,\r\n    HealthRegionMortalityComponent,\r\n    BarHealthRegionMortalityComponent,\r\n    BarOntarioCanadaComponent,\r\n    BarOntarioCanadaVaccinesComponent,\r\n    AboutUsComponent\r\n\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    NebularModulesModule,\r\n    PrimengModulesModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    GooglePlaceModule,\r\n    HttpClientModule,\r\n    Ng2SmartTableModule,\r\n    Ng2CompleterModule,\r\n    GooglePlaceModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyAbNARRSTlFSaDp6GyBBM_pkEttwvj18d0',\r\n      libraries: ['places']\r\n    }),\r\n    NgxEchartsModule.forRoot({\r\n      echarts: () => import('echarts'),\r\n    }),\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true,\r\n    },\r\n    [ApiService]\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-review-confirmation',\r\n  templateUrl: './review-confirmation.component.html',\r\n  styleUrls: ['./review-confirmation.component.scss']\r\n})\r\nexport class ReviewConfirmationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nb-card>\r\n    <nb-card-body>\r\n      <h1>Thank you for your review!</h1>\r\n      <a href routerLink=\"/home\" routerLinkActive=\"active\">Come back to Home page</a>\r\n    </nb-card-body>\r\n  </nb-card>\r\n","// Server - CovidBit - Fast Pandas\r\n// Created: 25, March, 2021, Valya Derksen\r\n// Modified: 01, April, 2021, Teresa Costa: backend integration\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n// Local Services\r\nimport { DataService } from 'src/app/services/data-services/data.service';\r\nimport { SafetyMeasures } from '../../models/safetyMeasures.model';\r\nimport * as myGlobals from '../../globals';\r\n\r\n@Component({\r\n  selector: 'app-review',\r\n  templateUrl: './review.component.html',\r\n  styleUrls: ['./review.component.scss']\r\n})\r\nexport class ReviewComponent implements OnInit {\r\n\r\n  //Form Group\r\n  reviewForm: FormGroup = new FormGroup({});\r\n  dateControl = new FormControl(new Date());\r\n  toggleFormControl = new FormControl();\r\n\r\n  // Business Data\r\n  businessName: String = myGlobals.emptyField;\r\n  businessLocation: String = myGlobals.emptyField;\r\n  id: String = myGlobals.emptyField;\r\n\r\n  safetyMeasuresList: Array<SafetyMeasures> = [];\r\n  safetyMeasure: SafetyMeasures = { title: myGlobals.emptyField, description: myGlobals.emptyField, confirmed: myGlobals.emptyField }\r\n\r\n  constructor(public data: DataService, public router: Router, private activatedRoute: ActivatedRoute) {\r\n    this.id = this.activatedRoute.snapshot.paramMap.get('id') || myGlobals.emptyField;\r\n    this.data.getUserView(this.id).subscribe(\r\n      data => {\r\n        this.businessName = data.user.businessName;\r\n        this.businessLocation = data.user.location;\r\n        this.safetyMeasuresList = data.user.safetyMeasures;\r\n      })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.reviewForm = new FormGroup({\r\n      username: new FormControl('', [Validators.required]),\r\n      visitDate: new FormControl('', [Validators.required]),\r\n      comment: new FormControl('', [Validators.required]),\r\n      toggleFormControl: new FormControl()\r\n    })\r\n  }\r\n\r\n  // should display page with thank you message?\r\n  onSubmit() {\r\n    this.data.addReview(this.reviewForm.value, this.id);\r\n    this.router.navigate(['/reviewConfirmation']);\r\n  }\r\n\r\n  checked = false;\r\n  toggle(checked) {\r\n    checked = true;\r\n  }\r\n\r\n  countConfirm(index: any) {\r\n    let numberConfirmations = 0;\r\n    if (this.safetyMeasuresList[index].confirmed !== undefined) {\r\n      numberConfirmations = parseInt(this.safetyMeasuresList[index].confirmed.toString(), 10);\r\n    }\r\n    numberConfirmations = numberConfirmations + 1;\r\n    this.safetyMeasuresList[index].confirmed = numberConfirmations.toString();\r\n  }\r\n}\r\n","<!--  Server - CovidBit - Fast Pandas\r\n      Created: 25, March, 2021, Valya Derksen-->\r\n\r\n<nb-card>\r\n    <nb-card-header>\r\n        <h3 class=\"review-header\">Leave Your Review on {{businessName}}</h3>\r\n        <p class=\"review-header\">located at {{businessLocation}}</p>\r\n    </nb-card-header>\r\n    <nb-card-body>\r\n        <form [formGroup]='reviewForm' (ngSubmit)=\"onSubmit()\" class=\"form-components\">\r\n\r\n            <!-- User name Input Field -->\r\n            <div class=\"form-control-group\">\r\n                <label nbLabel class=\"label\" for=\"input-userName\">Your name:</label>\r\n                <input nbInput type=\"text\" placeholder=\"Your name\" fullWidth fieldSize=\"large\"\r\n                formControlName=\"username\"  required>\r\n\r\n                <ng-container>\r\n                    <p class=\"caption status-danger\"\r\n                        *ngIf=\"reviewForm.hasError('required', 'username') && reviewForm.get('username')?.touched\">\r\n                        Please, leave your name\r\n                    </p>\r\n                </ng-container>\r\n            </div>\r\n\r\n            <!-- Date picker -->        \r\n            <div class=\"form-control-group\">\r\n                <label nbLabel class=\"label\" for=\"input-visitDate\">When did you visit {{businessName}}?</label>\r\n                <input nbInput id=\"visitDate\" placeholder=\"Choose a date\" name=\"visitDate\" fullWidth fieldSize=\"large\" \r\n                [nbDatepicker]=\"formcontrol\" [formControl]=\"dateControl\" formControlName='visitDate' required>\r\n                <nb-datepicker #formcontrol></nb-datepicker>\r\n\r\n                <ng-container>\r\n                    <p class=\"caption status-danger\"\r\n                        *ngIf=\"reviewForm.hasError('required', 'visitDate') && reviewForm.get('visitDate')?.touched\">\r\n                        Please, choose a date of your last visit\r\n                    </p>\r\n                </ng-container>\r\n            </div>\r\n\r\n            <!-- Safety Measures Field -->\r\n            <div class=\"form-control-group\" >\r\n                <label nbLabel class=\"label\" for=\"input-safetyMeasuresList\">Do you confirm that {{businessName}} uses following Safety Measures?</label>\r\n                <nb-toggle [formControl]=\"toggleFormControl\" *ngFor=\"let measure of safetyMeasuresList; index as i\"\r\n                [checked]=checked (change)=\"toggle($event)\" (change)=\"countConfirm(i)\">{{measure.title}} ({{measure.description}})</nb-toggle>\r\n            </div>\r\n\r\n            <!-- Comment Input Field -->\r\n            <div class=\"form-control-group\">\r\n                <label nbLabel class=\"label\" for=\"input-comment\">Leave your comment:</label>\r\n                <textarea nbInput fullWidth placeholder=\"Your comment\"\r\n                formControlName=\"comment\" required\r\n                [status]=\"reviewForm.get('comment')?.dirty ? (reviewForm.get('comment')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n                <textarea nbInput fullWidth placeholder=\"Your comment\"></textarea>\r\n\r\n                <ng-container>\r\n                    <p class=\"caption status-danger\"\r\n                        *ngIf=\"reviewForm.hasError('required', 'comment') && reviewForm.get('comment')?.touched\">\r\n                        Please, leave a comment\r\n                    </p>\r\n                </ng-container>\r\n            </div>\r\n\r\n            <div class=\"button\">\r\n                <button type=\"submit\" nbButton outline status=\"success\"\r\n                [disabled]=\"this.reviewForm.get('username')?.invalid || this.reviewForm.get('visitDate')?.invalid || this.reviewForm.get('comment')?.invalid\">\r\n                Send Review</button>\r\n            </div>\r\n        </form>\r\n\r\n    </nb-card-body>\r\n</nb-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, FormArray, FormBuilder } from '@angular/forms'\r\nimport { AdmService } from 'src/app/services/adm-services/adm.service';\r\nimport { BusinessName } from '../../models/businessName.model';\r\nimport {Cases} from '../../models/case.model';\r\nimport * as myGlobals from '../../globals';\r\n\r\n@Component({\r\n  selector: 'app-edit-case',\r\n  templateUrl: './edit-case.component.html',\r\n  styleUrls: ['./edit-case.component.scss']\r\n})\r\nexport class EditCaseComponent implements OnInit {\r\n\r\n  // Acquisition options Array\r\n  acquisitionType = myGlobals.acquisitionType;\r\n  statusType = myGlobals.statusCases;\r\n  genderType = myGlobals.gender;\r\n\r\n  //Form Groups\r\n  caseReported: FormGroup = new FormGroup({});\r\n  dateControl = new FormControl(new Date());\r\n  form: FormGroup = new FormGroup({});\r\n  caseForm: FormGroup = new FormGroup({});\r\n\r\n  businessName: BusinessName = { name: '' };\r\n  newCase: Cases = { dateReported: 'Feb 10, 2021', status: \"\", gender: \"\", age: \"\", acquisition: \"\"};\r\n\r\n  // Reported Case Form Variables\r\n  cases: Array<Cases> = []\r\n\r\n  constructor(private fb: FormBuilder, public adm: AdmService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.businessName.name = localStorage.getItem('name_header') || myGlobals.emptyField;\r\n    this.adm.getUserCases(this.businessName).subscribe(\r\n      data => {\r\n        this.getCases(data);\r\n        this.caseForm = this.fb.group({\r\n          cases: this.fb.array(\r\n            this.cases.map(obj =>\r\n              this.fb.group({\r\n                dateReported: [obj.dateReported],\r\n                status: [obj.status],\r\n                acquisition: [obj.acquisition],\r\n                gender: [obj.gender],\r\n                age: [obj.age]\r\n              })\r\n            )\r\n          )\r\n        });\r\n      }\r\n    )\r\n  }\r\n  // Called by searchForBusiness()\r\n  // Gets an id list for cases for a specific user\r\n  getCases(data: any) {\r\n    for (let i = 0; i < data.cases.length; i++) {\r\n      if (data.cases[i] !== undefined) {\r\n        if (data.cases[i].businessName ==  this.businessName.name) {\r\n          this.newCase[\"status\"] = data.cases[i].status;\r\n          this.newCase[\"gender\"] = data.cases[i].gender;\r\n          this.newCase[\"age\"] = data.cases[i].age;\r\n          this.newCase[\"acquisition\"] = data.cases[i].acquisition;\r\n          this.newCase[\"dateReported\"] = 'Feb 10, 2021';\r\n          this.cases.push(this.newCase);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // submit ADD Case\r\n  onSubmit() {\r\n    console.log(\"Form Value: \", this.caseForm.value);\r\n  }\r\n\r\n  getControls() {\r\n    return (this.caseForm.get('cases') as FormArray).controls;\r\n  }\r\n\r\n  editCase(index: number) {\r\n    console.log(\"Form Value: \", this.caseForm.value);\r\n  }\r\n\r\n\r\n}\r\n","<form *ngIf=\"caseForm\" [formGroup]=\"caseForm\" (submit)=\"onSubmit()\" >\r\n    <div formArrayName=\"cases\" *ngFor=\"let caseFormGroup of getControls(); let idx = index;\">\r\n        <div [formGroupName]=\"idx\" class=\"form-inline\">\r\n    \r\n            <!-- Date picker -->        \r\n            <div class=\"form-control-group\">\r\n                <input nbInput id=\"dateReported\" name=\"dateReported\" fieldSize=\"medium\" formControlName='dateReported' required readonly>\r\n            </div>\r\n    \r\n            <!-- Case Status Dropdown Menu -->\r\n            <div class=\"form-control-group\">\r\n                <nb-select formControlName='status' name=\"status\" required filled status=\"primary\">\r\n                <nb-option *ngFor=\"let type of statusType\" [value]='type.name'>{{type.name}}</nb-option>\r\n                </nb-select>\r\n            </div>\r\n    \r\n            <!-- Acquisition Type Dropdown Menu -->\r\n            <div class=\"form-control-group\">\r\n                <nb-select formControlName='acquisition' name=\"acquisition\" required>\r\n                <nb-option *ngFor=\"let type of acquisitionType\" [value]='type.name' disabled>{{type.name}}</nb-option>\r\n                </nb-select>\r\n            </div>\r\n    \r\n            <!-- Gender Dropdown Menu -->\r\n            <div class=\"form-control-group\">\r\n                <nb-select formControlName='gender' required name=\"gender\" required >\r\n                <nb-option *ngFor=\"let type of genderType\" [value]='type.name' disabled>{{type.name}}</nb-option>\r\n                </nb-select>\r\n            </div>\r\n    \r\n            <!--Age input field-->\r\n            <div class=\"form-control-group\">\r\n                <input nbInput type=\"number\" id=\"age\" name=\"age\" formControlName='age'  fieldSize=\"medium\" required min=\"1\" max=\"110\" readonly>\r\n            </div>\r\n\r\n            <div class=\"form-control-group\">\r\n                <button (click)=\"editCase(idx)\" nbButton size=\"medium\" outline status=\"primary\">Update Case</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n\r\n","// Server - CovidBit - Fast Pandas\r\n// Created:  16, February, 2021, John Turkson\r\n// Modified: 04, March, 2021, Teresa Costa: backend integration, global variables\r\n//           20, March, 2021, John Turkson: improvements on backend/frontend integration\r\n//           28, March, 2021, Teresa Costa: delete works\r\n\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators, AbstractControl } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\n// Local Service\r\nimport { AdmService } from '../../../services/adm-services/adm.service';\r\n// Models\r\nimport { BusinessName } from '../../../models/businessName.model';\r\nimport * as myGlobals from '../../../globals';\r\n\r\n@Component({\r\n  selector: 'app-case-settings',\r\n  templateUrl: './case-settings.component.html',\r\n  styleUrls: ['./case-settings.component.scss']\r\n})\r\nexport class CaseSettingsComponent implements OnInit {\r\n\r\n  //Gender Types\r\n  genderArray = myGlobals.gender;\r\n  statusList = myGlobals.statusCases;\r\n  acquisitionList = myGlobals.acquisitionType;\r\n\r\n  // Form instances\r\n  caseResults: FormGroup = new FormGroup({});\r\n  businessSearch: FormGroup = new FormGroup({});\r\n  newCaseInformation: FormGroup = new FormGroup({});\r\n\r\n  businessName: BusinessName = { name: '' };\r\n\r\n  // Check boolean\r\n  displayCaseList = false;\r\n  searchCheck = false\r\n  checked: Boolean = false;\r\n  alertCaseRemoved: Boolean = false;\r\n  alertCaseAdded: Boolean = false;\r\n\r\n  foundBusinesses: Array<String> = [];\r\n  foundBusinessCases: Array<any> = [];\r\n  casesIDList: Array<String> = [];\r\n  listOfBusinesses: Array<String> = [];\r\n\r\n  constructor(private formBuilder: FormBuilder, public adm: AdmService) {\r\n    this.caseResults = this.formBuilder.group({\r\n      checkArray: this.formBuilder.array([], [Validators.required])\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.newCaseInformation = new FormGroup({\r\n      businessName: new FormControl('', [Validators.required]),\r\n      status: new FormControl('', [Validators.required]),\r\n      gender: new FormControl('', [Validators.required]),\r\n      age: new FormControl('', [Validators.required]),\r\n      acquisition: new FormControl('', [Validators.required])\r\n    })\r\n    this.businessSearch = new FormGroup({\r\n      searchedBusiness: new FormControl('', [Validators.required])\r\n    });\r\n    this.adm.getUserAdm(this.businessName).subscribe(//Fill Dropdown List with businesses from the Database\r\n      data => {\r\n        this.fillDropdownList(data);\r\n      }\r\n    );\r\n  }\r\n\r\n  addCase() {\r\n    this.adm.addUserCasesAdm(this.newCaseInformation.value);\r\n    this.alertCaseAdded = true;\r\n    this.newCaseInformation.reset();\r\n  }\r\n\r\n  // (ngSubmit)\r\n  searchForBusiness() {\r\n    //Clear Arrays that hold information\r\n    this.foundBusinessCases = [];\r\n    this.casesIDList = [];\r\n    this.businessName.name = this.businessSearch.get('searchedBusiness')?.value;\r\n    this.adm.getUserCases(this.businessName).subscribe(\r\n      data => {\r\n        this.getCases(data)\r\n        if (this.foundBusinessCases.length === 0) {\r\n          this.searchCheck = true;\r\n          this.displayCaseList = false;\r\n        } else {\r\n          this.displayCaseList = true;\r\n          this.searchCheck = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  // (changeTab) handler\r\n  tabReset() {\r\n    this.displayCaseList = false;\r\n    this.searchCheck = false;\r\n    this.businessSearch.get('searchedBusiness')?.setValue('');\r\n  }\r\n\r\n  // (change) handler\r\n  getCheckedValue(event: any) {\r\n    const checkArray: FormArray = this.caseResults.get('checkArray') as FormArray;\r\n    if (event.target.checked) {\r\n      checkArray.push(new FormControl(event.target.value));\r\n    } else {\r\n      let index: number = 0;\r\n      checkArray.controls.forEach(\r\n        (item: AbstractControl) => {\r\n          if (item.value == event.target.value) {\r\n            checkArray.removeAt(index);\r\n            return;\r\n          }\r\n          index++;\r\n        });\r\n    }\r\n  }\r\n\r\n  // (ngSubmit)\r\n  removeCases() {\r\n    let removeList = this.caseResults.value.checkArray;\r\n    this.adm.deleteUserCasesAdm(removeList).subscribe(\r\n      data => {\r\n        this.alertCaseRemoved = true;\r\n        this.businessSearch.reset();\r\n        this.caseResults.reset();\r\n        this.casesIDList = [];\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  // Called by ngOnInit()\r\n  // Fills the dropdown for business users\r\n  fillDropdownList(data: any) {\r\n    for (let i = 0; i < data.users.length; i++) {\r\n      this.listOfBusinesses.push(data.users[i].businessName);\r\n    }\r\n  }\r\n\r\n  // Called by searchForBusiness()\r\n  // Gets an id list for cases for a specific user\r\n  getCases(data: any) {\r\n    for (let i = 0; i < data.cases.length; i++) {\r\n      if (data.cases[i] !== undefined) {\r\n        if (data.cases[i].businessName == this.businessSearch.get('searchedBusiness')?.value) {\r\n          this.foundBusinessCases.push(data.cases[i]);\r\n          this.casesIDList.push(data.cases[i]._id);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Removes alert messages\r\n  onClose() {\r\n    this.alertCaseRemoved = false;\r\n    this.alertCaseAdded = false;\r\n  }\r\n\r\n  toggle(checked: any) {\r\n    this.casesIDList.push(checked.value);\r\n  }\r\n  getBusinesses(data: any) {\r\n    for (let i = 0; i < Object.keys(data).length; i++) {\r\n      if (data.myUsers[i].businessName == this.businessSearch.get('searchedBusiness')?.value) {\r\n        this.foundBusinesses.push(data.myUsers[i].businessName);\r\n        this.casesIDList.push(data.myUsers[i]._id);\r\n      }\r\n\r\n    }\r\n  }\r\n  convertToValue(key: string) {\r\n    return this.caseResults.value[key].map((x: any, i: any) => !1)\r\n  }\r\n}","<!-- Server - CovidBit - Fast Pandas\r\n     Created:  16, February, 2021, John Turkson \r\n     Modified: 31, March, 2021, Teresa Costa, added dropdown for gender, status, acquisition -->\r\n\r\n<!-- Case Managment Card -->\r\n<nb-card>\r\n  <nb-card-header>Case Management Settings</nb-card-header>\r\n  <nb-card-body>\r\n\r\n    <!-- Alert Block -->\r\n    <nb-alert status=\"success\" closable (close)=\"onClose()\" *ngIf=\"alertCaseAdded\">\r\n      Case Successfully Created!\r\n    </nb-alert>\r\n    <nb-alert status=\"success\" closable (close)=\"onClose()\" *ngIf=\"alertCaseRemoved\">\r\n      Case Successfully Removed!\r\n    </nb-alert>\r\n\r\n    <!-- Case Managment Tabset -->\r\n    <nb-tabset (changeTab)=\"tabReset()\">\r\n\r\n      <!-- Add Case -->\r\n      <nb-tab tabTitle=\"Add Case\">\r\n        <form [formGroup]=\"newCaseInformation\" (ngSubmit)=\"addCase()\">\r\n          <div class=\"row\">\r\n            <div class=\"col\" style=\"text-align: center;\">\r\n              <div class=\"editor\">\r\n                <nb-form-field>\r\n                  <nb-select formControlName=\"businessName\" placeholder=\"Select Business\" name=\"businessName\"\r\n                    fullWidth=\"true\" fieldSize=\"medium\"\r\n                    [status]=\"newCaseInformation.get('businessName')?.touched ? (newCaseInformation.get('businessName')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n                    <nb-option *ngFor=\"let name of listOfBusinesses\" [value]='name'>{{name}}</nb-option>\r\n                  </nb-select>\r\n                </nb-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <nb-form-field>\r\n                <nb-select formControlName=\"status\" placeholder=\"Enter Status\" name=\"status\" fullWidth=\"true\"\r\n                  fieldSize=\"large\"\r\n                  [status]=\"newCaseInformation.get('status')?.touched ? (newCaseInformation.get('status')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n                  <nb-option *ngFor=\"let item of statusList\" [value]='item.name'>{{item.name}}</nb-option>\r\n                </nb-select>\r\n              </nb-form-field>\r\n            </div>\r\n            <div class=\"col\">\r\n              <nb-form-field>\r\n                <nb-select formControlName=\"gender\" placeholder=\"Select Gender\" name=\"gender\" fullWidth=\"true\"\r\n                  fieldSize=\"medium\"\r\n                  [status]=\"newCaseInformation.get('gender')?.touched ? (newCaseInformation.get('gender')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n                  <nb-option *ngFor=\"let gender of genderArray\" [value]='gender.name'>{{gender.name}}</nb-option>\r\n                </nb-select>\r\n              </nb-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <nb-form-field>\r\n                <input nbInput type=\"number\" id=\"input-case-age\" name=\"age\" formControlName='age'\r\n                  placeholder=\"Enter Age\" fieldSize=\"medium\" fullWidth\r\n                  [status]=\"newCaseInformation.get('age')?.touched ? (newCaseInformation.get('age')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n                <nb-icon\r\n                  *ngIf=\"newCaseInformation.hasError('required','age') && newCaseInformation.get('age')?.touched === true\"\r\n                  nbSuffix icon=\"alert-circle-outline\"></nb-icon>\r\n                <nb-icon *ngIf=\"newCaseInformation.get('age')?.valid === true\" nbSuffix icon=\"checkmark-outline\">\r\n                </nb-icon>\r\n              </nb-form-field>\r\n            </div>\r\n            <div class=\"col\">\r\n              <nb-form-field>\r\n                <nb-select formControlName=\"acquisition\" placeholder=\"Transmited\" name=\"acquisition\" fullWidth=\"true\"\r\n                  fieldSize=\"large\"\r\n                  [status]=\"newCaseInformation.get('acquisition')?.touched ? (newCaseInformation.get('acquisition')?.invalid ? 'danger' : 'success') : 'basic' \">\r\n                  <nb-option *ngFor=\"let item of acquisitionList\" [value]='item.name'>{{item.name}}</nb-option>\r\n                </nb-select>\r\n              </nb-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"buttonSlot\">\r\n            <button class=\"button\" type=\"submit\" nbButton outline status=\"success\"\r\n              [disabled]=\"this.newCaseInformation.invalid\">Add Case</button>\r\n          </div>\r\n        </form>\r\n      </nb-tab>\r\n\r\n      <!-- Remove Case -->\r\n      <nb-tab tabTitle=\"Remove Case\">\r\n        <form [formGroup]=\"businessSearch\" (ngSubmit)=\"searchForBusiness()\">\r\n          <div class=\"editor\">\r\n            <nb-form-field>\r\n              <input nbInput placeholder=\"Search For Business\" id=\"businessSearch\" formControlName=\"searchedBusiness\">\r\n              <button type=\"submit\" nbSuffix nbButton ghost>\r\n                <nb-icon icon=\"search-outline\"></nb-icon>\r\n              </button>\r\n            </nb-form-field>\r\n            <ng-container>\r\n              <p class=\"caption status-danger\" *ngIf=\" searchCheck === true\">\r\n                Business Not Found!\r\n              </p>\r\n            </ng-container>\r\n          </div>\r\n          <ng-container *ngIf=\"displayCaseList === true\">\r\n            <p class=\"subtitle\">Displaying Cases from: {{businessSearch.get('searchedBusiness')?.value}}</p>\r\n          </ng-container>\r\n        </form>\r\n        <form [formGroup]=\"caseResults\" (ngSubmit)='removeCases()' novalidate>\r\n          <nb-list size=\"medium\" *ngIf=\"displayCaseList === true\">\r\n            <nb-list-item *ngFor=\"let data of foundBusinessCases; let i = index\">\r\n              <input id=\"casesInputBoxes\" nbCheckbox type=\"checkbox\" (change)=\"getCheckedValue($event)\"\r\n                [value]=\"data._id\">\r\n              <p style=\"font-weight: bold;\">Case #{{i + 1}} Status: {{ data.status }}, Acquisition:\r\n                {{data.acquisition}}, Age: {{data.age}}, Gender: {{data.gender}}</p>\r\n            </nb-list-item>\r\n          </nb-list>\r\n          <div class=\"buttonSlot\" *ngIf=\"displayCaseList === true\">\r\n            <button class=\"button\" type=\"submit\" nbButton outline status=\"success\"\r\n              [disabled]=\"this.caseResults.hasError('required', 'checkArray')\">Remove Case</button>\r\n          </div>\r\n        </form>\r\n      </nb-tab>\r\n    </nb-tabset>\r\n  </nb-card-body>\r\n</nb-card>","// Server - CovidBit - Fast Pandas\r\n// Created: 04, March, 2021, Teresa Costa\r\n\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\n// Local Services\r\nimport { BusinessName } from '../../models/businessName.model';\r\nimport { Cases } from '../../models/case.model';\r\nimport { Email } from '../../models/email.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdmService {\r\n\r\n  endpoint: string = 'https://backend-covidbit.herokuapp.com/api/';\r\n  headers = new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': 'POST,GET,OPTIONS, PUT, DELETE',\r\n    'Access-Control-Allow-Headers': 'Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization'\r\n  });\r\n\r\n  constructor(private http: HttpClient, public router: Router) { }\r\n\r\n  ////////////   BUSINESS USER //////////////\r\n\r\n  // Administrator to search multiple users on database using business name\r\n  getUserAdm(business: BusinessName) {\r\n    const api = `${this.endpoint}/get-user-adm`;\r\n    return this.http.post<any>(api, business).pipe(\r\n      map(\r\n        data => {\r\n          return data;\r\n        },\r\n        (error: any) => {\r\n          window.alert(\"Not possible to get business users.\");\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  // Administrator sends invitation to new user to register\r\n  inviteNewUser(email: Email) {\r\n    const api = `${this.endpoint}/invite-new-user`;\r\n    return this.http.post<any>(api, email).pipe(\r\n      map(\r\n        data => {\r\n          return data;\r\n        },\r\n        (error: any) => {\r\n          window.alert(\"Not possible to send invitation\");\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  // Administrator can delete a business user\r\n  deleteUserAdm(id: Array<String>) {\r\n    const api = `${this.endpoint}/delete-user-adm`;\r\n    return this.http.post<String>(api, id).pipe(\r\n      map(\r\n        data => {\r\n          return data;\r\n        },\r\n        (error: any) => {\r\n          window.alert(\"Not possible to delete business user.\");\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  ////////////   CASES    //////////////\r\n\r\n  // Administrator can search cases for a specific business\r\n  getUserCases(business: BusinessName) {\r\n    console.log(business)\r\n    const api = `${this.endpoint}/get-user-cases`;\r\n    return this.http.post<any>(api, business).pipe(\r\n      map(\r\n        (data) => {\r\n          return data;\r\n        },\r\n        (error: any) => {\r\n          window.alert(\"Not possible to get user cases.\");\r\n        }\r\n      ))\r\n  }\r\n\r\n  // Administrator can add a case\r\n  addUserCasesAdm(data: Cases) {\r\n    const api = `${this.endpoint}/add-user-cases-adm`;\r\n    return this.http.post<any>(api, data, { headers: this.headers }).subscribe(\r\n      (data) => {\r\n        return data;\r\n      },\r\n      (error: any) => {\r\n        window.alert(\"No possible to add a new case.\");\r\n      }\r\n    )\r\n  }\r\n\r\n  // Administrator can delete a business user case\r\n  deleteUserCasesAdm(id: Array<String>) {\r\n    const api = `${this.endpoint}/delete-user-cases-adm`;\r\n    return this.http.post<String>(api, id).pipe(\r\n      map(\r\n        data => {\r\n          return data;\r\n        },\r\n        (error: any) => {\r\n          window.alert(\"Not possible to delete a case.\");\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n\r\n  /////WHAT IS THIS ROUTE?\r\n\r\n  //Search for Business Name and Location\r\n  searchBusinessNameLocationAdm(business: BusinessName) {\r\n    const api = `${this.endpoint}/search-nameandLocation-adm`;\r\n    return this.http.post<any>(api, business)\r\n      .pipe(\r\n        map(\r\n          data => {\r\n            return data;\r\n          },\r\n          (error: any) => {\r\n            window.alert(\"No business with this name.\");\r\n          }\r\n        ))\r\n  }\r\n\r\n}","// Server - CovidBit - Fast Pandas\r\n// Created: 10, February, 2021, Yevgeniya Anasheva\r\n// Changed: 15, March, 2021, Teresa Costa, added integration with authentication, typescript variables, sidebar\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NbMenuItem, NbMenuService, NbSidebarService } from '@nebular/theme';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n// Local Service\r\nimport { AuthService } from '../services/auth-services/auth.service';\r\nimport * as myGlobals from '../globals';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  businessName: String = myGlobals.emptyField;\r\n  id: String = myGlobals.emptyField;\r\n\r\n  itemsTitle: Array<any> = [{ title: 'Profile' }, { title: 'Logout' }];\r\n  itemsTitleAdm: Array<any> = [{ title: 'Dashboard' }, { title: 'Logout' }];\r\n\r\n  // Sidebar Variables\r\n  itemsMenu: Array<any> = [{\r\n    title: 'Home',\r\n    link: '/home',\r\n    home: true\r\n  },\r\n  {\r\n    title: 'Tracker Map',\r\n    link: '/tracker-map',\r\n  }]\r\n  items: NbMenuItem[] = this.itemsMenu;\r\n\r\n  // Nav Type Control\r\n  loggedIn: Boolean = false;\r\n  loggedInBusiness: Boolean = false;\r\n  loggedInAdm: Boolean = false;\r\n\r\n  constructor(private nbMenuService: NbMenuService, private router: Router, private auth: AuthService, private readonly sidebarService: NbSidebarService) { }\r\n\r\n  ngOnInit() {\r\n    this.addMenu(1);\r\n    this.router.events.subscribe(event => {\r\n      if (event.constructor.name === \"NavigationEnd\") {\r\n        if (this.auth.isLoggedIn) {\r\n          this.addMenu(2);\r\n          this.loggedIn = this.auth.isLoggedIn;\r\n          this.loggedInBusiness = this.auth.isLoggedIn;\r\n          this.businessName = localStorage.getItem('name_header') || myGlobals.emptyField;\r\n          this.id = localStorage.getItem('business_id') || myGlobals.emptyField;\r\n        } else if (this.auth.isAdmin) {\r\n          this.addMenu(3);\r\n          this.loggedIn = this.auth.isAdmin;\r\n          this.loggedInAdm = this.auth.isAdmin;\r\n          this.businessName = \"Administrator\"\r\n        }\r\n      }\r\n    })\r\n\r\n    this.nbMenuService.onItemClick()\r\n      .pipe(\r\n        filter(({ tag }) => tag === 'my-context-menu'),\r\n        map(({ item: { title } }) => title),\r\n      )\r\n      .subscribe(title => {\r\n        if (title == \"Profile\") {\r\n          if (this.auth.isLoggedIn) {\r\n            this.router.navigate(['business-dashboard/' + this.id]);\r\n          } else if (this.auth.isAdmin) {\r\n            this.router.navigate(['admin-dashboard']);\r\n          }\r\n        }\r\n        if (title == \"Logout\") {\r\n          this.auth.doLogout();\r\n          this.loggedIn = false;\r\n          this.loggedInAdm = false;\r\n          this.loggedInBusiness = false;\r\n        }\r\n      });\r\n  }\r\n  toggleSidebar(): Boolean {\r\n    this.sidebarService.toggle();\r\n    return false;\r\n  }\r\n\r\n  // Control Sidebar for Smartphone View\r\n  addMenu(section) {\r\n    let menuItem = {};\r\n    if (section === 1) {\r\n      menuItem = { title: \"Login\", link: \"/login-form\" }\r\n      this.itemsMenu.push(menuItem);\r\n    } else if (section === 2) {\r\n      menuItem = { title: \"Profile\", link: '/business-dashboard/' + this.id }\r\n      this.itemsMenu.pop();\r\n      this.itemsMenu.push(menuItem);\r\n    } else if (section === 3) {\r\n      menuItem = { title: \"Dashboard\", link: '/admin-dashboard' }\r\n      this.itemsMenu.pop();\r\n      this.itemsMenu.push(menuItem);\r\n    }\r\n  }\r\n}","<!-- Server - CovidBit - Fast Pandas\r\n     Created: 10, February, 2021, Yevgeniya Anasheva-->\r\n\r\n<nb-icon (click)=\"toggleSidebar()\" class=\"sidebar-toggle\" icon=\"menu-2-outline\"></nb-icon>\r\n<h2>COVIDBIT</h2>\r\n<div class=\"navigation-buttons\">\r\n    <app-search-widget></app-search-widget>\r\n    <button nbButton><a routerLink=\"/home\" routerLinkActive=\"active\">Home</a></button>\r\n    <button nbButton><a routerLink=\"/tracker-map\" routerLinkActive=\"active\">Tracker Map</a></button>\r\n    <button *ngIf=\"loggedInBusiness\" nbButton [nbContextMenu]=\"itemsTitle\" nbContextMenuTag=\"my-context-menu\">\r\n        {{businessName}}\r\n    </button>\r\n    <button *ngIf=\"loggedInAdm\" nbButton [nbContextMenu]=\"itemsTitleAdm\" nbContextMenuTag=\"my-context-menu\">\r\n        {{businessName}}\r\n    </button>\r\n    <button *ngIf=\"!loggedIn\" nbButton><a routerLink=\"/login-form\" routerLinkActive=\"active\">Login</a></button>\r\n</div>\r\n<nb-sidebar class=\"menu-sidebar\" state='collapsed' class=\"right-sidebar\" fixed end>\r\n    <nb-menu [items]=\"items\"></nb-menu>\r\n</nb-sidebar>","// Server - CovidBit - Fast Pandas\r\n// Created: 15, February, 2021, Yevgeniya Anasheva\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<!-- Server - CovidBit - Fast Pandas\r\n     Created: 15, February, 2021, Yevgeniya Anasheva-->\r\n\r\n<div class=\"column\">\r\n    <a routerLink=\"/about-us\" routerLinkActive=\"active\">About Us</a> <br>\r\n    <a routerLink=\"/terms\" routerLinkActive=\"active\">Terms</a> <br>\r\n    <a routerLink=\"/policy\" routerLinkActive=\"active\">Policy</a> <br>\r\n    <a href=\"https://www.canada.ca/en/public-health/services/diseases/2019-novel-coronavirus-infection.html\"\r\n        target=\"_blank\">Canada COVID-19</a> <br>\r\n    <a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\" target=\"_blank\">World Health Organization\r\n        (WHO)</a>\r\n</div>\r\n<div class=\"column\">\r\n    <p>© Fast Pandas, 2021</p>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api-covid-services/api.service';\r\nimport * as myGlobals from '../../../globals';\r\n\r\n@Component({\r\n  selector: 'app-bar-ontario-canada-vaccines',\r\n  templateUrl: './bar-ontario-canada-vaccines.component.html',\r\n  styleUrls: ['./bar-ontario-canada-vaccines.component.scss']\r\n})\r\nexport class BarOntarioCanadaVaccinesComponent implements OnInit {\r\n\r\n  basicData: any;\r\n  basicOptions: any;\r\n\r\n  distributedVaccines: any = 0;\r\n  distributedVaccinesOntario: any;\r\n  appliedVaccines: any = 0;\r\n  appliedVaccinesOntario: any;\r\n\r\n\r\n  totalData: any;\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.apiService.getAllData().subscribe((data) => { //Call COVID API\r\n      this.totalData = data;\r\n      this.countDataOntario();\r\n      this.countData();\r\n      this.basicData = {\r\n        labels: ['Distributed Vaccines', 'Applied Vaccines'],\r\n        datasets: [\r\n          {\r\n            label: 'Ontario',\r\n            backgroundColor: myGlobals.background[4],\r\n            data: [this.distributedVaccinesOntario, this.appliedVaccinesOntario]\r\n          },\r\n          {\r\n            label: 'Canada',\r\n            backgroundColor: myGlobals.background[5],\r\n            data: [this.distributedVaccines, this.appliedVaccines]\r\n          }\r\n        ]\r\n      };\r\n    })\r\n  }\r\n  countDataOntario() {\r\n    for (var i = 0; i <= this.totalData.summary.length - 1; i++) {\r\n      if (this.totalData.summary[i].province === \"Ontario\") {\r\n        if (this.totalData.summary[i].cumulative_dvaccine !== \"NULL\") {\r\n          this.distributedVaccinesOntario = this.totalData.summary[i].cumulative_dvaccine;\r\n        }\r\n        if (this.totalData.summary[i].cumulative_avaccine !== \"NULL\") {\r\n          this.appliedVaccinesOntario = this.totalData.summary[i].cumulative_avaccine;\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  countData() {\r\n    let cnt = 0;\r\n    for (var i = 0; i <= this.totalData.summary.length - 1; i++) {\r\n      if (this.totalData.summary[i].cumulative_avaccine !== \"NULL\") {\r\n        this.appliedVaccines += this.totalData.summary[i].cumulative_avaccine;\r\n      }\r\n      if (this.totalData.summary[i].cumulative_dvaccine !== \"NULL\") {\r\n        this.distributedVaccines += this.totalData.summary[i].cumulative_dvaccine;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n    <p-chart type=\"bar\" [data]=\"basicData\" [options]=\"basicOptions\"></p-chart>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api-covid-services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-ontario-canada',\r\n  templateUrl: './ontario-canada.component.html',\r\n  styleUrls: ['./ontario-canada.component.scss']\r\n})\r\nexport class OntarioCanadaComponent implements OnInit {\r\n  stackedData: any;\r\n  stackedOptions: any;\r\n  caseInformation: any;\r\n  totalVaccinations: any = 0;\r\n  totalVaccinationsOntario: any;\r\n  totalVaccinated: any = 0;\r\n  totalVaccinatedOntario: any;\r\n  totalVaccinesDistributed: any = 0;\r\n  totalVaccinesDistributedOntario: any;\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.apiService.getCaseData().subscribe((data) => {  //Call COVID API\r\n      this.caseInformation = data;\r\n      for (let i = 0; i < this.caseInformation.data.length; i++) {   //Check for ON (Ontario) Province Prefix\r\n        this.totalVaccinations += this.caseInformation.data[i].total_vaccinations;\r\n        this.totalVaccinated += this.caseInformation.data[i].total_vaccinated;\r\n        this.totalVaccinesDistributed += this.caseInformation.data[i].total_vaccines_distributed;\r\n        if (this.caseInformation.data[i].province == \"ON\") {\r\n          this.totalVaccinationsOntario = this.caseInformation.data[i].total_vaccinations;\r\n          this.totalVaccinatedOntario = this.caseInformation.data[i].total_vaccinated;\r\n          this.totalVaccinesDistributedOntario = this.caseInformation.data[i].total_vaccines_distributed;\r\n\r\n\r\n\r\n        }\r\n      }\r\n\r\n      this.stackedData = {\r\n        labels: ['Total Vaccinations', 'Total People Vaccinated', 'Vaccines Distributed'],\r\n        datasets: [{\r\n          type: 'bar',\r\n          label: 'Canada',\r\n          backgroundColor: \"#4DA8DA\",\r\n\r\n          data: [this.totalVaccinations, this.totalVaccinated, this.totalVaccinesDistributed]\r\n        }, {\r\n          type: 'bar',\r\n          label: 'Ontario',\r\n          backgroundColor: \"#203647\",\r\n          data: [\r\n            this.totalVaccinationsOntario, this.totalVaccinatedOntario, this.totalVaccinesDistributedOntario\r\n          ]\r\n        },]\r\n      };\r\n\r\n      this.stackedOptions = {\r\n        tooltips: {\r\n          mode: 'index',\r\n          intersect: false\r\n        },\r\n        responsive: true,\r\n        scales: {\r\n          xAxes: [{\r\n            stacked: true,\r\n          }],\r\n          yAxes: [{\r\n            stacked: true\r\n          }]\r\n        }\r\n      };\r\n\r\n\r\n    })\r\n  }\r\n}\r\n","\r\n    <p-chart type=\"bar\" [data]=\"stackedData\" [options]=\"stackedOptions\"></p-chart>\r\n\r\n","// Server - CovidBit - Fast Pandas\r\n// Created: 08, February, 2021, Teresa Costa\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n// Local services\r\nimport { LoginCredentials } from '../../models/logincredentials.model';\r\nimport { SafetyMeasures } from '../../models/safetyMeasures.model';\r\nimport { SmallBusiness } from '../../models/smallBusiness.model';\r\nimport { DataService } from '../data-services/data.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n  endpoint: string = 'https://backend-covidbit.herokuapp.com/api/';\r\n  headers = new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': 'POST,GET,OPTIONS, PUT, DELETE',\r\n    'Access-Control-Allow-Headers': 'Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization'\r\n  });\r\n\r\n  constructor(private http: HttpClient, public router: Router, public data: DataService) { }\r\n\r\n  // Business User Registration (Administrator/ New Business User)\r\n  registrationForm(user: SmallBusiness, safetyMeasures: Array<SafetyMeasures>, registeredBy: Boolean) {\r\n    user.registeredBy = registeredBy;\r\n    const api = `${this.endpoint}/registration-form`;\r\n    return this.http.post<any>(api, { user, safetyMeasures }).subscribe(\r\n      (data: SmallBusiness) => {\r\n        if (registeredBy == true) {\r\n          this.router.navigate(['admin-dashboard']);\r\n        } else {\r\n          this.router.navigate(['login-form']);\r\n        }\r\n      },\r\n      (error: any) => {\r\n        if (registeredBy == true) {\r\n          window.alert(\"Registration of new user not Allowed!\");\r\n          this.router.navigate(['admin-dashboard']);\r\n        } else {\r\n          this.router.navigate(['registration-form']).then(() => {\r\n            localStorage.setItem('server_warning', 'true');\r\n            window.location.reload();\r\n          });\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  // Business user/Administrator login Form\r\n  loginForm(user: LoginCredentials) {\r\n    const api = `${this.endpoint}/login-form`;\r\n    return this.http.post<any>(api, user).pipe().subscribe(\r\n      (data: any) => {\r\n        if (data.admin !== undefined && data.admin.loginId === \"admin@myAdmin.ca\") {\r\n          localStorage.removeItem('access_token');\r\n          localStorage.setItem('admin_token', data.adminToken);\r\n          this.router.navigate(['/admin-dashboard']).then(() => {\r\n            window.location.reload();\r\n          });\r\n        } else {\r\n          localStorage.setItem('access_token', data.accessToken);\r\n          localStorage.setItem('name_header', data.user.businessName);\r\n          localStorage.setItem('business_id', data.user._id);\r\n          this.data.getUserView(data.user._id)\r\n            .subscribe(\r\n              data => {\r\n                this.router.navigate(['/business-dashboard/' + data.user._id]);\r\n              }\r\n            )\r\n        }\r\n      },\r\n      (error: any) => {\r\n        this.router.navigate(['login-form']).then(() => {\r\n          localStorage.setItem('server_warning', 'true');\r\n          window.location.reload();\r\n        });;\r\n      }\r\n    )\r\n  }\r\n\r\n  // Edit the Business Profile\r\n  editProfile(user: SmallBusiness, id: String) {\r\n    const api = `${this.endpoint}/edit-profile/${id}`;\r\n    return this.http.put<any>(api, user)\r\n      .subscribe(\r\n        data => {\r\n          this.router.navigate(['/business-dashboard/' + data.id]).then(() => {\r\n            window.location.reload();\r\n          });\r\n        },\r\n        error => {\r\n          console.log(\"It was not possible to edit profile!\");\r\n        }\r\n      )\r\n  }\r\n\r\n  // Business User is allowed to add safety measures\r\n  addSafety(safety: any, id: String) {\r\n    const api = `${this.endpoint}/add-safety/${id}`;\r\n    return this.http.put<any>(api, safety)\r\n      .subscribe(\r\n        data => {\r\n          return data;\r\n        },\r\n        error => {\r\n          console.log(\"It was not possible to add safety meausure!\");\r\n        }\r\n      )\r\n  }\r\n\r\n  // Retrieve local storage\r\n  getToken() {\r\n    return localStorage.getItem('access_token') || localStorage.getItem('admin_token');\r\n  }\r\n  getBusinesName() {\r\n    return localStorage.getItem('name_header');\r\n  }\r\n  getId() {\r\n    return localStorage.getItem('business_id');\r\n  }\r\n\r\n  // Business User Logout\r\n  doLogout() {\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('admin_token');\r\n    localStorage.removeItem('name_header');\r\n    localStorage.removeItem('business_id');\r\n    this.router.navigate(['login-form']);\r\n  }\r\n\r\n  // Check if it is authenticated\r\n  get isLoggedIn(): boolean {\r\n    let authToken = localStorage.getItem('access_token');\r\n    return (authToken !== null) ? true : false;\r\n  }\r\n  get isAdmin(): boolean {\r\n    let authToken = localStorage.getItem('admin_token');\r\n    return (authToken !== null) ? true : false;\r\n  }\r\n\r\n  addCertification(certification: any, id: String) {\r\n    const api = `${this.endpoint}/certification-form/${id}`;\r\n    return this.http.post<any>(api, certification)\r\n      .subscribe(\r\n        data => {\r\n          this.router.navigate(['/business-dashboard/' + data.id]).then(() => {\r\n            window.location.reload();\r\n          });\r\n        },\r\n        error => {\r\n          console.log(\"It was not possible to add certification!\");\r\n        }\r\n      )\r\n  }\r\n\r\n  deleteSafety(id: String) {\r\n    const api = `${this.endpoint}/remove-safety`;\r\n    return this.http.post<String>(api, id)\r\n      .pipe(\r\n        map(\r\n          data => {\r\n            return data;\r\n          },\r\n          (error: any) => {\r\n            window.alert(\"No case to delete.\");\r\n          }\r\n        )\r\n      )\r\n  }\r\n\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor, HttpRequest, HttpHandler } from \"@angular/common/http\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\n\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private auth: AuthService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        const authToken = this.auth.getToken();\r\n        req = req.clone({\r\n            setHeaders: {\r\n                Authorization: \"Bearer \" + authToken\r\n            }\r\n        });\r\n        return next.handle(req);\r\n    }\r\n}","// Server - CovidBit - Fast Pandas\r\n// Created: 08, March, 2021, Teresa Costa\r\n\r\nimport { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-policy',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: './policy.component.html',\r\n  styleUrls: ['./policy.component.scss']\r\n})\r\nexport class PolicyComponent implements OnInit {\r\n\r\n  constructor(private titleService: Title) { }\r\n\r\n  ngOnInit(): void {\r\n    this.titleService.setTitle(\"Privacy Policy\");\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.titleService.setTitle(\"Covidbit\");\r\n  }\r\n\r\n}\r\n","<nb-card>\r\n    <nb-card-header>\r\n        <h1>Privacy Policy</h1>\r\n    </nb-card-header>\r\n    <nb-card-body>\r\n            <p><i>Last updated: March 09, 2021</i></p>\r\n\r\n            <p>CovidBit operates the www.covidbit.ca website, which provides the SERVICE.</p>\r\n\r\n            <p>This page is used to inform website visitors regarding our policies with the collection, use, and\r\n                disclosure\r\n                of Personal Information if anyone decided to use our Service, the CovidBit website.</p>\r\n\r\n            <p>If you choose to use our Service, then you agree to the collection and use of information in relation\r\n                with\r\n                this policy. The Personal Information that we collect are used for providing and improving the Service.\r\n                We\r\n                will not use or share your information with anyone except as described in this Privacy Policy.</p>\r\n\r\n            <p>The terms used in this Privacy Policy have the same meanings as in our Terms and Conditions, which is\r\n                accessible at www.covidbit.ca, unless otherwise defined in this Privacy Policy.</p>\r\n\r\n            <h4>Information Collection and Use</h4>\r\n\r\n            <p>For a better experience while using our Service, we may require you to provide us with certain personally\r\n                identifiable information, including but not limited to your name, phone number, and postal address. The\r\n                information that we collect will be used to contact or identify you.</p>\r\n\r\n            <h4>Log Data</h4>\r\n\r\n            <p>We want to inform you that whenever you visit our Service, we collect information that your browser sends\r\n                to\r\n                us that is called Log Data. This Log Data may include information such as your computer’s Internet\r\n                Protocol\r\n                (\"IP\") address, browser version, pages of our Service that you visit, the time and date of your visit,\r\n                the\r\n                time spent on those pages, and other statistics.</p>\r\n\r\n            <h4>Service Providers</h4>\r\n\r\n            <p>We may employ third-party companies and individuals due to the following reasons:</p>\r\n\r\n            <ul>\r\n                <li>To facilitate our Service;</li>\r\n                <li>To provide the Service on our behalf;</li>\r\n                <li>To perform Service-related services; or</li>\r\n                <li>To assist us in analyzing how our Service is used.</li>\r\n            </ul>\r\n\r\n            <p>We want to inform our Service users that these third parties have access to your Personal Information.\r\n                The\r\n                reason is to perform the tasks assigned to them on our behalf. However, they are obligated not to\r\n                disclose\r\n                or use the information for any other purpose.</p>\r\n\r\n            <h4>Security</h4>\r\n\r\n            <p>We value your trust in providing us your Personal Information, thus we are striving to use commercially\r\n                acceptable means of protecting it. But remember that no method of transmission over the internet, or\r\n                method\r\n                of electronic storage is 100% secure and reliable, and we cannot guarantee its absolute security.</p>\r\n\r\n            <h4>Links to Other Sites</h4>\r\n\r\n            <p>Our Service may contain links to other sites. If you click on a third-party link, you will be directed to\r\n                that site. Note that these external sites are not operated by us. Therefore, we strongly advise you to\r\n                review the Privacy Policy of these websites. We have no control over, and assume no responsibility for\r\n                the\r\n                content, privacy policies, or practices of any third-party sites or services.</p>\r\n\r\n            <p>Children's Privacy</p>\r\n\r\n            <p>Our Services do not address anyone under the age of 13. We do not knowingly collect personal identifiable\r\n                information from children under 13. In the case we discover that a child under 13 has provided us with\r\n                personal information, we immediately delete this from our servers. If you are a parent or guardian and\r\n                you\r\n                are aware that your child has provided us with personal information, please contact us so that we will\r\n                be\r\n                able to do necessary actions.</p>\r\n\r\n            <h4>Changes to This Privacy Policy</h4>\r\n\r\n            <p>We may update our Privacy Policy from time to time. Thus, we advise you to review this page periodically\r\n                for\r\n                any changes. We will notify you of any changes by posting the new Privacy Policy on this page. These\r\n                changes\r\n                are effective immediately, after they are posted on this page.</p>\r\n    </nb-card-body>\r\n    <nb-card-footer>\r\n        <h4>Contact Us</h4>\r\n        <p>If you have any questions about this Privacy Policy, You can <a routerLink=\"/about-us\"\r\n                routerLinkActive=\"active\">contact</a> us.\r\n    </nb-card-footer>\r\n</nb-card>","// Server - CovidBit - Fast Pandas\r\n// Created: 15 February, 2021, Adilah\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n}\r\n","<!-- Server - CovidBit - Fast Pandas\r\n     Created: 15 February, 2021, Adilah-->\r\n\r\n\r\n<!-- home -->\r\n<div class=\"about-container\">\r\n  <div class=\"main-layout\">\r\n    <div class=\"center-layout\" style=\"height: 900px\">\r\n      <h1>COVIDBIT</h1>\r\n      <h4>COVID tracker for small businesses in the GTA.</h4>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- about -->\r\n<div class=\"about-container\">\r\n  <div class=\"about-img\"></div>\r\n  <div class=\"about-text\">\r\n    <p>ABOUT US</p>\r\n    <h2>We're <br>supporting <br>small <br>businesses <br>across the GTA.</h2>\r\n    <hr>\r\n    <p>The coronavirus (COVID-19) pandemic has changed Canadian lives forever,\r\n      from how we live to how we work, and how we interact with others. In\r\n      particular, it has negatively impacted small businesses. Our goal is\r\n      to help small businesses in the GTA maneuver this new world and allow\r\n      users to make well-informed decisions.\r\n    </p>\r\n  </div>\r\n</div>\r\n\r\n<!-- users -->\r\n<div class=\"card-row\">\r\n  <div class=\"card-col\" class=\"container\">\r\n    <nb-card size=\"tiny\" class=\"heading\">\r\n      <div class=\"nb-card-header\" class=\"header-text\">what users can expect\r\n        <hr>\r\n      </div>\r\n    </nb-card>\r\n    <nb-card size=\"large\" class=\"info\">\r\n      <div class=\"nb-card-content\" class=\"info-text\">\r\n        <div class=\"nb-card-header\">\r\n          <nb-icon icon=\"arrow-circle-up-outline\"></nb-icon>\r\n        </div>\r\n        <div class=\"nb-card-body\">High Risk Zones</div>\r\n        <div class=\"nb-card-text\">Be the first to find out about reported cases that occur in your area and potential\r\n          high risk zones</div>\r\n      </div>\r\n    </nb-card>\r\n    <nb-card size=\"large\" class=\"info\">\r\n      <div class=\"nb-card-content\" class=\"info-text\">\r\n        <div class=\"nb-card-header\">\r\n          <nb-icon icon=\"star\"></nb-icon>\r\n        </div>\r\n        <div class=\"nb-card-body\">safety Measures</div>\r\n        <div class=\"nb-card-text\">Have direct access to the methods businesses are using to keep you safe!</div>\r\n      </div>\r\n    </nb-card>\r\n    <nb-card size=\"large\" class=\"info\">\r\n      <div class=\"nb-card-content\" class=\"info-text\">\r\n        <div class=\"nb-card-header\">\r\n          <nb-icon icon=\"edit-2-outline\"></nb-icon>\r\n        </div>\r\n        <div class=\"nb-card-body\">Reported Cases</div>\r\n        <div class=\"nb-card-text\">Allow users to see if businesses have had reported cases within a given time frame\r\n        </div>\r\n      </div>\r\n    </nb-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- businesses -->\r\n<div class=\"card-row\">\r\n  <div class=\"card-col\" class=\"container\">\r\n    <nb-card size=\"tiny\" class=\"heading\">\r\n      <div class=\"nb-card-header\" class=\"header-text\">what small businesses can expect\r\n        <hr>\r\n      </div>\r\n    </nb-card>\r\n    <nb-card size=\"large\" class=\"info\">\r\n      <div class=\"nb-card-content\" class=\"info-text\">\r\n        <div class=\"nb-card-header\">\r\n          <nb-icon icon=\"clock-outline\"></nb-icon>\r\n        </div>\r\n        <div class=\"nb-card-body\">Schedule Appointments</div>\r\n        <div class=\"nb-card-text\">Allow customers to schedule appointments to limit the number of people in enclosed\r\n          space</div>\r\n      </div>\r\n    </nb-card>\r\n    <nb-card size=\"large\" class=\"info\">\r\n      <div class=\"nb-card-content\" class=\"info-text\">\r\n        <div class=\"nb-card-header\">\r\n          <nb-icon icon=\"people-outline\"></nb-icon>\r\n        </div>\r\n        <div class=\"nb-card-body\">Contact Tracing Method</div>\r\n        <div class=\"nb-card-text\">Digital form businesses can use to allow customers to enter their information to be\r\n          notified of a potential case</div>\r\n      </div>\r\n    </nb-card>\r\n    <nb-card size=\"large\" class=\"info\">\r\n      <div class=\"nb-card-content\" class=\"info-text\">\r\n        <div class=\"nb-card-header\">\r\n          <nb-icon icon=\"shield-outline\"></nb-icon>\r\n        </div>\r\n        <div class=\"nb-card-body\">Certifications</div>\r\n        <div class=\"nb-card-text\">Can provide certifications based on the safety measures the business implements to\r\n          protect current and potential customers</div>\r\n      </div>\r\n    </nb-card>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n// Components\r\nimport { HomeComponent } from './static-pages/home/home.component';\r\nimport { LoginFormComponent } from './login-form/login-form.component';\r\nimport { RegistrationFormComponent } from './registration-form/registration-form.component';\r\nimport { NotFoundComponent } from './static-pages/not-found/not-found.component'\r\nimport { BusinessProfileComponent } from './business-dashboard/business-profile/business-profile.component';\r\nimport { BusinessDashboardComponent } from './business-dashboard/business-dashboard.component';\r\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\r\nimport { TrackerMapComponent } from './tracker-map/tracker-map.component';\r\nimport { BusinessUserViewComponent } from './business-user-view/business-user-view.component';\r\nimport { CertificationFormComponent } from './business-dashboard/certification-form/certification-form.component';\r\nimport { PolicyComponent } from './static-pages/policy/policy.component';\r\nimport { TermsComponent } from './static-pages/terms/terms.component';\r\nimport { NewPasswordComponent } from './login-form/new-password/new-password.component';\r\nimport { ResetPasswordComponent } from './login-form/reset-password/reset-password.component';\r\n\r\nimport { ReviewComponent } from './business-user-view/review/review.component';\r\nimport { ReviewConfirmationComponent } from './business-user-view/review/review-confirmation/review-confirmation.component';\r\n\r\nimport { AboutUsComponent } from './static-pages/about-us/about-us.component';\r\n\r\n// Guards\r\nimport { AuthGuard } from \"./services/auth-services/auth.guard\";\r\nimport { AdminGuard } from \"./services/auth-services/admin.guard\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    path: 'terms',\r\n    component: TermsComponent\r\n  },\r\n  {\r\n    path: 'policy',\r\n    component: PolicyComponent\r\n  },\r\n  {\r\n    path: 'about-us',\r\n    component: AboutUsComponent\r\n  },\r\n  {\r\n    path: 'registration-form',\r\n    component: RegistrationFormComponent\r\n  },\r\n  {\r\n    path: 'login-form',\r\n    component: LoginFormComponent\r\n  },\r\n  {\r\n    path: 'new-password',\r\n    component: NewPasswordComponent\r\n  },\r\n  {\r\n    path: 'reset-password/:token',\r\n    component: ResetPasswordComponent\r\n  },\r\n  {\r\n    path: 'business-dashboard/:id',\r\n    component: BusinessDashboardComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'business-profile/:id',\r\n    component: BusinessProfileComponent,\r\n    //canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'certification-form/:id',\r\n    component: CertificationFormComponent\r\n  },\r\n  {\r\n    path: 'business-user-view/:id',\r\n    component: BusinessUserViewComponent\r\n  },\r\n  {\r\n    path: 'admin-dashboard',\r\n    component: AdminDashboardComponent,\r\n    canActivate: [AdminGuard]\r\n  },\r\n  {\r\n    path: 'tracker-map',\r\n    component: TrackerMapComponent\r\n  },\r\n  {\r\n    path: 'review/:id',\r\n    component: ReviewComponent\r\n  },\r\n  {\r\n    path: 'reviewConfirmation',\r\n    component: ReviewConfirmationComponent\r\n  },\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n  { path: '**', component: NotFoundComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(public auth: AuthService, public router: Router) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.auth.isLoggedIn !== true) {\r\n      localStorage.setItem('auth_warning', 'true');\r\n      this.router.navigate(['login-form']);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","'use strict';\r\n\r\nexport const categories = [\r\n  { name: \"Restaurant\" },\r\n  { name: \"Boutique\" },\r\n  { name: \"Specialized Skill\" },\r\n  { name: \"Food and Hospitality\" },\r\n  { name: \"IT and Internet\" },\r\n  { name: \"Business\" },\r\n  { name: \"Labour\" }\r\n]\r\n\r\nexport const background = [\r\n  \"#37393A\",\r\n  \"#475966\",\r\n  \"#577892\",\r\n  \"#77B6EA\",\r\n  \"#9FC5E4\",\r\n  \"#C7D3DD\",\r\n  \"#CFCED3\",\r\n  \"#D6C9C9\",\r\n  \"#DFDCDE\",\r\n  \"#E8EEF2\"\r\n]\r\n\r\nexport const hoverBackground = [\r\n  \"#E8EEF2\",\r\n  \"#DFDCDE\",\r\n  \"#D6C9C9\",\r\n  \"#CFCED3\",\r\n  \"#C7D3DD\",\r\n  \"#9FC5E4\",\r\n  \"#77B6EA\",\r\n  \"#577892\",\r\n  \"#475966\"\r\n]\r\n\r\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'September', 'October', 'November', 'December']\r\n\r\nexport const GTA = [\"Halton\", \"Peel\", \"York\", \"Durham\", \"Toronto\"];\r\n\r\nexport const gender = [{ name: \"Male\" }, { name: \"Female\" }, { name: 'Prefer not to say' }];\r\n\r\nexport const statusCases = [\r\n  { name: 'Under Investigation' },\r\n  { name: 'Recovered' },\r\n  { name: 'Self-Isolating' },\r\n  { name: 'Hospitalized' },\r\n  { name: 'Deceased' },\r\n  { name: 'Hospitalized-ICU' },\r\n];\r\n\r\nexport const acquisitionType = [{ name: 'Travel' },\r\n{ name: 'Workplace Outbreak' },\r\n{ name: 'Close Contact' },\r\n{ name: 'Local Transmission' },\r\n{ name: 'Institutional Outbreak' },\r\n{ name: 'Unknown' }]\r\n\r\nexport const emptyField = \"(no data)\"","// Server - CovidBit - Fast Pandas\r\n// Created: 23, March, 2021, Teresa Costa\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api-covid-services/api.service';\r\nimport { DataService } from 'src/app/services/data-services/data.service';\r\nimport * as myGlobals from '../../../globals';\r\ndeclare const formatDate: any;\r\n\r\n@Component({\r\n  selector: 'app-health-region-cases',\r\n  templateUrl: './health-region-cases.component.html',\r\n  styleUrls: ['./health-region-cases.component.scss']\r\n})\r\nexport class HealthRegionCasesComponent implements OnInit {\r\n\r\n  // Class Variables\r\n  // Chart\r\n  chartData: any;\r\n  chartOptions: any;\r\n  caseData: any;\r\n  chartLabel: Array<string> = myGlobals.GTA;\r\n  chartCount: Array<number> = [];\r\n\r\n  // Set date\r\n  today: Date = new Date(new Date().setDate(new Date().getDate()-1));\r\n  formatToday: String = \"\";\r\n\r\n  constructor(public data: DataService, private apiService: ApiService) {\r\n    this.formatToday = formatDate(this.today );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiService.getHealthRegion(this.formatToday).subscribe((dataOne) => {\r\n      this.caseData = dataOne;\r\n      for (let i = 0; i < this.chartLabel.length; i++) {\r\n        this.countCasesHealthRegion(this.chartLabel[i]);\r\n      }\r\n      this.chartData = {\r\n        labels: this.chartLabel,\r\n        datasets: [{\r\n          data: this.chartCount,\r\n          backgroundColor: myGlobals.background,\r\n          hoverBackgroundColor: myGlobals.hoverBackground,\r\n        }]\r\n      };\r\n      this.chartOptions = {\r\n        legend: {\r\n          position: 'left',\r\n          labels: {\r\n            fontColor: 'rgb(255, 99, 132)'\r\n          }\r\n        }\r\n      };\r\n    }\r\n    )\r\n  }\r\n\r\n  countCasesHealthRegion(myRegion) {\r\n    let cnt = 0;\r\n    for (var i = 0; i <= this.caseData.cases.length - 1; i++) {\r\n      if (this.caseData.cases[i].health_region === myRegion) {\r\n        cnt = this.caseData.cases[i].cumulative_cases;\r\n        this.chartCount.push(cnt);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<p-chart type=\"pie\" [data]=\"chartData\" [options]=\"chartOptions\" [style]=\"{width:'100%', float:'center'}\"></p-chart>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}